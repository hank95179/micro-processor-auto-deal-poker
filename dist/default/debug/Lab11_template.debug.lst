

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 19 15:08:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.32
    59                           ; Generated 02/02/2021 GMT
    60                           ; 
    61                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4520 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     
    94                           	psect	idataCOMRAM
    95  001C7E                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _poker_time
    99  001C7E  000D               	dw	13
   100                           
   101                           ;initializer for _degree
   102  001C80  FFA6               	dw	65446
   103  0000                     _TRISAbits	set	3986
   104  0000                     _TRISD	set	3989
   105  0000                     _TRISB	set	3987
   106  0000                     _PORTAbits	set	3968
   107  0000                     _LATD	set	3980
   108  0000                     _PORTBbits	set	3969
   109  0000                     _LATDbits	set	3980
   110  0000                     _TRISA	set	3986
   111  0000                     _TRISCbits	set	3988
   112  0000                     _CCPR1L	set	4030
   113  0000                     _PR2	set	4043
   114  0000                     _T2CON	set	4042
   115  0000                     _ADCON0bits	set	4034
   116  0000                     _ADRESL	set	4035
   117  0000                     _ADRESH	set	4036
   118  0000                     _ADCON2bits	set	4032
   119  0000                     _ADCON1	set	4033
   120  0000                     _CCP1CON	set	4029
   121  0000                     _RCREG	set	4014
   122  0000                     _TXREG	set	4013
   123  0000                     _IPR1bits	set	3999
   124  0000                     _PIE1bits	set	3997
   125  0000                     _PIR1bits	set	3998
   126  0000                     _RCSTAbits	set	4011
   127  0000                     _SPBRG	set	4015
   128  0000                     _BAUDCONbits	set	4024
   129  0000                     _TXSTAbits	set	4012
   130  0000                     _OSCCONbits	set	4051
   131  0000                     _ADFM	set	32263
   132  0000                     _CREN	set	32092
   133  0000                     _RCIF	set	31989
   134  0000                     _IRCF0	set	32412
   135  0000                     _IRCF1	set	32413
   136  0000                     _IRCF2	set	32414
   137  0000                     _INTCON2bits	set	4081
   138  0000                     _INTCONbits	set	4082
   139                           
   140                           	psect	smallconst
   141  000600                     __psmallconst:
   142                           	callstack 0
   143  000600  00                 	db	0
   144  000601                     STR_10:
   145  000601  72                 	db	114	;'r'
   146  000602  65                 	db	101	;'e'
   147  000603  74                 	db	116	;'t'
   148  000604  75                 	db	117	;'u'
   149  000605  72                 	db	114	;'r'
   150  000606  6E                 	db	110	;'n'
   151  000607  20                 	db	32
   152  000608  66                 	db	102	;'f'
   153  000609  72                 	db	114	;'r'
   154  00060A  6F                 	db	111	;'o'
   155  00060B  6D                 	db	109	;'m'
   156  00060C  20                 	db	32
   157  00060D  74                 	db	116	;'t'
   158  00060E  75                 	db	117	;'u'
   159  00060F  72                 	db	114	;'r'
   160  000610  6E                 	db	110	;'n'
   161  000611  0D                 	db	13
   162  000612  0A                 	db	10
   163  000613  00                 	db	0
   164  000614                     STR_3:
   165  000614  72                 	db	114	;'r'
   166  000615  65                 	db	101	;'e'
   167  000616  74                 	db	116	;'t'
   168  000617  75                 	db	117	;'u'
   169  000618  72                 	db	114	;'r'
   170  000619  6E                 	db	110	;'n'
   171  00061A  20                 	db	32
   172  00061B  66                 	db	102	;'f'
   173  00061C  72                 	db	114	;'r'
   174  00061D  6F                 	db	111	;'o'
   175  00061E  6D                 	db	109	;'m'
   176  00061F  20                 	db	32
   177  000620  72                 	db	114	;'r'
   178  000621  75                 	db	117	;'u'
   179  000622  6E                 	db	110	;'n'
   180  000623  0D                 	db	13
   181  000624  0A                 	db	10
   182  000625  00                 	db	0
   183  000626                     STR_7:
   184  000626  31                 	db	49	;'1'
   185  000627  3C                 	db	60	;'<'
   186  000628  3D                 	db	61	;'='
   187  000629  6E                 	db	110	;'n'
   188  00062A  3C                 	db	60	;'<'
   189  00062B  3D                 	db	61	;'='
   190  00062C  39                 	db	57	;'9'
   191  00062D  3A                 	db	58	;':'
   192  00062E  0D                 	db	13
   193  00062F  0A                 	db	10
   194  000630  00                 	db	0
   195  000631                     STR_12:
   196  000631  64                 	db	100	;'d'
   197  000632  65                 	db	101	;'e'
   198  000633  67                 	db	103	;'g'
   199  000634  72                 	db	114	;'r'
   200  000635  65                 	db	101	;'e'
   201  000636  65                 	db	101	;'e'
   202  000637  00                 	db	0
   203  000638                     STR_4:
   204  000638  08                 	db	8
   205  000639  08                 	db	8
   206  00063A  25                 	db	37
   207  00063B  32                 	db	50	;'2'
   208  00063C  64                 	db	100	;'d'
   209  00063D  00                 	db	0
   210  00063E                     STR_11:
   211  00063E  6D                 	db	109	;'m'
   212  00063F  6F                 	db	111	;'o'
   213  000640  74                 	db	116	;'t'
   214  000641  6F                 	db	111	;'o'
   215  000642  72                 	db	114	;'r'
   216  000643  00                 	db	0
   217  000644                     STR_15:
   218  000644  72                 	db	114	;'r'
   219  000645  75                 	db	117	;'u'
   220  000646  6E                 	db	110	;'n'
   221  000647  32                 	db	50	;'2'
   222  000648  00                 	db	0
   223  000649                     STR_13:
   224  000649  74                 	db	116	;'t'
   225  00064A  75                 	db	117	;'u'
   226  00064B  72                 	db	114	;'r'
   227  00064C  6E                 	db	110	;'n'
   228  00064D  00                 	db	0
   229  00064E                     STR_14:
   230  00064E  72                 	db	114	;'r'
   231  00064F  75                 	db	117	;'u'
   232  000650  6E                 	db	110	;'n'
   233  000651  00                 	db	0
   234  000652                     STR_2:
   235  000652  20                 	db	32
   236  000653  20                 	db	32
   237  000654  00                 	db	0
   238  000655                     STR_1:
   239  000655  6F                 	db	111	;'o'
   240  000656  6E                 	db	110	;'n'
   241  000657  00                 	db	0
   242  000658  00                 	db	0	; dummy byte at the end
   243  0000                     
   244                           ; #config settings
   245                           
   246                           	psect	cinit
   247  0018E4                     __pcinit:
   248                           	callstack 0
   249  0018E4                     start_initialization:
   250                           	callstack 0
   251  0018E4                     __initialization:
   252                           	callstack 0
   253                           
   254                           ; Initialize objects allocated to COMRAM (4 bytes)
   255                           ; load TBLPTR registers with __pidataCOMRAM
   256  0018E4  0E7E               	movlw	low __pidataCOMRAM
   257  0018E6  6EF6               	movwf	tblptrl,c
   258  0018E8  0E1C               	movlw	high __pidataCOMRAM
   259  0018EA  6EF7               	movwf	tblptrh,c
   260  0018EC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   261  0018EE  6EF8               	movwf	tblptru,c
   262  0018F0  EE00  F069         	lfsr	0,__pdataCOMRAM
   263  0018F4  EE10 F004          	lfsr	1,4
   264  0018F8                     copy_data0:
   265  0018F8  0009               	tblrd		*+
   266  0018FA  CFF5 FFEE          	movff	tablat,postinc0
   267  0018FE  50E5               	movf	postdec1,w,c
   268  001900  50E1               	movf	fsr1l,w,c
   269  001902  E1FA               	bnz	copy_data0
   270                           
   271                           ; Clear objects allocated to BANK1 (32 bytes)
   272  001904  EE01  F000         	lfsr	0,__pbssBANK1
   273  001908  0E20               	movlw	32
   274  00190A                     clear_0:
   275  00190A  6AEE               	clrf	postinc0,c
   276  00190C  06E8               	decf	wreg,f,c
   277  00190E  E1FD               	bnz	clear_0
   278                           
   279                           ; Clear objects allocated to BANK0 (42 bytes)
   280  001910  EE00  F0CE         	lfsr	0,__pbssBANK0
   281  001914  0E2A               	movlw	42
   282  001916                     clear_1:
   283  001916  6AEE               	clrf	postinc0,c
   284  001918  06E8               	decf	wreg,f,c
   285  00191A  E1FD               	bnz	clear_1
   286                           
   287                           ; Clear objects allocated to COMRAM (12 bytes)
   288  00191C  EE00  F05D         	lfsr	0,__pbssCOMRAM
   289  001920  0E0C               	movlw	12
   290  001922                     clear_2:
   291  001922  6AEE               	clrf	postinc0,c
   292  001924  06E8               	decf	wreg,f,c
   293  001926  E1FD               	bnz	clear_2
   294  001928                     end_of_initialization:
   295                           	callstack 0
   296  001928                     __end_of__initialization:
   297                           	callstack 0
   298  001928  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   299  00192A  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   300  00192C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   301  00192E  6EF8               	movwf	tblptru,c
   302  001930  0100               	movlb	0
   303  001932  EF67  F008         	goto	_main	;jump to C main() function
   304                           
   305                           	psect	bssCOMRAM
   306  00005D                     __pbssCOMRAM:
   307                           	callstack 0
   308  00005D                     _nout:
   309                           	callstack 0
   310  00005D                     	ds	2
   311  00005F                     _width:
   312                           	callstack 0
   313  00005F                     	ds	2
   314  000061                     _prec:
   315                           	callstack 0
   316  000061                     	ds	2
   317  000063                     _flags:
   318                           	callstack 0
   319  000063                     	ds	2
   320  000065                     _step_size:
   321                           	callstack 0
   322  000065                     	ds	2
   323  000067                     _lenStr:
   324                           	callstack 0
   325  000067                     	ds	2
   326                           
   327                           	psect	dataCOMRAM
   328  000069                     __pdataCOMRAM:
   329                           	callstack 0
   330  000069                     _poker_time:
   331                           	callstack 0
   332  000069                     	ds	2
   333  00006B                     _degree:
   334                           	callstack 0
   335  00006B                     	ds	2
   336                           
   337                           	psect	bssBANK0
   338  0000CE                     __pbssBANK0:
   339                           	callstack 0
   340  0000CE                     _time:
   341                           	callstack 0
   342  0000CE                     	ds	2
   343  0000D0                     _str:
   344                           	callstack 0
   345  0000D0                     	ds	20
   346  0000E4                     _mystring:
   347                           	callstack 0
   348  0000E4                     	ds	20
   349                           
   350                           	psect	bssBANK1
   351  000100                     __pbssBANK1:
   352                           	callstack 0
   353  000100                     _dbuf:
   354                           	callstack 0
   355  000100                     	ds	32
   356                           
   357                           	psect	cstackBANK0
   358  000080                     __pcstackBANK0:
   359                           	callstack 0
   360  000080                     vfpfcnvrt@ll:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x0
   364  000080                     	ds	8
   365  000088                     _vfpfcnvrt$1806:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x8
   369  000088                     	ds	2
   370  00008A                     ?_vfprintf:
   371                           	callstack 0
   372  00008A                     vfprintf@fp:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0xA
   376  00008A                     	ds	2
   377  00008C                     vfprintf@fmt:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xC
   381  00008C                     	ds	2
   382  00008E                     vfprintf@ap:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xE
   386  00008E                     	ds	2
   387  000090                     ?_sprintf:
   388                           	callstack 0
   389  000090                     sprintf@s:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x10
   393  000090                     	ds	2
   394  000092                     sprintf@fmt:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x12
   398  000092                     	ds	4
   399  000096                     sprintf@ap:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x16
   403  000096                     	ds	2
   404  000098                     sprintf@f:
   405                           	callstack 0
   406                           
   407                           ; 6 bytes @ 0x18
   408  000098                     	ds	6
   409  00009E                     run@word:
   410                           	callstack 0
   411                           
   412                           ; 20 bytes @ 0x1E
   413  00009E                     	ds	20
   414  0000B2                     run@now_state:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x32
   418  0000B2                     	ds	2
   419  0000B4                     run@cur:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x34
   423  0000B4                     	ds	2
   424  0000B6                     run@c:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x36
   428  0000B6                     	ds	1
   429  0000B7                     Mode_run@word:
   430                           	callstack 0
   431  0000B7                     Mode_run2@word:
   432                           	callstack 0
   433                           
   434                           ; 20 bytes @ 0x37
   435  0000B7                     	ds	20
   436  0000CB                     _Mode_run$2073:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x4B
   440  0000CB                     	ds	2
   441  0000CD                     Mode_run@c:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x4D
   445  0000CD                     	ds	1
   446                           
   447                           	psect	cstackCOMRAM
   448  000001                     __pcstackCOMRAM:
   449                           	callstack 0
   450  000001                     i1UART_Write@data:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x0
   454  000001                     	ds	1
   455  000002                     MyusartRead@c:
   456                           	callstack 0
   457  000002                     i1UART_Write_Text@text:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x1
   461  000002                     	ds	2
   462  000004                     ??i1_UART_Write_Text:
   463                           
   464                           ; 1 bytes @ 0x3
   465  000004                     	ds	2
   466  000006                     i1UART_Write_Text@i:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x5
   470  000006                     	ds	2
   471  000008                     ??_Lo_ISR:
   472                           
   473                           ; 1 bytes @ 0x7
   474  000008                     	ds	9
   475  000011                     ?_strcmp:
   476                           	callstack 0
   477  000011                     ?_isspace:
   478                           	callstack 0
   479  000011                     ?_isdigit:
   480                           	callstack 0
   481  000011                     ?_strlen:
   482                           	callstack 0
   483  000011                     ?_ADC_Read:
   484                           	callstack 0
   485  000011                     ?___aodiv:
   486                           	callstack 0
   487  000011                     ?___aomod:
   488                           	callstack 0
   489  000011                     UART_Write@data:
   490                           	callstack 0
   491  000011                     ClearBuffer@i:
   492                           	callstack 0
   493  000011                     ADC_Read@channel:
   494                           	callstack 0
   495  000011                     isdigit@c:
   496                           	callstack 0
   497  000011                     isspace@c:
   498                           	callstack 0
   499  000011                     fputc@c:
   500                           	callstack 0
   501  000011                     strcmp@l:
   502                           	callstack 0
   503  000011                     strlen@s:
   504                           	callstack 0
   505  000011                     ___aodiv@dividend:
   506                           	callstack 0
   507  000011                     ___aomod@dividend:
   508                           	callstack 0
   509                           
   510                           ; 8 bytes @ 0x10
   511  000011                     	ds	1
   512  000012                     ?_GetString:
   513                           	callstack 0
   514  000012                     UART_Write_Text@text:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x11
   518  000012                     	ds	1
   519  000013                     ??_isspace:
   520  000013                     ??_isdigit:
   521  000013                     ??_ADC_Read:
   522  000013                     fputc@fp:
   523                           	callstack 0
   524  000013                     strcmp@r:
   525                           	callstack 0
   526  000013                     strlen@a:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x12
   530  000013                     	ds	1
   531  000014                     ??_UART_Write_Text:
   532  000014                     GetString@i:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x13
   536  000014                     	ds	1
   537  000015                     ??_strcmp:
   538  000015                     ??_fputc:
   539  000015                     ADC_Read@digital:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x14
   543  000015                     	ds	1
   544  000016                     GetString@c:
   545                           	callstack 0
   546  000016                     UART_Write_Text@i:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x15
   550  000016                     	ds	1
   551  000017                     ?___wmul:
   552                           	callstack 0
   553  000017                     _isspace$1712:
   554                           	callstack 0
   555  000017                     ___wmul@multiplier:
   556                           	callstack 0
   557  000017                     strcpy@dest:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x16
   561  000017                     	ds	1
   562  000018                     ??_Mode_turn:
   563                           
   564                           ; 1 bytes @ 0x17
   565  000018                     	ds	1
   566  000019                     ___wmul@multiplicand:
   567                           	callstack 0
   568  000019                     strcpy@src:
   569                           	callstack 0
   570  000019                     ___aodiv@divisor:
   571                           	callstack 0
   572  000019                     ___aomod@divisor:
   573                           	callstack 0
   574                           
   575                           ; 8 bytes @ 0x18
   576  000019                     	ds	1
   577  00001A                     fputs@s:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x19
   581  00001A                     	ds	1
   582  00001B                     ??_strcpy:
   583  00001B                     ___wmul@product:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x1A
   587  00001B                     	ds	1
   588  00001C                     fputs@fp:
   589                           	callstack 0
   590                           
   591                           ; 2 bytes @ 0x1B
   592  00001C                     	ds	1
   593  00001D                     ?_atoi:
   594                           	callstack 0
   595  00001D                     ?___awdiv:
   596                           	callstack 0
   597  00001D                     ___awdiv@dividend:
   598                           	callstack 0
   599  00001D                     atoi@s:
   600                           	callstack 0
   601  00001D                     strcpy@s:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x1C
   605  00001D                     	ds	1
   606  00001E                     fputs@c:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x1D
   610  00001E                     	ds	1
   611  00001F                     ??_atoi:
   612  00001F                     ___awdiv@divisor:
   613                           	callstack 0
   614  00001F                     fputs@i:
   615                           	callstack 0
   616  00001F                     strcpy@d:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x1E
   620  00001F                     	ds	2
   621  000021                     ?_pad:
   622                           	callstack 0
   623  000021                     ___aodiv@counter:
   624                           	callstack 0
   625  000021                     ___aomod@counter:
   626                           	callstack 0
   627  000021                     ___awdiv@counter:
   628                           	callstack 0
   629  000021                     pad@fp:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x20
   633  000021                     	ds	1
   634  000022                     ___aodiv@sign:
   635                           	callstack 0
   636  000022                     ___aomod@sign:
   637                           	callstack 0
   638  000022                     ___awdiv@sign:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x21
   642  000022                     	ds	1
   643  000023                     ?_abs:
   644                           	callstack 0
   645  000023                     ___awdiv@quotient:
   646                           	callstack 0
   647  000023                     atoi@neg:
   648                           	callstack 0
   649  000023                     pad@buf:
   650                           	callstack 0
   651  000023                     abs@a:
   652                           	callstack 0
   653  000023                     ___aodiv@quotient:
   654                           	callstack 0
   655                           
   656                           ; 8 bytes @ 0x22
   657  000023                     	ds	2
   658  000025                     ??_abs:
   659  000025                     _atoi$1694:
   660                           	callstack 0
   661  000025                     pad@p:
   662                           	callstack 0
   663                           
   664                           ; 2 bytes @ 0x24
   665  000025                     	ds	2
   666  000027                     ??_pad:
   667  000027                     _atoi$1696:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x26
   671  000027                     	ds	1
   672  000028                     pad@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x27
   676  000028                     	ds	1
   677  000029                     _atoi$1695:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x28
   681  000029                     	ds	1
   682  00002A                     atoi@n:
   683                           	callstack 0
   684  00002A                     pad@w:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x29
   688  00002A                     	ds	2
   689  00002C                     ?_dtoa:
   690                           	callstack 0
   691  00002C                     dtoa@fp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2B
   695  00002C                     	ds	2
   696  00002E                     dtoa@d:
   697                           	callstack 0
   698                           
   699                           ; 8 bytes @ 0x2D
   700  00002E                     	ds	8
   701  000036                     ??_dtoa:
   702                           
   703                           ; 1 bytes @ 0x35
   704  000036                     	ds	8
   705  00003E                     _dtoa$1791:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x3D
   709  00003E                     	ds	2
   710  000040                     dtoa@p:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x3F
   714  000040                     	ds	2
   715  000042                     dtoa@w:
   716                           	callstack 0
   717                           
   718                           ; 2 bytes @ 0x41
   719  000042                     	ds	2
   720  000044                     dtoa@s:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x43
   724  000044                     	ds	2
   725  000046                     dtoa@n:
   726                           	callstack 0
   727                           
   728                           ; 8 bytes @ 0x45
   729  000046                     	ds	8
   730  00004E                     dtoa@i:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0x4D
   734  00004E                     	ds	2
   735  000050                     ?_vfpfcnvrt:
   736                           	callstack 0
   737  000050                     vfpfcnvrt@fp:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x4F
   741  000050                     	ds	2
   742  000052                     vfpfcnvrt@fmt:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x51
   746  000052                     	ds	2
   747  000054                     vfpfcnvrt@ap:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x53
   751  000054                     	ds	2
   752  000056                     ??_vfpfcnvrt:
   753                           
   754                           ; 1 bytes @ 0x55
   755  000056                     	ds	4
   756  00005A                     vfprintf@cfmt:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x59
   760  00005A                     	ds	2
   761  00005C                     ??_run:
   762                           
   763                           ; 1 bytes @ 0x5B
   764  00005C                     	ds	1
   765  00005D                     
   766                           ; 1 bytes @ 0x5C
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 181 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   786 ;;      Params:         0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels required when called: 14
   792 ;; This function calls:
   793 ;;		_ADC_Initialize
   794 ;;		_ClearBuffer
   795 ;;		_GetString
   796 ;;		_Mode_degree
   797 ;;		_Mode_run
   798 ;;		_Mode_run2
   799 ;;		_Mode_turn
   800 ;;		_UART_Initialize
   801 ;;		_strcmp
   802 ;;		_strcpy
   803 ;; This function is called by:
   804 ;;		Startup code after reset
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text0
   809  0010CE                     __ptext0:
   810                           	callstack 0
   811  0010CE                     _main:
   812                           	callstack 17
   813  0010CE                     
   814                           ;main.c: 183:     UART_Initialize();
   815  0010CE  ECF0  F00D         	call	_UART_Initialize	;wreg free
   816                           
   817                           ;main.c: 184:     ADC_Initialize();
   818  0010D2  EC17  F00E         	call	_ADC_Initialize	;wreg free
   819  0010D6                     
   820                           ;main.c: 187:     INTCON2bits.RBPU = 1;
   821  0010D6  8EF1               	bsf	241,7,c	;volatile
   822  0010D8                     
   823                           ;main.c: 188:     TRISCbits.RC2 = 0;
   824  0010D8  9494               	bcf	148,2,c	;volatile
   825  0010DA                     
   826                           ;main.c: 189:     CCP1CON = 0b00001100;
   827  0010DA  0E0C               	movlw	12
   828  0010DC  6EBD               	movwf	189,c	;volatile
   829  0010DE                     
   830                           ;main.c: 190:     T2CON = 0b00000111;
   831  0010DE  0E07               	movlw	7
   832  0010E0  6ECA               	movwf	202,c	;volatile
   833  0010E2                     
   834                           ;main.c: 191:     PR2 = 0x9b;
   835  0010E2  0E9B               	movlw	155
   836  0010E4  6ECB               	movwf	203,c	;volatile
   837  0010E6                     
   838                           ;main.c: 193:     CCPR1L = 5;
   839  0010E6  0E05               	movlw	5
   840  0010E8  6EBE               	movwf	190,c	;volatile
   841  0010EA                     
   842                           ;main.c: 194:     INTCONbits.INT0IF = 0;
   843  0010EA  92F2               	bcf	242,1,c	;volatile
   844  0010EC                     
   845                           ;main.c: 195:     TRISB = 0b00111111;
   846  0010EC  0E3F               	movlw	63
   847  0010EE  6E93               	movwf	147,c	;volatile
   848  0010F0                     
   849                           ;main.c: 196:     TRISD = 0;
   850  0010F0  0E00               	movlw	0
   851  0010F2  6E95               	movwf	149,c	;volatile
   852  0010F4                     
   853                           ;main.c: 197:     LATD = 0;
   854  0010F4  0E00               	movlw	0
   855  0010F6  6E8C               	movwf	140,c	;volatile
   856  0010F8                     
   857                           ;main.c: 199:      TRISAbits.RA0 = 1;
   858  0010F8  8092               	bsf	146,0,c	;volatile
   859  0010FA                     l3008:
   860                           
   861                           ;main.c: 211:     {;main.c: 212:         strcpy(str, GetString());
   862  0010FA  0ED0               	movlw	low _str
   863  0010FC  6E17               	movwf	strcpy@dest^0,c
   864  0010FE  0E00               	movlw	high _str
   865  001100  6E18               	movwf	(strcpy@dest+1)^0,c
   866  001102  EC1F  F00B         	call	_GetString	;wreg free
   867  001106  C012  F019         	movff	?_GetString,strcpy@src
   868  00110A  C013  F01A         	movff	?_GetString+1,strcpy@src+1
   869  00110E  EC44  F00C         	call	_strcpy	;wreg free
   870  001112                     
   871                           ;main.c: 213:         if(strcmp(str , "motor")==0){
   872  001112  0ED0               	movlw	low _str
   873  001114  6E11               	movwf	strcmp@l^0,c
   874  001116  0E00               	movlw	high _str
   875  001118  6E12               	movwf	(strcmp@l+1)^0,c
   876  00111A  0E3E               	movlw	low STR_11
   877  00111C  6E13               	movwf	strcmp@r^0,c
   878  00111E  0E06               	movlw	high STR_11
   879  001120  6E14               	movwf	(strcmp@r+1)^0,c
   880  001122  ECDD  F00B         	call	_strcmp	;wreg free
   881  001126  5011               	movf	?_strcmp^0,w,c
   882  001128  1012               	iorwf	(?_strcmp+1)^0,w,c
   883  00112A  A4D8               	btfss	status,2,c
   884  00112C  EF9A  F008         	goto	u2911
   885  001130  EF9C  F008         	goto	u2910
   886  001134                     u2911:
   887  001134  EF9E  F008         	goto	l3014
   888  001138                     u2910:
   889  001138  EF7D  F008         	goto	l3008
   890  00113C                     l3014:
   891  00113C  0ED0               	movlw	low _str
   892  00113E  6E11               	movwf	strcmp@l^0,c
   893  001140  0E00               	movlw	high _str
   894  001142  6E12               	movwf	(strcmp@l+1)^0,c
   895  001144  0E31               	movlw	low STR_12
   896  001146  6E13               	movwf	strcmp@r^0,c
   897  001148  0E06               	movlw	high STR_12
   898  00114A  6E14               	movwf	(strcmp@r+1)^0,c
   899  00114C  ECDD  F00B         	call	_strcmp	;wreg free
   900  001150  5011               	movf	?_strcmp^0,w,c
   901  001152  1012               	iorwf	(?_strcmp+1)^0,w,c
   902  001154  A4D8               	btfss	status,2,c
   903  001156  EFAF  F008         	goto	u2921
   904  00115A  EFB1  F008         	goto	u2920
   905  00115E                     u2921:
   906  00115E  EFB5  F008         	goto	l3018
   907  001162                     u2920:
   908  001162                     
   909                           ;main.c: 218:             Mode_degree();
   910  001162  EC42  F00E         	call	_Mode_degree	;wreg free
   911  001166  EF7D  F008         	goto	l3008
   912  00116A                     l3018:
   913  00116A  0ED0               	movlw	low _str
   914  00116C  6E11               	movwf	strcmp@l^0,c
   915  00116E  0E00               	movlw	high _str
   916  001170  6E12               	movwf	(strcmp@l+1)^0,c
   917  001172  0E49               	movlw	low STR_13
   918  001174  6E13               	movwf	strcmp@r^0,c
   919  001176  0E06               	movlw	high STR_13
   920  001178  6E14               	movwf	(strcmp@r+1)^0,c
   921  00117A  ECDD  F00B         	call	_strcmp	;wreg free
   922  00117E  5011               	movf	?_strcmp^0,w,c
   923  001180  1012               	iorwf	(?_strcmp+1)^0,w,c
   924  001182  A4D8               	btfss	status,2,c
   925  001184  EFC6  F008         	goto	u2931
   926  001188  EFC8  F008         	goto	u2930
   927  00118C                     u2931:
   928  00118C  EFCC  F008         	goto	l3022
   929  001190                     u2930:
   930  001190                     
   931                           ;main.c: 220:             Mode_turn();
   932  001190  ECDB  F00D         	call	_Mode_turn	;wreg free
   933  001194  EF7D  F008         	goto	l3008
   934  001198                     l3022:
   935  001198  0ED0               	movlw	low _str
   936  00119A  6E11               	movwf	strcmp@l^0,c
   937  00119C  0E00               	movlw	high _str
   938  00119E  6E12               	movwf	(strcmp@l+1)^0,c
   939  0011A0  0E4E               	movlw	low STR_14
   940  0011A2  6E13               	movwf	strcmp@r^0,c
   941  0011A4  0E06               	movlw	high STR_14
   942  0011A6  6E14               	movwf	(strcmp@r+1)^0,c
   943  0011A8  ECDD  F00B         	call	_strcmp	;wreg free
   944  0011AC  5011               	movf	?_strcmp^0,w,c
   945  0011AE  1012               	iorwf	(?_strcmp+1)^0,w,c
   946  0011B0  A4D8               	btfss	status,2,c
   947  0011B2  EFDD  F008         	goto	u2941
   948  0011B6  EFDF  F008         	goto	u2940
   949  0011BA                     u2941:
   950  0011BA  EFE3  F008         	goto	l3026
   951  0011BE                     u2940:
   952  0011BE                     
   953                           ;main.c: 222:             Mode_run();
   954  0011BE  EC7D  F009         	call	_Mode_run	;wreg free
   955  0011C2  EF7D  F008         	goto	l3008
   956  0011C6                     l3026:
   957  0011C6  0ED0               	movlw	low _str
   958  0011C8  6E11               	movwf	strcmp@l^0,c
   959  0011CA  0E00               	movlw	high _str
   960  0011CC  6E12               	movwf	(strcmp@l+1)^0,c
   961  0011CE  0E44               	movlw	low STR_15
   962  0011D0  6E13               	movwf	strcmp@r^0,c
   963  0011D2  0E06               	movlw	high STR_15
   964  0011D4  6E14               	movwf	(strcmp@r+1)^0,c
   965  0011D6  ECDD  F00B         	call	_strcmp	;wreg free
   966  0011DA  5011               	movf	?_strcmp^0,w,c
   967  0011DC  1012               	iorwf	(?_strcmp+1)^0,w,c
   968  0011DE  A4D8               	btfss	status,2,c
   969  0011E0  EFF4  F008         	goto	u2951
   970  0011E4  EFF6  F008         	goto	u2950
   971  0011E8                     u2951:
   972  0011E8  EFFA  F008         	goto	l3030
   973  0011EC                     u2950:
   974  0011EC                     
   975                           ;main.c: 224:             Mode_run2();
   976  0011EC  EC8B  F00D         	call	_Mode_run2	;wreg free
   977  0011F0  EF7D  F008         	goto	l3008
   978  0011F4                     l3030:
   979                           
   980                           ;main.c: 228:             ClearBuffer();
   981  0011F4  EC0F  F00D         	call	_ClearBuffer	;wreg free
   982  0011F8  EF7D  F008         	goto	l3008
   983  0011FC  EF54  F000         	goto	start
   984  001200                     __end_of_main:
   985                           	callstack 0
   986                           
   987 ;; *************** function _strcmp *****************
   988 ;; Defined at:
   989 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcmp.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  l               2   16[COMRAM] PTR const unsigned char 
   992 ;;		 -> str(20), 
   993 ;;  r               2   18[COMRAM] PTR const unsigned char 
   994 ;;		 -> STR_15(5), STR_14(4), STR_13(5), STR_12(7), 
   995 ;;		 -> STR_11(6), 
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2   16[COMRAM] int 
  1000 ;; Registers used:
  1001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1007 ;;      Params:         4       0       0       0       0       0       0
  1008 ;;      Locals:         0       0       0       0       0       0       0
  1009 ;;      Temps:          1       0       0       0       0       0       0
  1010 ;;      Totals:         5       0       0       0       0       0       0
  1011 ;;Total ram usage:        5 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; Hardware stack levels required when called: 4
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_main
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text1
  1022  0017BA                     __ptext1:
  1023                           	callstack 0
  1024  0017BA                     _strcmp:
  1025                           	callstack 26
  1026  0017BA  EFE3  F00B         	goto	l2444
  1027  0017BE                     l2442:
  1028  0017BE  4A11               	infsnz	strcmp@l^0,f,c
  1029  0017C0  2A12               	incf	(strcmp@l+1)^0,f,c
  1030  0017C2  4A13               	infsnz	strcmp@r^0,f,c
  1031  0017C4  2A14               	incf	(strcmp@r+1)^0,f,c
  1032  0017C6                     l2444:
  1033  0017C6  C011  FFD9         	movff	strcmp@l,fsr2l
  1034  0017CA  C012  FFDA         	movff	strcmp@l+1,fsr2h
  1035  0017CE  50DF               	movf	indf2,w,c
  1036  0017D0  6E15               	movwf	??_strcmp^0,c
  1037  0017D2  C013  FFF6         	movff	strcmp@r,tblptrl
  1038  0017D6  C014  FFF7         	movff	strcmp@r+1,tblptrh
  1039  0017DA                     	if	0	;tblptru may be non-zero
  1040  0017DA                     	endif
  1041  0017DA                     	if	0	;tblptru may be non-zero
  1042  0017DA                     	endif
  1043  0017DA  0008               	tblrd		*
  1044  0017DC  50F5               	movf	tablat,w,c
  1045  0017DE  1815               	xorwf	??_strcmp^0,w,c
  1046  0017E0  A4D8               	btfss	status,2,c
  1047  0017E2  EFF5  F00B         	goto	u2031
  1048  0017E6  EFF7  F00B         	goto	u2030
  1049  0017EA                     u2031:
  1050  0017EA  EF03  F00C         	goto	l2448
  1051  0017EE                     u2030:
  1052  0017EE  C011  FFD9         	movff	strcmp@l,fsr2l
  1053  0017F2  C012  FFDA         	movff	strcmp@l+1,fsr2h
  1054  0017F6  50DF               	movf	indf2,w,c
  1055  0017F8  A4D8               	btfss	status,2,c
  1056  0017FA  EF01  F00C         	goto	u2041
  1057  0017FE  EF03  F00C         	goto	u2040
  1058  001802                     u2041:
  1059  001802  EFDF  F00B         	goto	l2442
  1060  001806                     u2040:
  1061  001806                     l2448:
  1062  001806  C011  FFD9         	movff	strcmp@l,fsr2l
  1063  00180A  C012  FFDA         	movff	strcmp@l+1,fsr2h
  1064  00180E  50DF               	movf	indf2,w,c
  1065  001810  6E15               	movwf	??_strcmp^0,c
  1066  001812  C013  FFF6         	movff	strcmp@r,tblptrl
  1067  001816  C014  FFF7         	movff	strcmp@r+1,tblptrh
  1068  00181A                     	if	0	;tblptru may be non-zero
  1069  00181A                     	endif
  1070  00181A                     	if	0	;tblptru may be non-zero
  1071  00181A                     	endif
  1072  00181A  0008               	tblrd		*
  1073  00181C  50F5               	movf	tablat,w,c
  1074  00181E  5C15               	subwf	??_strcmp^0,w,c
  1075  001820  6E11               	movwf	?_strcmp^0,c
  1076  001822  6A12               	clrf	(?_strcmp+1)^0,c
  1077  001824  A0D8               	btfss	status,0,c
  1078  001826  0612               	decf	(?_strcmp+1)^0,f,c
  1079  001828  0012               	return		;funcret
  1080  00182A                     __end_of_strcmp:
  1081                           	callstack 0
  1082                           
  1083 ;; *************** function _UART_Initialize *****************
  1084 ;; Defined at:
  1085 ;;		line 60 in file "setting_hardaware/uart.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1099 ;;      Params:         0       0       0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 4
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;;		_SYSTEM_Initialize
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text2
  1115  001BE0                     __ptext2:
  1116                           	callstack 0
  1117  001BE0                     _UART_Initialize:
  1118                           	callstack 26
  1119  001BE0                     
  1120                           ;setting_hardaware/uart.c: 70:     TRISCbits.TRISC6 = 1;
  1121  001BE0  8C94               	bsf	148,6,c	;volatile
  1122                           
  1123                           ;setting_hardaware/uart.c: 71:     TRISCbits.TRISC7 = 1;
  1124  001BE2  8E94               	bsf	148,7,c	;volatile
  1125                           
  1126                           ;setting_hardaware/uart.c: 73:     OSCCONbits.IRCF2 = 0;
  1127  001BE4  9CD3               	bcf	211,6,c	;volatile
  1128                           
  1129                           ;setting_hardaware/uart.c: 74:     OSCCONbits.IRCF1 = 1;
  1130  001BE6  8AD3               	bsf	211,5,c	;volatile
  1131                           
  1132                           ;setting_hardaware/uart.c: 75:     OSCCONbits.IRCF0 = 1;
  1133  001BE8  88D3               	bsf	211,4,c	;volatile
  1134                           
  1135                           ;setting_hardaware/uart.c: 79:     TXSTAbits.SYNC = 0;
  1136  001BEA  98AC               	bcf	172,4,c	;volatile
  1137                           
  1138                           ;setting_hardaware/uart.c: 80:     BAUDCONbits.BRG16 = 0;
  1139  001BEC  96B8               	bcf	184,3,c	;volatile
  1140                           
  1141                           ;setting_hardaware/uart.c: 81:     TXSTAbits.BRGH = 0;
  1142  001BEE  94AC               	bcf	172,2,c	;volatile
  1143  001BF0                     
  1144                           ;setting_hardaware/uart.c: 82:     SPBRG = 12;
  1145  001BF0  0E0C               	movlw	12
  1146  001BF2  6EAF               	movwf	175,c	;volatile
  1147  001BF4                     
  1148                           ;setting_hardaware/uart.c: 85:     RCSTAbits.SPEN = 1;
  1149  001BF4  8EAB               	bsf	171,7,c	;volatile
  1150  001BF6                     
  1151                           ;setting_hardaware/uart.c: 86:     PIR1bits.TXIF = 0;
  1152  001BF6  989E               	bcf	158,4,c	;volatile
  1153  001BF8                     
  1154                           ;setting_hardaware/uart.c: 87:     PIR1bits.RCIF = 0;
  1155  001BF8  9A9E               	bcf	158,5,c	;volatile
  1156  001BFA                     
  1157                           ;setting_hardaware/uart.c: 88:     TXSTAbits.TXEN = 1;
  1158  001BFA  8AAC               	bsf	172,5,c	;volatile
  1159  001BFC                     
  1160                           ;setting_hardaware/uart.c: 89:     RCSTAbits.CREN = 1;
  1161  001BFC  88AB               	bsf	171,4,c	;volatile
  1162  001BFE                     
  1163                           ;setting_hardaware/uart.c: 90:     PIE1bits.TXIE = 1;
  1164  001BFE  889D               	bsf	157,4,c	;volatile
  1165  001C00                     
  1166                           ;setting_hardaware/uart.c: 91:     IPR1bits.TXIP = 1;
  1167  001C00  889F               	bsf	159,4,c	;volatile
  1168  001C02                     
  1169                           ;setting_hardaware/uart.c: 92:     PIE1bits.RCIE = 1;
  1170  001C02  8A9D               	bsf	157,5,c	;volatile
  1171  001C04                     
  1172                           ;setting_hardaware/uart.c: 93:     IPR1bits.RCIP = 1;
  1173  001C04  8A9F               	bsf	159,5,c	;volatile
  1174  001C06  0012               	return		;funcret
  1175  001C08                     __end_of_UART_Initialize:
  1176                           	callstack 0
  1177                           
  1178 ;; *************** function _Mode_turn *****************
  1179 ;; Defined at:
  1180 ;;		line 174 in file "main.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  1    wreg      void 
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1194 ;;      Params:         0       0       0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0       0       0
  1196 ;;      Temps:          2       0       0       0       0       0       0
  1197 ;;      Totals:         2       0       0       0       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 6
  1201 ;; This function calls:
  1202 ;;		_UART_Write_Text
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text3
  1209  001BB6                     __ptext3:
  1210                           	callstack 0
  1211  001BB6                     _Mode_turn:
  1212                           	callstack 24
  1213  001BB6                     
  1214                           ;main.c: 175:     LATDbits.LD5 = 1;
  1215  001BB6  8A8C               	bsf	140,5,c	;volatile
  1216  001BB8                     
  1217                           ;main.c: 176:     _delay((unsigned long)((3000)*(500000/4000.0)));
  1218  001BB8  0E02               	movlw	2
  1219  001BBA  6E19               	movwf	(??_Mode_turn+1)^0,c
  1220  001BBC  0EE7               	movlw	231
  1221  001BBE  6E18               	movwf	??_Mode_turn^0,c
  1222  001BC0  0E00               	movlw	0
  1223  001BC2                     u2967:
  1224  001BC2  2EE8               	decfsz	wreg,f,c
  1225  001BC4  D7FE               	bra	u2967
  1226  001BC6  2E18               	decfsz	??_Mode_turn^0,f,c
  1227  001BC8  D7FC               	bra	u2967
  1228  001BCA  2E19               	decfsz	(??_Mode_turn+1)^0,f,c
  1229  001BCC  D7FA               	bra	u2967
  1230  001BCE  D000               	nop2	
  1231  001BD0                     
  1232                           ;main.c: 177:     LATDbits.LD5 = 0;
  1233  001BD0  9A8C               	bcf	140,5,c	;volatile
  1234  001BD2                     
  1235                           ;main.c: 178:     UART_Write_Text("return from turn\r\n");
  1236  001BD2  0E01               	movlw	low STR_10
  1237  001BD4  6E12               	movwf	UART_Write_Text@text^0,c
  1238  001BD6  0E06               	movlw	high STR_10
  1239  001BD8  6E13               	movwf	(UART_Write_Text@text+1)^0,c
  1240  001BDA  EC5F  F00B         	call	_UART_Write_Text	;wreg free
  1241  001BDE  0012               	return		;funcret
  1242  001BE0                     __end_of_Mode_turn:
  1243                           	callstack 0
  1244                           
  1245 ;; *************** function _Mode_run2 *****************
  1246 ;; Defined at:
  1247 ;;		line 92 in file "main.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;		None
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;  word           20   55[BANK0 ] unsigned char [20]
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1261 ;;      Params:         0       0       0       0       0       0       0
  1262 ;;      Locals:         0      20       0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0
  1264 ;;      Totals:         0      20       0       0       0       0       0
  1265 ;;Total ram usage:       20 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 13
  1268 ;; This function calls:
  1269 ;;		_ClearBuffer
  1270 ;;		_GetString
  1271 ;;		_atoi
  1272 ;;		_run
  1273 ;;		_strcpy
  1274 ;; This function is called by:
  1275 ;;		_main
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text4
  1280  001B16                     __ptext4:
  1281                           	callstack 0
  1282  001B16                     _Mode_run2:
  1283                           	callstack 17
  1284  001B16                     
  1285                           ;main.c: 93:     char word[20];;main.c: 94:     ClearBuffer();
  1286  001B16  EC0F  F00D         	call	_ClearBuffer	;wreg free
  1287  001B1A                     
  1288                           ;main.c: 95:     strcpy(word, GetString());
  1289  001B1A  0EB7               	movlw	low Mode_run2@word
  1290  001B1C  6E17               	movwf	strcpy@dest^0,c
  1291  001B1E  0E00               	movlw	high Mode_run2@word
  1292  001B20  6E18               	movwf	(strcpy@dest+1)^0,c
  1293  001B22  EC1F  F00B         	call	_GetString	;wreg free
  1294  001B26  C012  F019         	movff	?_GetString,strcpy@src
  1295  001B2A  C013  F01A         	movff	?_GetString+1,strcpy@src+1
  1296  001B2E  EC44  F00C         	call	_strcpy	;wreg free
  1297  001B32                     
  1298                           ;main.c: 96:     time = atoi(word);
  1299  001B32  0EB7               	movlw	low Mode_run2@word
  1300  001B34  6E1D               	movwf	atoi@s^0,c
  1301  001B36  0E00               	movlw	high Mode_run2@word
  1302  001B38  6E1E               	movwf	(atoi@s+1)^0,c
  1303  001B3A  ECF5  F005         	call	_atoi	;wreg free
  1304  001B3E  C01D  F0CE         	movff	?_atoi,_time
  1305  001B42  C01E  F0CF         	movff	?_atoi+1,_time+1
  1306  001B46                     
  1307                           ;main.c: 97:     run();
  1308  001B46  EC00  F009         	call	_run	;wreg free
  1309  001B4A  0012               	return		;funcret
  1310  001B4C                     __end_of_Mode_run2:
  1311                           	callstack 0
  1312                           
  1313 ;; *************** function _strcpy *****************
  1314 ;; Defined at:
  1315 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  dest            2   22[COMRAM] PTR unsigned char 
  1318 ;;		 -> str(20), Mode_detect@word(20), Mode_run2@word(20), 
  1319 ;;  src             2   24[COMRAM] PTR const unsigned char 
  1320 ;;		 -> STR_8(1), mystring(20), 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  d               2   30[COMRAM] PTR unsigned char 
  1323 ;;		 -> str(20), Mode_detect@word(20), Mode_run2@word(20), 
  1324 ;;  s               2   28[COMRAM] PTR const unsigned char 
  1325 ;;		 -> STR_8(1), mystring(20), 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2   22[COMRAM] PTR unsigned char 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         4       0       0       0       0       0       0
  1336 ;;      Locals:         4       0       0       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0       0       0
  1338 ;;      Totals:        10       0       0       0       0       0       0
  1339 ;;Total ram usage:       10 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 4
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_Mode_run2
  1346 ;;		_main
  1347 ;;		_Mode_detect
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           	psect	text5
  1352  001888                     __ptext5:
  1353                           	callstack 0
  1354  001888                     _strcpy:
  1355                           	callstack 26
  1356  001888  C019  F01D         	movff	strcpy@src,strcpy@s
  1357  00188C  C01A  F01E         	movff	strcpy@src+1,strcpy@s+1
  1358  001890  C017  F01F         	movff	strcpy@dest,strcpy@d
  1359  001894  C018  F020         	movff	strcpy@dest+1,strcpy@d+1
  1360  001898                     l2310:
  1361  001898  501D               	movf	strcpy@s^0,w,c
  1362  00189A  6E1B               	movwf	??_strcpy^0,c
  1363  00189C  501E               	movf	(strcpy@s+1)^0,w,c
  1364  00189E  6E1C               	movwf	(??_strcpy+1)^0,c
  1365  0018A0  4A1D               	infsnz	strcpy@s^0,f,c
  1366  0018A2  2A1E               	incf	(strcpy@s+1)^0,f,c
  1367  0018A4  C01B  FFF6         	movff	??_strcpy,tblptrl
  1368  0018A8  C01C  FFF7         	movff	??_strcpy+1,tblptrh
  1369  0018AC  6AF8               	clrf	tblptru,c
  1370  0018AE  C01F  FFD9         	movff	strcpy@d,fsr2l
  1371  0018B2  C020  FFDA         	movff	strcpy@d+1,fsr2h
  1372  0018B6  4A1F               	infsnz	strcpy@d^0,f,c
  1373  0018B8  2A20               	incf	(strcpy@d+1)^0,f,c
  1374  0018BA  0E05               	movlw	(high __ramtop+-1)
  1375  0018BC  64F7               	cpfsgt	tblptrh,c
  1376  0018BE  D003               	bra	u1907
  1377  0018C0  0008               	tblrd		*
  1378  0018C2  50F5               	movf	tablat,w,c
  1379  0018C4  D005               	bra	u1900
  1380  0018C6                     u1907:
  1381  0018C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1382  0018CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1383  0018CE  50EF               	movf	indf0,w,c
  1384  0018D0                     u1900:
  1385  0018D0  6EDF               	movwf	indf2,c
  1386  0018D2  50DF               	movf	indf2,w,c
  1387  0018D4  A4D8               	btfss	status,2,c
  1388  0018D6  EF6F  F00C         	goto	u1911
  1389  0018DA  EF71  F00C         	goto	u1910
  1390  0018DE                     u1911:
  1391  0018DE  EF4C  F00C         	goto	l2310
  1392  0018E2                     u1910:
  1393  0018E2  0012               	return		;funcret
  1394  0018E4                     __end_of_strcpy:
  1395                           	callstack 0
  1396                           
  1397 ;; *************** function _GetString *****************
  1398 ;; Defined at:
  1399 ;;		line 102 in file "setting_hardaware/uart.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  c               1   21[COMRAM] unsigned char 
  1404 ;;  i               2   19[COMRAM] int 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  2   17[COMRAM] PTR unsigned char 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1414 ;;      Params:         2       0       0       0       0       0       0
  1415 ;;      Locals:         3       0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0
  1417 ;;      Totals:         5       0       0       0       0       0       0
  1418 ;;Total ram usage:        5 bytes
  1419 ;; Hardware stack levels used: 1
  1420 ;; Hardware stack levels required when called: 5
  1421 ;; This function calls:
  1422 ;;		_UART_Write
  1423 ;; This function is called by:
  1424 ;;		_Mode_run2
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text6
  1430  00163E                     __ptext6:
  1431                           	callstack 0
  1432  00163E                     _GetString:
  1433                           	callstack 24
  1434  00163E                     
  1435                           ;setting_hardaware/uart.c: 103:     int i=0;
  1436  00163E  0E00               	movlw	0
  1437  001640  6E15               	movwf	(GetString@i+1)^0,c
  1438  001642  0E00               	movlw	0
  1439  001644  6E14               	movwf	GetString@i^0,c
  1440                           
  1441                           ;setting_hardaware/uart.c: 104:     while(i<10){
  1442  001646  EF4E  F00B         	goto	l2248
  1443  00164A                     l70:
  1444  00164A  AA9E               	btfss	3998,5,c	;volatile
  1445  00164C  EF2A  F00B         	goto	u1801
  1446  001650  EF2C  F00B         	goto	u1800
  1447  001654                     u1801:
  1448  001654  EF25  F00B         	goto	l70
  1449  001658                     u1800:
  1450  001658                     
  1451                           ;setting_hardaware/uart.c: 106:         RCIF = 0;
  1452  001658  9A9E               	bcf	3998,5,c	;volatile
  1453                           
  1454                           ;setting_hardaware/uart.c: 107:         unsigned char c = RCREG;
  1455  00165A  CFAE F016          	movff	4014,GetString@c	;volatile
  1456  00165E                     
  1457                           ;setting_hardaware/uart.c: 108:         UART_Write(c);
  1458  00165E  5016               	movf	GetString@c^0,w,c
  1459  001660  EC26  F00E         	call	_UART_Write
  1460  001664                     
  1461                           ;setting_hardaware/uart.c: 109:         if(c == '\r')
  1462  001664  0E0D               	movlw	13
  1463  001666  1816               	xorwf	GetString@c^0,w,c
  1464  001668  A4D8               	btfss	status,2,c
  1465  00166A  EF39  F00B         	goto	u1811
  1466  00166E  EF3B  F00B         	goto	u1810
  1467  001672                     u1811:
  1468  001672  EF44  F00B         	goto	l2244
  1469  001676                     u1810:
  1470  001676                     
  1471                           ;setting_hardaware/uart.c: 110:         {;setting_hardaware/uart.c: 111:             UAR
      +                          T_Write('\n');
  1472  001676  0E0A               	movlw	10
  1473  001678  EC26  F00E         	call	_UART_Write
  1474  00167C                     l2240:
  1475                           
  1476                           ;setting_hardaware/uart.c: 112:             return mystring;
  1477  00167C  0EE4               	movlw	low _mystring
  1478  00167E  6E12               	movwf	?_GetString^0,c
  1479  001680  0E00               	movlw	high _mystring
  1480  001682  6E13               	movwf	(?_GetString+1)^0,c
  1481  001684  EF5E  F00B         	goto	l74
  1482  001688                     l2244:
  1483                           
  1484                           ;setting_hardaware/uart.c: 114:         mystring[i++]= RCREG;
  1485  001688  0EE4               	movlw	low _mystring
  1486  00168A  2414               	addwf	GetString@i^0,w,c
  1487  00168C  6ED9               	movwf	fsr2l,c
  1488  00168E  0E00               	movlw	high _mystring
  1489  001690  2015               	addwfc	(GetString@i+1)^0,w,c
  1490  001692  6EDA               	movwf	fsr2h,c
  1491  001694  CFAE FFDF          	movff	4014,indf2	;volatile
  1492  001698  4A14               	infsnz	GetString@i^0,f,c
  1493  00169A  2A15               	incf	(GetString@i+1)^0,f,c
  1494  00169C                     l2248:
  1495                           
  1496                           ;setting_hardaware/uart.c: 104:     while(i<10){
  1497  00169C  BE15               	btfsc	(GetString@i+1)^0,7,c
  1498  00169E  EF5A  F00B         	goto	u1821
  1499  0016A2  5015               	movf	(GetString@i+1)^0,w,c
  1500  0016A4  E109               	bnz	u1820
  1501  0016A6  0E0A               	movlw	10
  1502  0016A8  5C14               	subwf	GetString@i^0,w,c
  1503  0016AA  A0D8               	btfss	status,0,c
  1504  0016AC  EF5A  F00B         	goto	u1821
  1505  0016B0  EF5C  F00B         	goto	u1820
  1506  0016B4                     u1821:
  1507  0016B4  EF25  F00B         	goto	l70
  1508  0016B8                     u1820:
  1509  0016B8  EF3E  F00B         	goto	l2240
  1510  0016BC                     l74:
  1511  0016BC  0012               	return		;funcret
  1512  0016BE                     __end_of_GetString:
  1513                           	callstack 0
  1514                           
  1515 ;; *************** function _Mode_run *****************
  1516 ;; Defined at:
  1517 ;;		line 71 in file "main.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;		None
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  c               1   77[BANK0 ] unsigned char 
  1522 ;;  word           20   55[BANK0 ] unsigned char [20]
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  1    wreg      void 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1532 ;;      Params:         0       0       0       0       0       0       0
  1533 ;;      Locals:         0      23       0       0       0       0       0
  1534 ;;      Temps:          0       0       0       0       0       0       0
  1535 ;;      Totals:         0      23       0       0       0       0       0
  1536 ;;Total ram usage:       23 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 13
  1539 ;; This function calls:
  1540 ;;		_ADC_Read
  1541 ;;		_ClearBuffer
  1542 ;;		_UART_Write
  1543 ;;		_UART_Write_Text
  1544 ;;		___awdiv
  1545 ;;		___wmul
  1546 ;;		_run
  1547 ;;		_sprintf
  1548 ;; This function is called by:
  1549 ;;		_main
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text7
  1554  0012FA                     __ptext7:
  1555                           	callstack 0
  1556  0012FA                     _Mode_run:
  1557                           	callstack 17
  1558  0012FA                     
  1559                           ;main.c: 72:     char word[20];;main.c: 73:     ClearBuffer();
  1560  0012FA  EC0F  F00D         	call	_ClearBuffer	;wreg free
  1561  0012FE                     
  1562                           ;main.c: 74:     UART_Write_Text("  ");
  1563  0012FE  0E52               	movlw	low STR_2
  1564  001300  6E12               	movwf	UART_Write_Text@text^0,c
  1565  001302  0E06               	movlw	high STR_2
  1566  001304  6E13               	movwf	(UART_Write_Text@text+1)^0,c
  1567  001306  EC5F  F00B         	call	_UART_Write_Text	;wreg free
  1568  00130A                     l2956:
  1569                           
  1570                           ;main.c: 76:         if(RCIF){
  1571  00130A  AA9E               	btfss	3998,5,c	;volatile
  1572  00130C  EF8A  F009         	goto	u2891
  1573  001310  EF8C  F009         	goto	u2890
  1574  001314                     u2891:
  1575  001314  EF9D  F009         	goto	l2964
  1576  001318                     u2890:
  1577  001318                     
  1578                           ;main.c: 77:             unsigned char c = RCREG;
  1579  001318  CFAE F0CD          	movff	4014,Mode_run@c	;volatile
  1580  00131C                     
  1581                           ;main.c: 78:             if(c == 'r')
  1582  00131C  0E72               	movlw	114
  1583  00131E  0100               	movlb	0	; () banked
  1584  001320  19CD               	xorwf	Mode_run@c& (0+255),w,b
  1585  001322  A4D8               	btfss	status,2,c
  1586  001324  EF96  F009         	goto	u2901
  1587  001328  EF98  F009         	goto	u2900
  1588  00132C                     u2901:
  1589  00132C  EF9D  F009         	goto	l2964
  1590  001330                     u2900:
  1591  001330                     
  1592                           ; BSR set to: 0
  1593                           ;main.c: 79:             {;main.c: 80:                 UART_Write(c);
  1594  001330  51CD               	movf	Mode_run@c& (0+255),w,b
  1595  001332  EC26  F00E         	call	_UART_Write
  1596                           
  1597                           ;main.c: 81:                 break;
  1598  001336  EFF4  F009         	goto	l2974
  1599  00133A                     l2964:
  1600                           
  1601                           ;main.c: 84:         sprintf(word, "\b\b%2d", time = (ADC_Read(7) * 15 / 1023));
  1602  00133A  0E00               	movlw	0
  1603  00133C  6E12               	movwf	(ADC_Read@channel+1)^0,c
  1604  00133E  0E07               	movlw	7
  1605  001340  6E11               	movwf	ADC_Read@channel^0,c
  1606  001342  EC50  F00D         	call	_ADC_Read	;wreg free
  1607  001346  C011  F017         	movff	?_ADC_Read,___wmul@multiplier
  1608  00134A  C012  F018         	movff	?_ADC_Read+1,___wmul@multiplier+1
  1609  00134E  0E00               	movlw	0
  1610  001350  6E1A               	movwf	(___wmul@multiplicand+1)^0,c
  1611  001352  0E0F               	movlw	15
  1612  001354  6E19               	movwf	___wmul@multiplicand^0,c
  1613  001356  EC04  F00E         	call	___wmul	;wreg free
  1614  00135A  C017  F01D         	movff	?___wmul,___awdiv@dividend
  1615  00135E  C018  F01E         	movff	?___wmul+1,___awdiv@dividend+1
  1616  001362  0E03               	movlw	3
  1617  001364  6E20               	movwf	(___awdiv@divisor+1)^0,c
  1618  001366  681F               	setf	___awdiv@divisor^0,c
  1619  001368  EC5C  F00A         	call	___awdiv	;wreg free
  1620  00136C  C01D  F0CE         	movff	?___awdiv,_time
  1621  001370  C01E  F0CF         	movff	?___awdiv+1,_time+1
  1622  001374  C0CE  F0CB         	movff	_time,_Mode_run$2073
  1623  001378  C0CF  F0CC         	movff	_time+1,_Mode_run$2073+1
  1624  00137C                     
  1625                           ;main.c: 84:         sprintf(word, "\b\b%2d", time = (ADC_Read(7) * 15 / 1023));
  1626  00137C  0EB7               	movlw	low Mode_run@word
  1627  00137E  0100               	movlb	0	; () banked
  1628  001380  6F90               	movwf	sprintf@s& (0+255),b
  1629  001382  0E00               	movlw	high Mode_run@word
  1630  001384  6F91               	movwf	(sprintf@s+1)& (0+255),b
  1631  001386  0E38               	movlw	low STR_4
  1632  001388  6F92               	movwf	sprintf@fmt& (0+255),b
  1633  00138A  0E06               	movlw	high STR_4
  1634  00138C  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  1635  00138E  C0CB  F094         	movff	_Mode_run$2073,?_sprintf+4
  1636  001392  C0CC  F095         	movff	_Mode_run$2073+1,?_sprintf+5
  1637  001396  EC9B  F00C         	call	_sprintf	;wreg free
  1638  00139A                     
  1639                           ;main.c: 85:         LATD = ADC_Read(7) * 15 / 1023;
  1640  00139A  0E00               	movlw	0
  1641  00139C  6E12               	movwf	(ADC_Read@channel+1)^0,c
  1642  00139E  0E07               	movlw	7
  1643  0013A0  6E11               	movwf	ADC_Read@channel^0,c
  1644  0013A2  EC50  F00D         	call	_ADC_Read	;wreg free
  1645  0013A6  C011  F017         	movff	?_ADC_Read,___wmul@multiplier
  1646  0013AA  C012  F018         	movff	?_ADC_Read+1,___wmul@multiplier+1
  1647  0013AE  0E00               	movlw	0
  1648  0013B0  6E1A               	movwf	(___wmul@multiplicand+1)^0,c
  1649  0013B2  0E0F               	movlw	15
  1650  0013B4  6E19               	movwf	___wmul@multiplicand^0,c
  1651  0013B6  EC04  F00E         	call	___wmul	;wreg free
  1652  0013BA  C017  F01D         	movff	?___wmul,___awdiv@dividend
  1653  0013BE  C018  F01E         	movff	?___wmul+1,___awdiv@dividend+1
  1654  0013C2  0E03               	movlw	3
  1655  0013C4  6E20               	movwf	(___awdiv@divisor+1)^0,c
  1656  0013C6  681F               	setf	___awdiv@divisor^0,c
  1657  0013C8  EC5C  F00A         	call	___awdiv	;wreg free
  1658  0013CC  501D               	movf	?___awdiv^0,w,c
  1659  0013CE  6E8C               	movwf	140,c	;volatile
  1660  0013D0                     
  1661                           ;main.c: 86:         _delay((unsigned long)((10000)*(500000/4000000.0)));
  1662  0013D0  0EFA               	movlw	250
  1663  0013D2                     u2977:
  1664  0013D2  D000               	nop2	
  1665  0013D4  2EE8               	decfsz	wreg,f,c
  1666  0013D6  D7FD               	bra	u2977
  1667  0013D8                     
  1668                           ;main.c: 87:         UART_Write_Text(word);
  1669  0013D8  0EB7               	movlw	low Mode_run@word
  1670  0013DA  6E12               	movwf	UART_Write_Text@text^0,c
  1671  0013DC  0E00               	movlw	high Mode_run@word
  1672  0013DE  6E13               	movwf	(UART_Write_Text@text+1)^0,c
  1673  0013E0  EC5F  F00B         	call	_UART_Write_Text	;wreg free
  1674  0013E4  EF85  F009         	goto	l2956
  1675  0013E8                     l2974:
  1676                           
  1677                           ;main.c: 89:     run();
  1678  0013E8  EC00  F009         	call	_run	;wreg free
  1679  0013EC  0012               	return		;funcret
  1680  0013EE                     __end_of_Mode_run:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _run *****************
  1684 ;; Defined at:
  1685 ;;		line 33 in file "main.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  c               1   54[BANK0 ] unsigned char 
  1690 ;;  cur             2   52[BANK0 ] int 
  1691 ;;  word           20   30[BANK0 ] unsigned char [20]
  1692 ;;  now_state       2   50[BANK0 ] int 
  1693 ;;  n_step          2    0        int 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1703 ;;      Params:         0       0       0       0       0       0       0
  1704 ;;      Locals:         0      25       0       0       0       0       0
  1705 ;;      Temps:          1       0       0       0       0       0       0
  1706 ;;      Totals:         1      25       0       0       0       0       0
  1707 ;;Total ram usage:       26 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 12
  1710 ;; This function calls:
  1711 ;;		_ClearBuffer
  1712 ;;		_UART_Write
  1713 ;;		_UART_Write_Text
  1714 ;;		_sprintf
  1715 ;; This function is called by:
  1716 ;;		_Mode_run
  1717 ;;		_Mode_run2
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text8
  1722  001200                     __ptext8:
  1723                           	callstack 0
  1724  001200                     _run:
  1725                           	callstack 17
  1726  001200                     
  1727                           ;main.c: 34:     ClearBuffer();
  1728  001200  EC0F  F00D         	call	_ClearBuffer	;wreg free
  1729  001204                     
  1730                           ;main.c: 37:     int now_state = 1;
  1731  001204  0E00               	movlw	0
  1732  001206  0100               	movlb	0	; () banked
  1733  001208  6FB3               	movwf	(run@now_state+1)& (0+255),b
  1734  00120A  0E01               	movlw	1
  1735  00120C  6FB2               	movwf	run@now_state& (0+255),b
  1736  00120E                     
  1737                           ; BSR set to: 0
  1738                           ;main.c: 38:     LATDbits.LD4 = 1;
  1739  00120E  888C               	bsf	140,4,c	;volatile
  1740  001210                     
  1741                           ; BSR set to: 0
  1742                           ;main.c: 39:     UART_Write_Text("  ");
  1743  001210  0E52               	movlw	low STR_2
  1744  001212  6E12               	movwf	UART_Write_Text@text^0,c
  1745  001214  0E06               	movlw	high STR_2
  1746  001216  6E13               	movwf	(UART_Write_Text@text+1)^0,c
  1747  001218  EC5F  F00B         	call	_UART_Write_Text	;wreg free
  1748                           
  1749                           ;main.c: 40:     while(time > 0){
  1750  00121C  EF6D  F009         	goto	l2950
  1751  001220                     l2924:
  1752                           
  1753                           ; BSR set to: 0
  1754                           ;main.c: 41:         int cur = PORTBbits.RB5;
  1755  001220  BA81               	btfsc	129,5,c	;volatile
  1756  001222  EF15  F009         	goto	u2831
  1757  001226  EF19  F009         	goto	u2830
  1758  00122A                     u2831:
  1759  00122A  6A5C               	clrf	??_run^0,c
  1760  00122C  2A5C               	incf	??_run^0,f,c
  1761  00122E  EF1A  F009         	goto	u2838
  1762  001232                     u2830:
  1763  001232  6A5C               	clrf	??_run^0,c
  1764  001234                     u2838:
  1765  001234  505C               	movf	??_run^0,w,c
  1766  001236  0100               	movlb	0	; () banked
  1767  001238  6FB4               	movwf	run@cur& (0+255),b
  1768  00123A  6BB5               	clrf	(run@cur+1)& (0+255),b
  1769  00123C                     
  1770                           ; BSR set to: 0
  1771                           ;main.c: 42:         if(cur == 0){
  1772  00123C  51B4               	movf	run@cur& (0+255),w,b
  1773  00123E  11B5               	iorwf	(run@cur+1)& (0+255),w,b
  1774  001240  A4D8               	btfss	status,2,c
  1775  001242  EF25  F009         	goto	u2841
  1776  001246  EF27  F009         	goto	u2840
  1777  00124A                     u2841:
  1778  00124A  EF36  F009         	goto	l224
  1779  00124E                     u2840:
  1780  00124E                     
  1781                           ; BSR set to: 0
  1782                           ;main.c: 43:             if(now_state == 1){
  1783  00124E  05B2               	decf	run@now_state& (0+255),w,b
  1784  001250  11B3               	iorwf	(run@now_state+1)& (0+255),w,b
  1785  001252  A4D8               	btfss	status,2,c
  1786  001254  EF2E  F009         	goto	u2851
  1787  001258  EF30  F009         	goto	u2850
  1788  00125C                     u2851:
  1789  00125C  EF33  F009         	goto	l2932
  1790  001260                     u2850:
  1791  001260                     
  1792                           ; BSR set to: 0
  1793                           ;main.c: 44:                 time--;
  1794  001260  07CE               	decf	_time& (0+255),f,b
  1795  001262  A0D8               	btfss	status,0,c
  1796  001264  07CF               	decf	(_time+1)& (0+255),f,b
  1797  001266                     l2932:
  1798                           
  1799                           ; BSR set to: 0
  1800                           ;main.c: 46:             LATDbits.LD4 = 0;
  1801  001266  988C               	bcf	140,4,c	;volatile
  1802                           
  1803                           ;main.c: 47:         }
  1804  001268  EF37  F009         	goto	l226
  1805  00126C                     l224:
  1806                           
  1807                           ; BSR set to: 0
  1808                           ;main.c: 50:             LATDbits.LD4 = 1;
  1809  00126C  888C               	bsf	140,4,c	;volatile
  1810  00126E                     l226:
  1811                           
  1812                           ; BSR set to: 0
  1813                           ;main.c: 53:         if(RCIF){
  1814  00126E  AA9E               	btfss	3998,5,c	;volatile
  1815  001270  EF3C  F009         	goto	u2861
  1816  001274  EF3E  F009         	goto	u2860
  1817  001278                     u2861:
  1818  001278  EF55  F009         	goto	l227
  1819  00127C                     u2860:
  1820  00127C                     
  1821                           ; BSR set to: 0
  1822                           ;main.c: 54:             unsigned char c = RCREG;
  1823  00127C  CFAE F0B6          	movff	4014,run@c	;volatile
  1824  001280                     
  1825                           ; BSR set to: 0
  1826                           ;main.c: 55:             if(c == 'e')
  1827  001280  0E65               	movlw	101
  1828  001282  19B6               	xorwf	run@c& (0+255),w,b
  1829  001284  A4D8               	btfss	status,2,c
  1830  001286  EF47  F009         	goto	u2871
  1831  00128A  EF49  F009         	goto	u2870
  1832  00128E                     u2871:
  1833  00128E  EF55  F009         	goto	l227
  1834  001292                     u2870:
  1835  001292                     
  1836                           ; BSR set to: 0
  1837                           ;main.c: 56:             {;main.c: 57:                 UART_Write(c);
  1838  001292  51B6               	movf	run@c& (0+255),w,b
  1839  001294  EC26  F00E         	call	_UART_Write
  1840  001298                     
  1841                           ;main.c: 58:                 UART_Write_Text("return from run\r\n");
  1842  001298  0E14               	movlw	low STR_3
  1843  00129A  6E12               	movwf	UART_Write_Text@text^0,c
  1844  00129C  0E06               	movlw	high STR_3
  1845  00129E  6E13               	movwf	(UART_Write_Text@text+1)^0,c
  1846  0012A0  EC5F  F00B         	call	_UART_Write_Text	;wreg free
  1847  0012A4                     
  1848                           ;main.c: 59:                 LATDbits.LD4 = 0;
  1849  0012A4  988C               	bcf	140,4,c	;volatile
  1850  0012A6  EF7C  F009         	goto	l229
  1851  0012AA                     l227:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;main.c: 63:         now_state = cur;
  1855  0012AA  C0B4  F0B2         	movff	run@cur,run@now_state
  1856  0012AE  C0B5  F0B3         	movff	run@cur+1,run@now_state+1
  1857  0012B2                     
  1858                           ; BSR set to: 0
  1859                           ;main.c: 64:         sprintf(word,"\b\b%2d",time);
  1860  0012B2  0E9E               	movlw	low run@word
  1861  0012B4  6F90               	movwf	sprintf@s& (0+255),b
  1862  0012B6  0E00               	movlw	high run@word
  1863  0012B8  6F91               	movwf	(sprintf@s+1)& (0+255),b
  1864  0012BA  0E38               	movlw	low STR_4
  1865  0012BC  6F92               	movwf	sprintf@fmt& (0+255),b
  1866  0012BE  0E06               	movlw	high STR_4
  1867  0012C0  6F93               	movwf	(sprintf@fmt+1)& (0+255),b
  1868  0012C2  C0CE  F094         	movff	_time,?_sprintf+4
  1869  0012C6  C0CF  F095         	movff	_time+1,?_sprintf+5
  1870  0012CA  EC9B  F00C         	call	_sprintf	;wreg free
  1871  0012CE                     
  1872                           ;main.c: 65:         UART_Write_Text(word);
  1873  0012CE  0E9E               	movlw	low run@word
  1874  0012D0  6E12               	movwf	UART_Write_Text@text^0,c
  1875  0012D2  0E00               	movlw	high run@word
  1876  0012D4  6E13               	movwf	(UART_Write_Text@text+1)^0,c
  1877  0012D6  EC5F  F00B         	call	_UART_Write_Text	;wreg free
  1878  0012DA                     l2950:
  1879                           
  1880                           ;main.c: 40:     while(time > 0){
  1881  0012DA  0100               	movlb	0	; () banked
  1882  0012DC  BFCF               	btfsc	(_time+1)& (0+255),7,b
  1883  0012DE  EF7B  F009         	goto	u2880
  1884  0012E2  51CF               	movf	(_time+1)& (0+255),w,b
  1885  0012E4  E106               	bnz	u2881
  1886  0012E6  05CE               	decf	_time& (0+255),w,b
  1887  0012E8  B0D8               	btfsc	status,0,c
  1888  0012EA  EF79  F009         	goto	u2881
  1889  0012EE  EF7B  F009         	goto	u2880
  1890  0012F2                     u2881:
  1891  0012F2  EF10  F009         	goto	l2924
  1892  0012F6                     u2880:
  1893  0012F6                     
  1894                           ; BSR set to: 0
  1895                           ;main.c: 68:      LATDbits.LD4 = 0;
  1896  0012F6  988C               	bcf	140,4,c	;volatile
  1897  0012F8                     l229:
  1898  0012F8  0012               	return		;funcret
  1899  0012FA                     __end_of_run:
  1900                           	callstack 0
  1901                           
  1902 ;; *************** function _sprintf *****************
  1903 ;; Defined at:
  1904 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  s               2   16[BANK0 ] PTR unsigned char 
  1907 ;;		 -> Mode_run@word(20), run@word(20), 
  1908 ;;  fmt             2   18[BANK0 ] PTR const unsigned char 
  1909 ;;		 -> STR_6(6), STR_4(6), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  f               6   24[BANK0 ] struct _IO_FILE
  1912 ;;  ap              2   22[BANK0 ] PTR void [1]
  1913 ;;		 -> ?_sprintf(2), 
  1914 ;;  ret             2    0        int 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  2   16[BANK0 ] int 
  1917 ;; Registers used:
  1918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1924 ;;      Params:         0       6       0       0       0       0       0
  1925 ;;      Locals:         0       8       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0
  1927 ;;      Totals:         0      14       0       0       0       0       0
  1928 ;;Total ram usage:       14 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 11
  1931 ;; This function calls:
  1932 ;;		_vfprintf
  1933 ;; This function is called by:
  1934 ;;		_run
  1935 ;;		_Mode_run
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text9
  1940  001936                     __ptext9:
  1941                           	callstack 0
  1942  001936                     _sprintf:
  1943                           	callstack 17
  1944  001936  0E94               	movlw	low (?_sprintf+4)
  1945  001938  0100               	movlb	0	; () banked
  1946  00193A  6F96               	movwf	sprintf@ap& (0+255),b
  1947  00193C  0E00               	movlw	high (?_sprintf+4)
  1948  00193E  6F97               	movwf	(sprintf@ap+1)& (0+255),b
  1949  001940  C090  F098         	movff	sprintf@s,sprintf@f
  1950  001944  C091  F099         	movff	sprintf@s+1,sprintf@f+1
  1951  001948                     
  1952                           ; BSR set to: 0
  1953  001948  0E00               	movlw	0
  1954  00194A  6F9B               	movwf	(sprintf@f+3)& (0+255),b
  1955  00194C  0E00               	movlw	0
  1956  00194E  6F9A               	movwf	(sprintf@f+2)& (0+255),b
  1957  001950                     
  1958                           ; BSR set to: 0
  1959  001950  0E00               	movlw	0
  1960  001952  6F9D               	movwf	(sprintf@f+5)& (0+255),b
  1961  001954  0E00               	movlw	0
  1962  001956  6F9C               	movwf	(sprintf@f+4)& (0+255),b
  1963  001958                     
  1964                           ; BSR set to: 0
  1965  001958  0E98               	movlw	low sprintf@f
  1966  00195A  6F8A               	movwf	vfprintf@fp& (0+255),b
  1967  00195C  0E00               	movlw	high sprintf@f
  1968  00195E  6F8B               	movwf	(vfprintf@fp+1)& (0+255),b
  1969  001960  C092  F08C         	movff	sprintf@fmt,vfprintf@fmt
  1970  001964  C093  F08D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1971  001968  0E96               	movlw	low sprintf@ap
  1972  00196A  6F8E               	movwf	vfprintf@ap& (0+255),b
  1973  00196C  0E00               	movlw	high sprintf@ap
  1974  00196E  6F8F               	movwf	(vfprintf@ap+1)& (0+255),b
  1975  001970  EC15  F00C         	call	_vfprintf	;wreg free
  1976  001974  0100               	movlb	0	; () banked
  1977  001976  519A               	movf	(sprintf@f+2)& (0+255),w,b
  1978  001978  2590               	addwf	sprintf@s& (0+255),w,b
  1979  00197A  6ED9               	movwf	fsr2l,c
  1980  00197C  519B               	movf	(sprintf@f+3)& (0+255),w,b
  1981  00197E  2191               	addwfc	(sprintf@s+1)& (0+255),w,b
  1982  001980  6EDA               	movwf	fsr2h,c
  1983  001982  0E00               	movlw	0
  1984  001984  6EDF               	movwf	indf2,c
  1985  001986                     
  1986                           ; BSR set to: 0
  1987  001986  0012               	return		;funcret
  1988  001988                     __end_of_sprintf:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _vfprintf *****************
  1992 ;; Defined at:
  1993 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  1996 ;;		 -> sprintf@f(6), 
  1997 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  1998 ;;		 -> STR_6(6), STR_4(6), 
  1999 ;;  ap              2   14[BANK0 ] PTR PTR void 
  2000 ;;		 -> sprintf@ap(2), 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  cfmt            2   89[COMRAM] PTR unsigned char 
  2003 ;;		 -> STR_6(6), STR_4(6), 
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  2   10[BANK0 ] int 
  2006 ;; Registers used:
  2007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2013 ;;      Params:         0       6       0       0       0       0       0
  2014 ;;      Locals:         2       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0
  2016 ;;      Totals:         2       6       0       0       0       0       0
  2017 ;;Total ram usage:        8 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 10
  2020 ;; This function calls:
  2021 ;;		_vfpfcnvrt
  2022 ;; This function is called by:
  2023 ;;		_sprintf
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text10
  2028  00182A                     __ptext10:
  2029                           	callstack 0
  2030  00182A                     _vfprintf:
  2031                           	callstack 17
  2032  00182A                     
  2033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2034  00182A  C08C  F05A         	movff	vfprintf@fmt,vfprintf@cfmt
  2035  00182E  C08D  F05B         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2036  001832                     
  2037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2038  001832  0E00               	movlw	0
  2039  001834  6E5E               	movwf	(_nout+1)^0,c
  2040  001836  0E00               	movlw	0
  2041  001838  6E5D               	movwf	_nout^0,c
  2042                           
  2043                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2044  00183A  EF31  F00C         	goto	l2900
  2045  00183E                     l2898:
  2046                           
  2047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2048  00183E  C08A  F050         	movff	vfprintf@fp,vfpfcnvrt@fp
  2049  001842  C08B  F051         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2050  001846  0E5A               	movlw	low vfprintf@cfmt
  2051  001848  6E52               	movwf	vfpfcnvrt@fmt^0,c
  2052  00184A  0E00               	movlw	high vfprintf@cfmt
  2053  00184C  6E53               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2054  00184E  C08E  F054         	movff	vfprintf@ap,vfpfcnvrt@ap
  2055  001852  C08F  F055         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2056  001856  EC9C  F004         	call	_vfpfcnvrt	;wreg free
  2057  00185A  5050               	movf	?_vfpfcnvrt^0,w,c
  2058  00185C  265D               	addwf	_nout^0,f,c
  2059  00185E  5051               	movf	(?_vfpfcnvrt+1)^0,w,c
  2060  001860  225E               	addwfc	(_nout+1)^0,f,c
  2061  001862                     l2900:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2064  001862  C05A  FFF6         	movff	vfprintf@cfmt,tblptrl
  2065  001866  C05B  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2066  00186A                     	if	0	;tblptru may be non-zero
  2067  00186A                     	endif
  2068  00186A                     	if	0	;tblptru may be non-zero
  2069  00186A                     	endif
  2070  00186A  0008               	tblrd		*
  2071  00186C  50F5               	movf	tablat,w,c
  2072  00186E  0900               	iorlw	0
  2073  001870  A4D8               	btfss	status,2,c
  2074  001872  EF3D  F00C         	goto	u2821
  2075  001876  EF3F  F00C         	goto	u2820
  2076  00187A                     u2821:
  2077  00187A  EF1F  F00C         	goto	l2898
  2078  00187E                     u2820:
  2079  00187E                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2081  00187E  C05D  F08A         	movff	_nout,?_vfprintf
  2082  001882  C05E  F08B         	movff	_nout+1,?_vfprintf+1
  2083  001886  0012               	return		;funcret
  2084  001888                     __end_of_vfprintf:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function _vfpfcnvrt *****************
  2088 ;; Defined at:
  2089 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  2092 ;;		 -> sprintf@f(6), 
  2093 ;;  fmt             2   81[COMRAM] PTR PTR unsigned char 
  2094 ;;		 -> vfprintf@cfmt(2), 
  2095 ;;  ap              2   83[COMRAM] PTR PTR void 
  2096 ;;		 -> sprintf@ap(2), 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  ll              8    0[BANK0 ] long long 
  2099 ;;  llu             8    0        unsigned long long 
  2100 ;;  f               4    0        unsigned long long 
  2101 ;;  vp              3    0        PTR void 
  2102 ;;  ct              3    0        unsigned char [3]
  2103 ;;  cp              3    0        PTR unsigned char 
  2104 ;;  i               2    0        int 
  2105 ;;  done            2    0        int 
  2106 ;;  c               1    0        unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  2   79[COMRAM] int 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2116 ;;      Params:         6       0       0       0       0       0       0
  2117 ;;      Locals:         0      10       0       0       0       0       0
  2118 ;;      Temps:          4       0       0       0       0       0       0
  2119 ;;      Totals:        10      10       0       0       0       0       0
  2120 ;;Total ram usage:       20 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; Hardware stack levels required when called: 9
  2123 ;; This function calls:
  2124 ;;		_atoi
  2125 ;;		_dtoa
  2126 ;;		_fputc
  2127 ;;		_isdigit
  2128 ;; This function is called by:
  2129 ;;		_vfprintf
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text11
  2134  000938                     __ptext11:
  2135                           	callstack 0
  2136  000938                     _vfpfcnvrt:
  2137                           	callstack 17
  2138  000938                     
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2140  000938  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2141  00093C  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2142  000940  CFDE FFF6          	movff	postinc2,tblptrl
  2143  000944  CFDD FFF7          	movff	postdec2,tblptrh
  2144  000948                     	if	0	;tblptru may be non-zero
  2145  000948                     	endif
  2146  000948                     	if	0	;tblptru may be non-zero
  2147  000948                     	endif
  2148  000948  0008               	tblrd		*
  2149  00094A  50F5               	movf	tablat,w,c
  2150  00094C  0A25               	xorlw	37
  2151  00094E  A4D8               	btfss	status,2,c
  2152  000950  EFAC  F004         	goto	u2731
  2153  000954  EFAE  F004         	goto	u2730
  2154  000958                     u2731:
  2155  000958  EFD9  F005         	goto	l2886
  2156  00095C                     u2730:
  2157  00095C                     
  2158                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2159  00095C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2160  000960  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2161  000964  2ADE               	incf	postinc2,f,c
  2162  000966  0E00               	movlw	0
  2163  000968  22DD               	addwfc	postdec2,f,c
  2164  00096A                     
  2165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2166  00096A  0E00               	movlw	0
  2167  00096C  6E60               	movwf	(_width+1)^0,c
  2168  00096E  0E00               	movlw	0
  2169  000970  6E5F               	movwf	_width^0,c
  2170  000972  C05F  F063         	movff	_width,_flags
  2171  000976  C060  F064         	movff	_width+1,_flags+1
  2172  00097A                     
  2173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2174  00097A  6861               	setf	_prec^0,c
  2175  00097C  6862               	setf	(_prec+1)^0,c
  2176  00097E                     
  2177                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2178  00097E  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179  000982  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180  000986  CFDE FFF6          	movff	postinc2,tblptrl
  2181  00098A  CFDD FFF7          	movff	postdec2,tblptrh
  2182  00098E                     	if	0	;tblptru may be non-zero
  2183  00098E                     	endif
  2184  00098E                     	if	0	;tblptru may be non-zero
  2185  00098E                     	endif
  2186  00098E  0008               	tblrd		*
  2187  000990  50F5               	movf	tablat,w,c
  2188  000992  0A2A               	xorlw	42
  2189  000994  A4D8               	btfss	status,2,c
  2190  000996  EFCF  F004         	goto	u2741
  2191  00099A  EFD1  F004         	goto	u2740
  2192  00099E                     u2741:
  2193  00099E  EFFA  F004         	goto	l2850
  2194  0009A2                     u2740:
  2195  0009A2                     
  2196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2197  0009A2  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2198  0009A6  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2199  0009AA  2ADE               	incf	postinc2,f,c
  2200  0009AC  0E00               	movlw	0
  2201  0009AE  22DD               	addwfc	postdec2,f,c
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2204  0009B0  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2205  0009B4  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2206  0009B8  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2207  0009BC  0E02               	movlw	2
  2208  0009BE  26DE               	addwf	postinc2,f,c
  2209  0009C0  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2210  0009C4  0E00               	movlw	0
  2211  0009C6  22DD               	addwfc	postdec2,f,c
  2212  0009C8  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2213  0009CC  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2214  0009D0  CFDE F05F          	movff	postinc2,_width
  2215  0009D4  CFDD F060          	movff	postdec2,_width+1
  2216  0009D8                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2218  0009D8  BE60               	btfsc	(_width+1)^0,7,c
  2219  0009DA  EFF3  F004         	goto	u2750
  2220  0009DE  EFF1  F004         	goto	u2751
  2221  0009E2                     u2751:
  2222  0009E2  EF3E  F005         	goto	l2860
  2223  0009E6                     u2750:
  2224  0009E6                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2226  0009E6  8063               	bsf	_flags^0,0,c
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2229  0009E8  6C5F               	negf	_width^0,c
  2230  0009EA  1E60               	comf	(_width+1)^0,f,c
  2231  0009EC  B0D8               	btfsc	status,0,c
  2232  0009EE  2A60               	incf	(_width+1)^0,f,c
  2233  0009F0  EF3E  F005         	goto	l2860
  2234  0009F4                     l2850:
  2235                           
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2237  0009F4  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238  0009F8  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239  0009FC  CFDE F01D          	movff	postinc2,atoi@s
  2240  000A00  CFDD F01E          	movff	postdec2,atoi@s+1
  2241  000A04  ECF5  F005         	call	_atoi	;wreg free
  2242  000A08  C01D  F05F         	movff	?_atoi,_width
  2243  000A0C  C01E  F060         	movff	?_atoi+1,_width+1
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2246  000A10  EF11  F005         	goto	l2854
  2247  000A14                     l2852:
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2251  000A14  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  000A18  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  000A1C  2ADE               	incf	postinc2,f,c
  2254  000A1E  0E00               	movlw	0
  2255  000A20  22DD               	addwfc	postdec2,f,c
  2256  000A22                     l2854:
  2257  000A22  0ED0               	movlw	208
  2258  000A24  6E56               	movwf	??_vfpfcnvrt^0,c
  2259  000A26  0EFF               	movlw	255
  2260  000A28  6E57               	movwf	(??_vfpfcnvrt+1)^0,c
  2261  000A2A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2262  000A2E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2263  000A32  CFDE FFF6          	movff	postinc2,tblptrl
  2264  000A36  CFDD FFF7          	movff	postdec2,tblptrh
  2265  000A3A                     	if	0	;tblptru may be non-zero
  2266  000A3A                     	endif
  2267  000A3A                     	if	0	;tblptru may be non-zero
  2268  000A3A                     	endif
  2269  000A3A  0008               	tblrd		*
  2270  000A3C  50F5               	movf	tablat,w,c
  2271  000A3E  6E58               	movwf	(??_vfpfcnvrt+2)^0,c
  2272  000A40  6A59               	clrf	(??_vfpfcnvrt+3)^0,c
  2273  000A42  5056               	movf	??_vfpfcnvrt^0,w,c
  2274  000A44  2658               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2275  000A46  5057               	movf	(??_vfpfcnvrt+1)^0,w,c
  2276  000A48  2259               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2277  000A4A  5059               	movf	(??_vfpfcnvrt+3)^0,w,c
  2278  000A4C  E10A               	bnz	u2760
  2279  000A4E  0E0A               	movlw	10
  2280  000A50  5C58               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2281  000A52  A0D8               	btfss	status,0,c
  2282  000A54  EF2E  F005         	goto	u2761
  2283  000A58  EF31  F005         	goto	u2760
  2284  000A5C                     u2761:
  2285  000A5C  0E01               	movlw	1
  2286  000A5E  EF32  F005         	goto	u2770
  2287  000A62                     u2760:
  2288  000A62  0E00               	movlw	0
  2289  000A64                     u2770:
  2290  000A64  0100               	movlb	0	; () banked
  2291  000A66  6F88               	movwf	_vfpfcnvrt$1806& (0+255),b
  2292  000A68  6B89               	clrf	(_vfpfcnvrt$1806+1)& (0+255),b
  2293  000A6A                     
  2294                           ; BSR set to: 0
  2295  000A6A  5188               	movf	_vfpfcnvrt$1806& (0+255),w,b
  2296  000A6C  1189               	iorwf	(_vfpfcnvrt$1806+1)& (0+255),w,b
  2297  000A6E  A4D8               	btfss	status,2,c
  2298  000A70  EF3C  F005         	goto	u2781
  2299  000A74  EF3E  F005         	goto	u2780
  2300  000A78                     u2781:
  2301  000A78  EF0A  F005         	goto	l2852
  2302  000A7C                     u2780:
  2303  000A7C                     l2860:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2306  000A7C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2307  000A80  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2308  000A84  CFDE FFF6          	movff	postinc2,tblptrl
  2309  000A88  CFDD FFF7          	movff	postdec2,tblptrh
  2310  000A8C                     	if	0	;tblptru may be non-zero
  2311  000A8C                     	endif
  2312  000A8C                     	if	0	;tblptru may be non-zero
  2313  000A8C                     	endif
  2314  000A8C  0008               	tblrd		*
  2315  000A8E  50F5               	movf	tablat,w,c
  2316  000A90  0A64               	xorlw	100
  2317  000A92  B4D8               	btfsc	status,2,c
  2318  000A94  EF4E  F005         	goto	u2791
  2319  000A98  EF50  F005         	goto	u2790
  2320  000A9C                     u2791:
  2321  000A9C  EF62  F005         	goto	l2864
  2322  000AA0                     u2790:
  2323  000AA0  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  000AA4  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  000AA8  CFDE FFF6          	movff	postinc2,tblptrl
  2326  000AAC  CFDD FFF7          	movff	postdec2,tblptrh
  2327  000AB0                     	if	0	;tblptru may be non-zero
  2328  000AB0                     	endif
  2329  000AB0                     	if	0	;tblptru may be non-zero
  2330  000AB0                     	endif
  2331  000AB0  0008               	tblrd		*
  2332  000AB2  50F5               	movf	tablat,w,c
  2333  000AB4  0A69               	xorlw	105
  2334  000AB6  A4D8               	btfss	status,2,c
  2335  000AB8  EF60  F005         	goto	u2801
  2336  000ABC  EF62  F005         	goto	u2800
  2337  000AC0                     u2801:
  2338  000AC0  EFA3  F005         	goto	l2870
  2339  000AC4                     u2800:
  2340  000AC4                     l2864:
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  2343  000AC4  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2344  000AC8  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2345  000ACC  2ADE               	incf	postinc2,f,c
  2346  000ACE  0E00               	movlw	0
  2347  000AD0  22DD               	addwfc	postdec2,f,c
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2350  000AD2  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2351  000AD6  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2352  000ADA  CFDF F056          	movff	indf2,??_vfpfcnvrt
  2353  000ADE  0E02               	movlw	2
  2354  000AE0  26DE               	addwf	postinc2,f,c
  2355  000AE2  CFDF F057          	movff	indf2,??_vfpfcnvrt+1
  2356  000AE6  0E00               	movlw	0
  2357  000AE8  22DD               	addwfc	postdec2,f,c
  2358  000AEA  C056  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2359  000AEE  C057  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2360  000AF2  CFDE F080          	movff	postinc2,vfpfcnvrt@ll
  2361  000AF6  CFDD F081          	movff	postdec2,vfpfcnvrt@ll+1
  2362  000AFA  0100               	movlb	0	; () banked
  2363  000AFC  0E00               	movlw	0
  2364  000AFE  BF81               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  2365  000B00  0EFF               	movlw	-1
  2366  000B02  6F82               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  2367  000B04  6F83               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  2368  000B06  6F84               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  2369  000B08  6F85               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  2370  000B0A  6F86               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  2371  000B0C  6F87               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  2372  000B0E                     
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  2375  000B0E  C050  F02C         	movff	vfpfcnvrt@fp,dtoa@fp
  2376  000B12  C051  F02D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2377  000B16  C080  F02E         	movff	vfpfcnvrt@ll,dtoa@d
  2378  000B1A  C081  F02F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  2379  000B1E  C082  F030         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  2380  000B22  C083  F031         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  2381  000B26  C084  F032         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  2382  000B2A  C085  F033         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  2383  000B2E  C086  F034         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  2384  000B32  C087  F035         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  2385  000B36  EC2D  F003         	call	_dtoa	;wreg free
  2386  000B3A  C02C  F050         	movff	?_dtoa,?_vfpfcnvrt
  2387  000B3E  C02D  F051         	movff	?_dtoa+1,?_vfpfcnvrt+1
  2388  000B42  EFF4  F005         	goto	l1079
  2389  000B46                     l2870:
  2390                           
  2391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2392  000B46  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2393  000B4A  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2394  000B4E  CFDE FFF6          	movff	postinc2,tblptrl
  2395  000B52  CFDD FFF7          	movff	postdec2,tblptrh
  2396  000B56                     	if	0	;tblptru may be non-zero
  2397  000B56                     	endif
  2398  000B56                     	if	0	;tblptru may be non-zero
  2399  000B56                     	endif
  2400  000B56  0008               	tblrd		*
  2401  000B58  50F5               	movf	tablat,w,c
  2402  000B5A  0A25               	xorlw	37
  2403  000B5C  A4D8               	btfss	status,2,c
  2404  000B5E  EFB3  F005         	goto	u2811
  2405  000B62  EFB5  F005         	goto	u2810
  2406  000B66                     u2811:
  2407  000B66  EFCC  F005         	goto	l2880
  2408  000B6A                     u2810:
  2409  000B6A                     
  2410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2411  000B6A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2412  000B6E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2413  000B72  2ADE               	incf	postinc2,f,c
  2414  000B74  0E00               	movlw	0
  2415  000B76  22DD               	addwfc	postdec2,f,c
  2416  000B78                     
  2417                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2418  000B78  0E00               	movlw	0
  2419  000B7A  6E12               	movwf	(fputc@c+1)^0,c
  2420  000B7C  0E25               	movlw	37
  2421  000B7E  6E11               	movwf	fputc@c^0,c
  2422  000B80  C050  F013         	movff	vfpfcnvrt@fp,fputc@fp
  2423  000B84  C051  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2424  000B88  ECF7  F009         	call	_fputc	;wreg free
  2425  000B8C                     l2876:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2428  000B8C  0E00               	movlw	0
  2429  000B8E  6E51               	movwf	(?_vfpfcnvrt+1)^0,c
  2430  000B90  0E01               	movlw	1
  2431  000B92  6E50               	movwf	?_vfpfcnvrt^0,c
  2432  000B94  EFF4  F005         	goto	l1079
  2433  000B98                     l2880:
  2434                           
  2435                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2436  000B98  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2437  000B9C  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2438  000BA0  2ADE               	incf	postinc2,f,c
  2439  000BA2  0E00               	movlw	0
  2440  000BA4  22DD               	addwfc	postdec2,f,c
  2441  000BA6                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2443  000BA6  0E00               	movlw	0
  2444  000BA8  6E51               	movwf	(?_vfpfcnvrt+1)^0,c
  2445  000BAA  0E00               	movlw	0
  2446  000BAC  6E50               	movwf	?_vfpfcnvrt^0,c
  2447  000BAE  EFF4  F005         	goto	l1079
  2448  000BB2                     l2886:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2451  000BB2  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2452  000BB6  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2453  000BBA  CFDE FFF6          	movff	postinc2,tblptrl
  2454  000BBE  CFDD FFF7          	movff	postdec2,tblptrh
  2455  000BC2                     	if	0	;tblptru may be non-zero
  2456  000BC2                     	endif
  2457  000BC2                     	if	0	;tblptru may be non-zero
  2458  000BC2                     	endif
  2459  000BC2  0008               	tblrd		*
  2460  000BC4  50F5               	movf	tablat,w,c
  2461  000BC6  6E11               	movwf	fputc@c^0,c
  2462  000BC8  6A12               	clrf	(fputc@c+1)^0,c
  2463  000BCA  C050  F013         	movff	vfpfcnvrt@fp,fputc@fp
  2464  000BCE  C051  F014         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2465  000BD2  ECF7  F009         	call	_fputc	;wreg free
  2466  000BD6                     
  2467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2468  000BD6  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2469  000BDA  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2470  000BDE  2ADE               	incf	postinc2,f,c
  2471  000BE0  0E00               	movlw	0
  2472  000BE2  22DD               	addwfc	postdec2,f,c
  2473  000BE4  EFC6  F005         	goto	l2876
  2474  000BE8                     l1079:
  2475  000BE8  0012               	return		;funcret
  2476  000BEA                     __end_of_vfpfcnvrt:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _dtoa *****************
  2480 ;; Defined at:
  2481 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  fp              2   43[COMRAM] PTR struct _IO_FILE
  2484 ;;		 -> sprintf@f(6), 
  2485 ;;  d               8   45[COMRAM] long long 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  n               8   69[COMRAM] long long 
  2488 ;;  i               2   77[COMRAM] int 
  2489 ;;  s               2   67[COMRAM] int 
  2490 ;;  w               2   65[COMRAM] int 
  2491 ;;  p               2   63[COMRAM] int 
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  2   43[COMRAM] int 
  2494 ;; Registers used:
  2495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2501 ;;      Params:        10       0       0       0       0       0       0
  2502 ;;      Locals:        18       0       0       0       0       0       0
  2503 ;;      Temps:          8       0       0       0       0       0       0
  2504 ;;      Totals:        36       0       0       0       0       0       0
  2505 ;;Total ram usage:       36 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 8
  2508 ;; This function calls:
  2509 ;;		___aodiv
  2510 ;;		___aomod
  2511 ;;		_abs
  2512 ;;		_pad
  2513 ;; This function is called by:
  2514 ;;		_vfpfcnvrt
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text12
  2519  00065A                     __ptext12:
  2520                           	callstack 0
  2521  00065A                     _dtoa:
  2522                           	callstack 17
  2523  00065A                     
  2524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  2525  00065A  C02E  F046         	movff	dtoa@d,dtoa@n
  2526  00065E  C02F  F047         	movff	dtoa@d+1,dtoa@n+1
  2527  000662  C030  F048         	movff	dtoa@d+2,dtoa@n+2
  2528  000666  C031  F049         	movff	dtoa@d+3,dtoa@n+3
  2529  00066A  C032  F04A         	movff	dtoa@d+4,dtoa@n+4
  2530  00066E  C033  F04B         	movff	dtoa@d+5,dtoa@n+5
  2531  000672  C034  F04C         	movff	dtoa@d+6,dtoa@n+6
  2532  000676  C035  F04D         	movff	dtoa@d+7,dtoa@n+7
  2533  00067A                     
  2534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  2535  00067A  BE4D               	btfsc	(dtoa@n+7)^0,7,c
  2536  00067C  EF42  F003         	goto	u2581
  2537  000680  EF45  F003         	goto	u2580
  2538  000684                     u2581:
  2539  000684  0E01               	movlw	1
  2540  000686  EF46  F003         	goto	u2590
  2541  00068A                     u2580:
  2542  00068A  0E00               	movlw	0
  2543  00068C                     u2590:
  2544  00068C  6E44               	movwf	dtoa@s^0,c
  2545  00068E  6A45               	clrf	(dtoa@s+1)^0,c
  2546                           
  2547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  2548  000690  5044               	movf	dtoa@s^0,w,c
  2549  000692  1045               	iorwf	(dtoa@s+1)^0,w,c
  2550  000694  B4D8               	btfsc	status,2,c
  2551  000696  EF4F  F003         	goto	u2601
  2552  00069A  EF51  F003         	goto	u2600
  2553  00069E                     u2601:
  2554  00069E  EF61  F003         	goto	l2778
  2555  0006A2                     u2600:
  2556  0006A2                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  2558  0006A2  1E4D               	comf	(dtoa@n+7)^0,f,c
  2559  0006A4  1E4C               	comf	(dtoa@n+6)^0,f,c
  2560  0006A6  1E4B               	comf	(dtoa@n+5)^0,f,c
  2561  0006A8  1E4A               	comf	(dtoa@n+4)^0,f,c
  2562  0006AA  1E49               	comf	(dtoa@n+3)^0,f,c
  2563  0006AC  1E48               	comf	(dtoa@n+2)^0,f,c
  2564  0006AE  1E47               	comf	(dtoa@n+1)^0,f,c
  2565  0006B0  6C46               	negf	dtoa@n^0,c
  2566  0006B2  0E00               	movlw	0
  2567  0006B4  2247               	addwfc	(dtoa@n+1)^0,f,c
  2568  0006B6  2248               	addwfc	(dtoa@n+2)^0,f,c
  2569  0006B8  2249               	addwfc	(dtoa@n+3)^0,f,c
  2570  0006BA  224A               	addwfc	(dtoa@n+4)^0,f,c
  2571  0006BC  224B               	addwfc	(dtoa@n+5)^0,f,c
  2572  0006BE  224C               	addwfc	(dtoa@n+6)^0,f,c
  2573  0006C0  224D               	addwfc	(dtoa@n+7)^0,f,c
  2574  0006C2                     l2778:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2577  0006C2  BE62               	btfsc	(_prec+1)^0,7,c
  2578  0006C4  EF66  F003         	goto	u2611
  2579  0006C8  EF68  F003         	goto	u2610
  2580  0006CC                     u2611:
  2581  0006CC  EF69  F003         	goto	l2782
  2582  0006D0                     u2610:
  2583  0006D0                     
  2584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2585  0006D0  9263               	bcf	_flags^0,1,c
  2586  0006D2                     l2782:
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2589  0006D2  BE62               	btfsc	(_prec+1)^0,7,c
  2590  0006D4  EF76  F003         	goto	u2620
  2591  0006D8  5062               	movf	(_prec+1)^0,w,c
  2592  0006DA  E106               	bnz	u2621
  2593  0006DC  0461               	decf	_prec^0,w,c
  2594  0006DE  B0D8               	btfsc	status,0,c
  2595  0006E0  EF74  F003         	goto	u2621
  2596  0006E4  EF76  F003         	goto	u2620
  2597  0006E8                     u2621:
  2598  0006E8  EF7C  F003         	goto	l1042
  2599  0006EC                     u2620:
  2600  0006EC  0E00               	movlw	0
  2601  0006EE  6E41               	movwf	(dtoa@p+1)^0,c
  2602  0006F0  0E01               	movlw	1
  2603  0006F2  6E40               	movwf	dtoa@p^0,c
  2604  0006F4  EF80  F003         	goto	l1044
  2605  0006F8                     l1042:
  2606  0006F8  C061  F040         	movff	_prec,dtoa@p
  2607  0006FC  C062  F041         	movff	_prec+1,dtoa@p+1
  2608  000700                     l1044:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2611  000700  C05F  F042         	movff	_width,dtoa@w
  2612  000704  C060  F043         	movff	_width+1,dtoa@w+1
  2613  000708                     
  2614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2615  000708  5044               	movf	dtoa@s^0,w,c
  2616  00070A  1045               	iorwf	(dtoa@s+1)^0,w,c
  2617  00070C  A4D8               	btfss	status,2,c
  2618  00070E  EF8B  F003         	goto	u2631
  2619  000712  EF8D  F003         	goto	u2630
  2620  000716                     u2631:
  2621  000716  EF94  F003         	goto	l2790
  2622  00071A                     u2630:
  2623  00071A  A463               	btfss	_flags^0,2,c
  2624  00071C  EF92  F003         	goto	u2641
  2625  000720  EF94  F003         	goto	u2640
  2626  000724                     u2641:
  2627  000724  EF97  F003         	goto	l2792
  2628  000728                     u2640:
  2629  000728                     l2790:
  2630                           
  2631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  2632  000728  0642               	decf	dtoa@w^0,f,c
  2633  00072A  A0D8               	btfss	status,0,c
  2634  00072C  0643               	decf	(dtoa@w+1)^0,f,c
  2635  00072E                     l2792:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2638  00072E  0E00               	movlw	0
  2639  000730  6E4F               	movwf	(dtoa@i+1)^0,c
  2640  000732  0E1F               	movlw	31
  2641  000734  6E4E               	movwf	dtoa@i^0,c
  2642  000736                     
  2643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2644  000736  0E00               	movlw	0
  2645  000738  0101               	movlb	1	; () banked
  2646  00073A  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2647                           
  2648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2649  00073C  EF1C  F004         	goto	l2806
  2650  000740                     l2796:
  2651                           
  2652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  2653  000740  064E               	decf	dtoa@i^0,f,c
  2654  000742  A0D8               	btfss	status,0,c
  2655  000744  064F               	decf	(dtoa@i+1)^0,f,c
  2656  000746                     
  2657                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2658  000746  0E00               	movlw	low _dbuf
  2659  000748  244E               	addwf	dtoa@i^0,w,c
  2660  00074A  6ED9               	movwf	fsr2l,c
  2661  00074C  0E01               	movlw	high _dbuf
  2662  00074E  204F               	addwfc	(dtoa@i+1)^0,w,c
  2663  000750  6EDA               	movwf	fsr2h,c
  2664  000752  C046  F011         	movff	dtoa@n,___aomod@dividend
  2665  000756  C047  F012         	movff	dtoa@n+1,___aomod@dividend+1
  2666  00075A  C048  F013         	movff	dtoa@n+2,___aomod@dividend+2
  2667  00075E  C049  F014         	movff	dtoa@n+3,___aomod@dividend+3
  2668  000762  C04A  F015         	movff	dtoa@n+4,___aomod@dividend+4
  2669  000766  C04B  F016         	movff	dtoa@n+5,___aomod@dividend+5
  2670  00076A  C04C  F017         	movff	dtoa@n+6,___aomod@dividend+6
  2671  00076E  C04D  F018         	movff	dtoa@n+7,___aomod@dividend+7
  2672  000772  0E0A               	movlw	10
  2673  000774  6E19               	movwf	___aomod@divisor^0,c
  2674  000776  0E00               	movlw	0
  2675  000778  6E1A               	movwf	(___aomod@divisor+1)^0,c
  2676  00077A  0E00               	movlw	0
  2677  00077C  6E1B               	movwf	(___aomod@divisor+2)^0,c
  2678  00077E  0E00               	movlw	0
  2679  000780  6E1C               	movwf	(___aomod@divisor+3)^0,c
  2680  000782  0E00               	movlw	0
  2681  000784  6E1D               	movwf	(___aomod@divisor+4)^0,c
  2682  000786  0E00               	movlw	0
  2683  000788  6E1E               	movwf	(___aomod@divisor+5)^0,c
  2684  00078A  0E00               	movlw	0
  2685  00078C  6E1F               	movwf	(___aomod@divisor+6)^0,c
  2686  00078E  0E00               	movlw	0
  2687  000790  6E20               	movwf	(___aomod@divisor+7)^0,c
  2688  000792  ECB5  F007         	call	___aomod	;wreg free
  2689  000796  C011  F036         	movff	?___aomod,??_dtoa
  2690  00079A  C012  F037         	movff	?___aomod+1,??_dtoa+1
  2691  00079E  C013  F038         	movff	?___aomod+2,??_dtoa+2
  2692  0007A2  C014  F039         	movff	?___aomod+3,??_dtoa+3
  2693  0007A6  C015  F03A         	movff	?___aomod+4,??_dtoa+4
  2694  0007AA  C016  F03B         	movff	?___aomod+5,??_dtoa+5
  2695  0007AE  C017  F03C         	movff	?___aomod+6,??_dtoa+6
  2696  0007B2  C018  F03D         	movff	?___aomod+7,??_dtoa+7
  2697  0007B6  C036  F023         	movff	??_dtoa,abs@a
  2698  0007BA  C038  F024         	movff	??_dtoa+2,abs@a+1
  2699  0007BE  EC30  F00D         	call	_abs	;wreg free
  2700  0007C2  5023               	movf	?_abs^0,w,c
  2701  0007C4  0F30               	addlw	48
  2702  0007C6  6EDF               	movwf	indf2,c
  2703  0007C8                     
  2704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  2705  0007C8  0640               	decf	dtoa@p^0,f,c
  2706  0007CA  A0D8               	btfss	status,0,c
  2707  0007CC  0641               	decf	(dtoa@p+1)^0,f,c
  2708  0007CE                     
  2709                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  2710  0007CE  0642               	decf	dtoa@w^0,f,c
  2711  0007D0  A0D8               	btfss	status,0,c
  2712  0007D2  0643               	decf	(dtoa@w+1)^0,f,c
  2713  0007D4                     
  2714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2715  0007D4  C046  F011         	movff	dtoa@n,___aodiv@dividend
  2716  0007D8  C047  F012         	movff	dtoa@n+1,___aodiv@dividend+1
  2717  0007DC  C048  F013         	movff	dtoa@n+2,___aodiv@dividend+2
  2718  0007E0  C049  F014         	movff	dtoa@n+3,___aodiv@dividend+3
  2719  0007E4  C04A  F015         	movff	dtoa@n+4,___aodiv@dividend+4
  2720  0007E8  C04B  F016         	movff	dtoa@n+5,___aodiv@dividend+5
  2721  0007EC  C04C  F017         	movff	dtoa@n+6,___aodiv@dividend+6
  2722  0007F0  C04D  F018         	movff	dtoa@n+7,___aodiv@dividend+7
  2723  0007F4  0E0A               	movlw	10
  2724  0007F6  6E19               	movwf	___aodiv@divisor^0,c
  2725  0007F8  0E00               	movlw	0
  2726  0007FA  6E1A               	movwf	(___aodiv@divisor+1)^0,c
  2727  0007FC  0E00               	movlw	0
  2728  0007FE  6E1B               	movwf	(___aodiv@divisor+2)^0,c
  2729  000800  0E00               	movlw	0
  2730  000802  6E1C               	movwf	(___aodiv@divisor+3)^0,c
  2731  000804  0E00               	movlw	0
  2732  000806  6E1D               	movwf	(___aodiv@divisor+4)^0,c
  2733  000808  0E00               	movlw	0
  2734  00080A  6E1E               	movwf	(___aodiv@divisor+5)^0,c
  2735  00080C  0E00               	movlw	0
  2736  00080E  6E1F               	movwf	(___aodiv@divisor+6)^0,c
  2737  000810  0E00               	movlw	0
  2738  000812  6E20               	movwf	(___aodiv@divisor+7)^0,c
  2739  000814  ECF1  F006         	call	___aodiv	;wreg free
  2740  000818  C011  F046         	movff	?___aodiv,dtoa@n
  2741  00081C  C012  F047         	movff	?___aodiv+1,dtoa@n+1
  2742  000820  C013  F048         	movff	?___aodiv+2,dtoa@n+2
  2743  000824  C014  F049         	movff	?___aodiv+3,dtoa@n+3
  2744  000828  C015  F04A         	movff	?___aodiv+4,dtoa@n+4
  2745  00082C  C016  F04B         	movff	?___aodiv+5,dtoa@n+5
  2746  000830  C017  F04C         	movff	?___aodiv+6,dtoa@n+6
  2747  000834  C018  F04D         	movff	?___aodiv+7,dtoa@n+7
  2748  000838                     l2806:
  2749                           
  2750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2751  000838  BE4F               	btfsc	(dtoa@i+1)^0,7,c
  2752  00083A  EF27  F004         	goto	u2651
  2753  00083E  504F               	movf	(dtoa@i+1)^0,w,c
  2754  000840  E108               	bnz	u2650
  2755  000842  044E               	decf	dtoa@i^0,w,c
  2756  000844  A0D8               	btfss	status,0,c
  2757  000846  EF27  F004         	goto	u2651
  2758  00084A  EF29  F004         	goto	u2650
  2759  00084E                     u2651:
  2760  00084E  EF59  F004         	goto	l2816
  2761  000852                     u2650:
  2762  000852  5046               	movf	dtoa@n^0,w,c
  2763  000854  1047               	iorwf	(dtoa@n+1)^0,w,c
  2764  000856  1048               	iorwf	(dtoa@n+2)^0,w,c
  2765  000858  1049               	iorwf	(dtoa@n+3)^0,w,c
  2766  00085A  104A               	iorwf	(dtoa@n+4)^0,w,c
  2767  00085C  104B               	iorwf	(dtoa@n+5)^0,w,c
  2768  00085E  104C               	iorwf	(dtoa@n+6)^0,w,c
  2769  000860  104D               	iorwf	(dtoa@n+7)^0,w,c
  2770  000862  A4D8               	btfss	status,2,c
  2771  000864  EF36  F004         	goto	u2661
  2772  000868  EF38  F004         	goto	u2660
  2773  00086C                     u2661:
  2774  00086C  EFA0  F003         	goto	l2796
  2775  000870                     u2660:
  2776  000870  BE41               	btfsc	(dtoa@p+1)^0,7,c
  2777  000872  EF45  F004         	goto	u2670
  2778  000876  5041               	movf	(dtoa@p+1)^0,w,c
  2779  000878  E106               	bnz	u2671
  2780  00087A  0440               	decf	dtoa@p^0,w,c
  2781  00087C  B0D8               	btfsc	status,0,c
  2782  00087E  EF43  F004         	goto	u2671
  2783  000882  EF45  F004         	goto	u2670
  2784  000886                     u2671:
  2785  000886  EFA0  F003         	goto	l2796
  2786  00088A                     u2670:
  2787  00088A  BE43               	btfsc	(dtoa@w+1)^0,7,c
  2788  00088C  EF50  F004         	goto	u2681
  2789  000890  5043               	movf	(dtoa@w+1)^0,w,c
  2790  000892  E108               	bnz	u2680
  2791  000894  0442               	decf	dtoa@w^0,w,c
  2792  000896  A0D8               	btfss	status,0,c
  2793  000898  EF50  F004         	goto	u2681
  2794  00089C  EF52  F004         	goto	u2680
  2795  0008A0                     u2681:
  2796  0008A0  EF59  F004         	goto	l2816
  2797  0008A4                     u2680:
  2798  0008A4  B263               	btfsc	_flags^0,1,c
  2799  0008A6  EF57  F004         	goto	u2691
  2800  0008AA  EF59  F004         	goto	u2690
  2801  0008AE                     u2691:
  2802  0008AE  EFA0  F003         	goto	l2796
  2803  0008B2                     u2690:
  2804  0008B2                     l2816:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2807  0008B2  5044               	movf	dtoa@s^0,w,c
  2808  0008B4  1045               	iorwf	(dtoa@s+1)^0,w,c
  2809  0008B6  A4D8               	btfss	status,2,c
  2810  0008B8  EF60  F004         	goto	u2701
  2811  0008BC  EF62  F004         	goto	u2700
  2812  0008C0                     u2701:
  2813  0008C0  EF69  F004         	goto	l2820
  2814  0008C4                     u2700:
  2815  0008C4  A463               	btfss	_flags^0,2,c
  2816  0008C6  EF67  F004         	goto	u2711
  2817  0008CA  EF69  F004         	goto	u2710
  2818  0008CE                     u2711:
  2819  0008CE  EF87  F004         	goto	l2830
  2820  0008D2                     u2710:
  2821  0008D2                     l2820:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  2824  0008D2  064E               	decf	dtoa@i^0,f,c
  2825  0008D4  A0D8               	btfss	status,0,c
  2826  0008D6  064F               	decf	(dtoa@i+1)^0,f,c
  2827  0008D8                     
  2828                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2829  0008D8  5044               	movf	dtoa@s^0,w,c
  2830  0008DA  1045               	iorwf	(dtoa@s+1)^0,w,c
  2831  0008DC  A4D8               	btfss	status,2,c
  2832  0008DE  EF73  F004         	goto	u2721
  2833  0008E2  EF75  F004         	goto	u2720
  2834  0008E6                     u2721:
  2835  0008E6  EF7B  F004         	goto	l2826
  2836  0008EA                     u2720:
  2837  0008EA  0E00               	movlw	0
  2838  0008EC  6E3F               	movwf	(_dtoa$1791+1)^0,c
  2839  0008EE  0E2B               	movlw	43
  2840  0008F0  6E3E               	movwf	_dtoa$1791^0,c
  2841  0008F2  EF7F  F004         	goto	l2828
  2842  0008F6                     l2826:
  2843  0008F6  0E00               	movlw	0
  2844  0008F8  6E3F               	movwf	(_dtoa$1791+1)^0,c
  2845  0008FA  0E2D               	movlw	45
  2846  0008FC  6E3E               	movwf	_dtoa$1791^0,c
  2847  0008FE                     l2828:
  2848  0008FE  0E00               	movlw	low _dbuf
  2849  000900  244E               	addwf	dtoa@i^0,w,c
  2850  000902  6ED9               	movwf	fsr2l,c
  2851  000904  0E01               	movlw	high _dbuf
  2852  000906  204F               	addwfc	(dtoa@i+1)^0,w,c
  2853  000908  6EDA               	movwf	fsr2h,c
  2854  00090A  C03E  FFDF         	movff	_dtoa$1791,indf2
  2855  00090E                     l2830:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2858  00090E  C02C  F021         	movff	dtoa@fp,pad@fp
  2859  000912  C02D  F022         	movff	dtoa@fp+1,pad@fp+1
  2860  000916  0E00               	movlw	low _dbuf
  2861  000918  244E               	addwf	dtoa@i^0,w,c
  2862  00091A  6E23               	movwf	pad@buf^0,c
  2863  00091C  0E01               	movlw	high _dbuf
  2864  00091E  204F               	addwfc	(dtoa@i+1)^0,w,c
  2865  000920  6E24               	movwf	(pad@buf+1)^0,c
  2866  000922  C042  F025         	movff	dtoa@w,pad@p
  2867  000926  C043  F026         	movff	dtoa@w+1,pad@p+1
  2868  00092A  ECBE  F00A         	call	_pad	;wreg free
  2869  00092E  C021  F02C         	movff	?_pad,?_dtoa
  2870  000932  C022  F02D         	movff	?_pad+1,?_dtoa+1
  2871  000936  0012               	return		;funcret
  2872  000938                     __end_of_dtoa:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _pad *****************
  2876 ;; Defined at:
  2877 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  2880 ;;		 -> sprintf@f(6), 
  2881 ;;  buf             2   34[COMRAM] PTR unsigned char 
  2882 ;;		 -> dbuf(32), 
  2883 ;;  p               2   36[COMRAM] int 
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  w               2   41[COMRAM] int 
  2886 ;;  i               2   39[COMRAM] int 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2   32[COMRAM] int 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2896 ;;      Params:         6       0       0       0       0       0       0
  2897 ;;      Locals:         4       0       0       0       0       0       0
  2898 ;;      Temps:          1       0       0       0       0       0       0
  2899 ;;      Totals:        11       0       0       0       0       0       0
  2900 ;;Total ram usage:       11 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 7
  2903 ;; This function calls:
  2904 ;;		_fputc
  2905 ;;		_fputs
  2906 ;;		_strlen
  2907 ;; This function is called by:
  2908 ;;		_dtoa
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text13
  2913  00157C                     __ptext13:
  2914                           	callstack 0
  2915  00157C                     _pad:
  2916                           	callstack 17
  2917  00157C                     
  2918                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2919  00157C  A063               	btfss	_flags^0,0,c
  2920  00157E  EFC3  F00A         	goto	u2411
  2921  001582  EFC5  F00A         	goto	u2410
  2922  001586                     u2411:
  2923  001586  EFCF  F00A         	goto	l2708
  2924  00158A                     u2410:
  2925  00158A                     
  2926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2927  00158A  C023  F01A         	movff	pad@buf,fputs@s
  2928  00158E  C024  F01B         	movff	pad@buf+1,fputs@s+1
  2929  001592  C021  F01C         	movff	pad@fp,fputs@fp
  2930  001596  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  2931  00159A  ECED  F00C         	call	_fputs	;wreg free
  2932  00159E                     l2708:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2935  00159E  BE26               	btfsc	(pad@p+1)^0,7,c
  2936  0015A0  EFD4  F00A         	goto	u2421
  2937  0015A4  EFD6  F00A         	goto	u2420
  2938  0015A8                     u2421:
  2939  0015A8  EFDC  F00A         	goto	l2712
  2940  0015AC                     u2420:
  2941  0015AC  C025  F02A         	movff	pad@p,pad@w
  2942  0015B0  C026  F02B         	movff	pad@p+1,pad@w+1
  2943  0015B4  EFE0  F00A         	goto	l1031
  2944  0015B8                     l2712:
  2945  0015B8  0E00               	movlw	0
  2946  0015BA  6E2B               	movwf	(pad@w+1)^0,c
  2947  0015BC  0E00               	movlw	0
  2948  0015BE  6E2A               	movwf	pad@w^0,c
  2949  0015C0                     l1031:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2952  0015C0  0E00               	movlw	0
  2953  0015C2  6E29               	movwf	(pad@i+1)^0,c
  2954  0015C4  0E00               	movlw	0
  2955  0015C6  6E28               	movwf	pad@i^0,c
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2958  0015C8  EFF2  F00A         	goto	l2718
  2959  0015CC                     l2714:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2962  0015CC  0E00               	movlw	0
  2963  0015CE  6E12               	movwf	(fputc@c+1)^0,c
  2964  0015D0  0E20               	movlw	32
  2965  0015D2  6E11               	movwf	fputc@c^0,c
  2966  0015D4  C021  F013         	movff	pad@fp,fputc@fp
  2967  0015D8  C022  F014         	movff	pad@fp+1,fputc@fp+1
  2968  0015DC  ECF7  F009         	call	_fputc	;wreg free
  2969  0015E0                     
  2970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2971  0015E0  4A28               	infsnz	pad@i^0,f,c
  2972  0015E2  2A29               	incf	(pad@i+1)^0,f,c
  2973  0015E4                     l2718:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2976  0015E4  502A               	movf	pad@w^0,w,c
  2977  0015E6  5C28               	subwf	pad@i^0,w,c
  2978  0015E8  5029               	movf	(pad@i+1)^0,w,c
  2979  0015EA  0A80               	xorlw	128
  2980  0015EC  6E27               	movwf	??_pad^0,c
  2981  0015EE  502B               	movf	(pad@w+1)^0,w,c
  2982  0015F0  0A80               	xorlw	128
  2983  0015F2  5827               	subwfb	??_pad^0,w,c
  2984  0015F4  A0D8               	btfss	status,0,c
  2985  0015F6  EFFF  F00A         	goto	u2431
  2986  0015FA  EF01  F00B         	goto	u2430
  2987  0015FE                     u2431:
  2988  0015FE  EFE6  F00A         	goto	l2714
  2989  001602                     u2430:
  2990  001602                     
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2992  001602  B063               	btfsc	_flags^0,0,c
  2993  001604  EF06  F00B         	goto	u2441
  2994  001608  EF08  F00B         	goto	u2440
  2995  00160C                     u2441:
  2996  00160C  EF12  F00B         	goto	l2722
  2997  001610                     u2440:
  2998  001610                     
  2999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  3000  001610  C023  F01A         	movff	pad@buf,fputs@s
  3001  001614  C024  F01B         	movff	pad@buf+1,fputs@s+1
  3002  001618  C021  F01C         	movff	pad@fp,fputs@fp
  3003  00161C  C022  F01D         	movff	pad@fp+1,fputs@fp+1
  3004  001620  ECED  F00C         	call	_fputs	;wreg free
  3005  001624                     l2722:
  3006                           
  3007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  3008  001624  C023  F011         	movff	pad@buf,strlen@s
  3009  001628  C024  F012         	movff	pad@buf+1,strlen@s+1
  3010  00162C  ECA6  F00D         	call	_strlen	;wreg free
  3011  001630  502A               	movf	pad@w^0,w,c
  3012  001632  2411               	addwf	?_strlen^0,w,c
  3013  001634  6E21               	movwf	?_pad^0,c
  3014  001636  502B               	movf	(pad@w+1)^0,w,c
  3015  001638  2012               	addwfc	(?_strlen+1)^0,w,c
  3016  00163A  6E22               	movwf	(?_pad+1)^0,c
  3017  00163C  0012               	return		;funcret
  3018  00163E                     __end_of_pad:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _strlen *****************
  3022 ;; Defined at:
  3023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  s               2   16[COMRAM] PTR const unsigned char 
  3026 ;;		 -> dbuf(32), 
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  a               2   18[COMRAM] PTR const unsigned char 
  3029 ;;		 -> dbuf(32), 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  2   16[COMRAM] unsigned int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3039 ;;      Params:         2       0       0       0       0       0       0
  3040 ;;      Locals:         2       0       0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0
  3042 ;;      Totals:         4       0       0       0       0       0       0
  3043 ;;Total ram usage:        4 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 4
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_pad
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text14
  3054  001B4C                     __ptext14:
  3055                           	callstack 0
  3056  001B4C                     _strlen:
  3057                           	callstack 19
  3058  001B4C  C011  F013         	movff	strlen@s,strlen@a
  3059  001B50  C012  F014         	movff	strlen@s+1,strlen@a+1
  3060  001B54  EFAE  F00D         	goto	l2596
  3061  001B58                     l2594:
  3062  001B58  4A11               	infsnz	strlen@s^0,f,c
  3063  001B5A  2A12               	incf	(strlen@s+1)^0,f,c
  3064  001B5C                     l2596:
  3065  001B5C  C011  FFD9         	movff	strlen@s,fsr2l
  3066  001B60  C012  FFDA         	movff	strlen@s+1,fsr2h
  3067  001B64  50DF               	movf	indf2,w,c
  3068  001B66  A4D8               	btfss	status,2,c
  3069  001B68  EFB8  F00D         	goto	u2231
  3070  001B6C  EFBA  F00D         	goto	u2230
  3071  001B70                     u2231:
  3072  001B70  EFAC  F00D         	goto	l2594
  3073  001B74                     u2230:
  3074  001B74  5013               	movf	strlen@a^0,w,c
  3075  001B76  5C11               	subwf	strlen@s^0,w,c
  3076  001B78  6E11               	movwf	?_strlen^0,c
  3077  001B7A  5014               	movf	(strlen@a+1)^0,w,c
  3078  001B7C  5812               	subwfb	(strlen@s+1)^0,w,c
  3079  001B7E  6E12               	movwf	(?_strlen+1)^0,c
  3080  001B80  0012               	return		;funcret
  3081  001B82                     __end_of_strlen:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _fputs *****************
  3085 ;; Defined at:
  3086 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  s               2   25[COMRAM] PTR const unsigned char 
  3089 ;;		 -> dbuf(32), 
  3090 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3091 ;;		 -> sprintf@f(6), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  i               2   30[COMRAM] int 
  3094 ;;  c               1   29[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  2   25[COMRAM] int 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         4       0       0       0       0       0       0
  3105 ;;      Locals:         3       0       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         7       0       0       0       0       0       0
  3108 ;;Total ram usage:        7 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 6
  3111 ;; This function calls:
  3112 ;;		_fputc
  3113 ;; This function is called by:
  3114 ;;		_pad
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text15
  3119  0019DA                     __ptext15:
  3120                           	callstack 0
  3121  0019DA                     _fputs:
  3122                           	callstack 17
  3123  0019DA  0E00               	movlw	0
  3124  0019DC  6E20               	movwf	(fputs@i+1)^0,c
  3125  0019DE  0E00               	movlw	0
  3126  0019E0  6E1F               	movwf	fputs@i^0,c
  3127  0019E2  EFFE  F00C         	goto	l2590
  3128  0019E6                     l2586:
  3129  0019E6  C01E  F011         	movff	fputs@c,fputc@c
  3130  0019EA  6A12               	clrf	(fputc@c+1)^0,c
  3131  0019EC  C01C  F013         	movff	fputs@fp,fputc@fp
  3132  0019F0  C01D  F014         	movff	fputs@fp+1,fputc@fp+1
  3133  0019F4  ECF7  F009         	call	_fputc	;wreg free
  3134  0019F8  4A1F               	infsnz	fputs@i^0,f,c
  3135  0019FA  2A20               	incf	(fputs@i+1)^0,f,c
  3136  0019FC                     l2590:
  3137  0019FC  501F               	movf	fputs@i^0,w,c
  3138  0019FE  241A               	addwf	fputs@s^0,w,c
  3139  001A00  6ED9               	movwf	fsr2l,c
  3140  001A02  5020               	movf	(fputs@i+1)^0,w,c
  3141  001A04  201B               	addwfc	(fputs@s+1)^0,w,c
  3142  001A06  6EDA               	movwf	fsr2h,c
  3143  001A08  50DF               	movf	indf2,w,c
  3144  001A0A  6E1E               	movwf	fputs@c^0,c
  3145  001A0C  501E               	movf	fputs@c^0,w,c
  3146  001A0E  A4D8               	btfss	status,2,c
  3147  001A10  EF0C  F00D         	goto	u2221
  3148  001A14  EF0E  F00D         	goto	u2220
  3149  001A18                     u2221:
  3150  001A18  EFF3  F00C         	goto	l2586
  3151  001A1C                     u2220:
  3152  001A1C  0012               	return		;funcret
  3153  001A1E                     __end_of_fputs:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _fputc *****************
  3157 ;; Defined at:
  3158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  c               2   16[COMRAM] int 
  3161 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  3162 ;;		 -> sprintf@f(6), 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;		None
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  2   16[COMRAM] int 
  3167 ;; Registers used:
  3168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3174 ;;      Params:         4       0       0       0       0       0       0
  3175 ;;      Locals:         0       0       0       0       0       0       0
  3176 ;;      Temps:          5       0       0       0       0       0       0
  3177 ;;      Totals:         9       0       0       0       0       0       0
  3178 ;;Total ram usage:        9 bytes
  3179 ;; Hardware stack levels used: 1
  3180 ;; Hardware stack levels required when called: 5
  3181 ;; This function calls:
  3182 ;;		_putch
  3183 ;; This function is called by:
  3184 ;;		_pad
  3185 ;;		_vfpfcnvrt
  3186 ;;		_fputs
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text16
  3191  0013EE                     __ptext16:
  3192                           	callstack 0
  3193  0013EE                     _fputc:
  3194                           	callstack 20
  3195  0013EE  5013               	movf	fputc@fp^0,w,c
  3196  0013F0  1014               	iorwf	(fputc@fp+1)^0,w,c
  3197  0013F2  B4D8               	btfsc	status,2,c
  3198  0013F4  EFFE  F009         	goto	u2181
  3199  0013F8  EF00  F00A         	goto	u2180
  3200  0013FC                     u2181:
  3201  0013FC  EF09  F00A         	goto	l2574
  3202  001400                     u2180:
  3203  001400  5013               	movf	fputc@fp^0,w,c
  3204  001402  1014               	iorwf	(fputc@fp+1)^0,w,c
  3205  001404  A4D8               	btfss	status,2,c
  3206  001406  EF07  F00A         	goto	u2191
  3207  00140A  EF09  F00A         	goto	u2190
  3208  00140E                     u2191:
  3209  00140E  EF0E  F00A         	goto	l2576
  3210  001412                     u2190:
  3211  001412                     l2574:
  3212  001412  5011               	movf	fputc@c^0,w,c
  3213  001414  EC41  F00E         	call	_putch
  3214  001418  EF5B  F00A         	goto	l1105
  3215  00141C                     l2576:
  3216  00141C  EE20 F004          	lfsr	2,4
  3217  001420  5013               	movf	fputc@fp^0,w,c
  3218  001422  26D9               	addwf	fsr2l,f,c
  3219  001424  5014               	movf	(fputc@fp+1)^0,w,c
  3220  001426  22DA               	addwfc	fsr2h,f,c
  3221  001428  50DE               	movf	postinc2,w,c
  3222  00142A  10DE               	iorwf	postinc2,w,c
  3223  00142C  B4D8               	btfsc	status,2,c
  3224  00142E  EF1B  F00A         	goto	u2201
  3225  001432  EF1D  F00A         	goto	u2200
  3226  001436                     u2201:
  3227  001436  EF38  F00A         	goto	l2580
  3228  00143A                     u2200:
  3229  00143A  EE20 F004          	lfsr	2,4
  3230  00143E  5013               	movf	fputc@fp^0,w,c
  3231  001440  26D9               	addwf	fsr2l,f,c
  3232  001442  5014               	movf	(fputc@fp+1)^0,w,c
  3233  001444  22DA               	addwfc	fsr2h,f,c
  3234  001446  EE10 F002          	lfsr	1,2
  3235  00144A  5013               	movf	fputc@fp^0,w,c
  3236  00144C  26E1               	addwf	fsr1l,f,c
  3237  00144E  5014               	movf	(fputc@fp+1)^0,w,c
  3238  001450  22E2               	addwfc	fsr1h,f,c
  3239  001452  50DE               	movf	postinc2,w,c
  3240  001454  5CE6               	subwf	postinc1,w,c
  3241  001456  50E6               	movf	postinc1,w,c
  3242  001458  0A80               	xorlw	128
  3243  00145A  6E19               	movwf	(??_fputc+4)^0,c
  3244  00145C  50DE               	movf	postinc2,w,c
  3245  00145E  0A80               	xorlw	128
  3246  001460  5819               	subwfb	(??_fputc+4)^0,w,c
  3247  001462  B0D8               	btfsc	status,0,c
  3248  001464  EF36  F00A         	goto	u2211
  3249  001468  EF38  F00A         	goto	u2210
  3250  00146C                     u2211:
  3251  00146C  EF5B  F00A         	goto	l1105
  3252  001470                     u2210:
  3253  001470                     l2580:
  3254  001470  EE20 F002          	lfsr	2,2
  3255  001474  5013               	movf	fputc@fp^0,w,c
  3256  001476  26D9               	addwf	fsr2l,f,c
  3257  001478  5014               	movf	(fputc@fp+1)^0,w,c
  3258  00147A  22DA               	addwfc	fsr2h,f,c
  3259  00147C  CFDE F015          	movff	postinc2,??_fputc
  3260  001480  CFDD F016          	movff	postdec2,??_fputc+1
  3261  001484  C013  FFD9         	movff	fputc@fp,fsr2l
  3262  001488  C014  FFDA         	movff	fputc@fp+1,fsr2h
  3263  00148C  CFDE F017          	movff	postinc2,??_fputc+2
  3264  001490  CFDD F018          	movff	postdec2,??_fputc+3
  3265  001494  5015               	movf	??_fputc^0,w,c
  3266  001496  2417               	addwf	(??_fputc+2)^0,w,c
  3267  001498  6ED9               	movwf	fsr2l,c
  3268  00149A  5016               	movf	(??_fputc+1)^0,w,c
  3269  00149C  2018               	addwfc	(??_fputc+3)^0,w,c
  3270  00149E  6EDA               	movwf	fsr2h,c
  3271  0014A0  C011  FFDF         	movff	fputc@c,indf2
  3272  0014A4  EE20 F002          	lfsr	2,2
  3273  0014A8  5013               	movf	fputc@fp^0,w,c
  3274  0014AA  26D9               	addwf	fsr2l,f,c
  3275  0014AC  5014               	movf	(fputc@fp+1)^0,w,c
  3276  0014AE  22DA               	addwfc	fsr2h,f,c
  3277  0014B0  2ADE               	incf	postinc2,f,c
  3278  0014B2  0E00               	movlw	0
  3279  0014B4  22DD               	addwfc	postdec2,f,c
  3280  0014B6                     l1105:
  3281  0014B6  0012               	return		;funcret
  3282  0014B8                     __end_of_fputc:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _putch *****************
  3286 ;; Defined at:
  3287 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  c               1    wreg     unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  c               1    0[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3301 ;;      Params:         0       0       0       0       0       0       0
  3302 ;;      Locals:         0       0       0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0
  3304 ;;      Totals:         0       0       0       0       0       0       0
  3305 ;;Total ram usage:        0 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 4
  3308 ;; This function calls:
  3309 ;;		Nothing
  3310 ;; This function is called by:
  3311 ;;		_fputc
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text17
  3316  001C82                     __ptext17:
  3317                           	callstack 0
  3318  001C82                     _putch:
  3319                           	callstack 20
  3320  001C82  0012               	return		;funcret
  3321  001C84                     __end_of_putch:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function _abs *****************
  3325 ;; Defined at:
  3326 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  a               2   34[COMRAM] int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2   34[COMRAM] int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3340 ;;      Params:         2       0       0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0       0       0
  3342 ;;      Temps:          2       0       0       0       0       0       0
  3343 ;;      Totals:         4       0       0       0       0       0       0
  3344 ;;Total ram usage:        4 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 4
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_dtoa
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text18
  3355  001A60                     __ptext18:
  3356                           	callstack 0
  3357  001A60                     _abs:
  3358                           	callstack 20
  3359  001A60  BE24               	btfsc	(abs@a+1)^0,7,c
  3360  001A62  EF3D  F00D         	goto	u2450
  3361  001A66  5024               	movf	(abs@a+1)^0,w,c
  3362  001A68  E106               	bnz	u2451
  3363  001A6A  0423               	decf	abs@a^0,w,c
  3364  001A6C  B0D8               	btfsc	status,0,c
  3365  001A6E  EF3B  F00D         	goto	u2451
  3366  001A72  EF3D  F00D         	goto	u2450
  3367  001A76                     u2451:
  3368  001A76  EF4B  F00D         	goto	l1090
  3369  001A7A                     u2450:
  3370  001A7A  C023  F025         	movff	abs@a,??_abs
  3371  001A7E  C024  F026         	movff	abs@a+1,??_abs+1
  3372  001A82  1E25               	comf	??_abs^0,f,c
  3373  001A84  1E26               	comf	(??_abs+1)^0,f,c
  3374  001A86  4A25               	infsnz	??_abs^0,f,c
  3375  001A88  2A26               	incf	(??_abs+1)^0,f,c
  3376  001A8A  C025  F023         	movff	??_abs,?_abs
  3377  001A8E  C026  F024         	movff	??_abs+1,?_abs+1
  3378  001A92  EF4F  F00D         	goto	l1093
  3379  001A96                     l1090:
  3380  001A96  C023  F023         	movff	abs@a,?_abs
  3381  001A9A  C024  F024         	movff	abs@a+1,?_abs+1
  3382  001A9E                     l1093:
  3383  001A9E  0012               	return		;funcret
  3384  001AA0                     __end_of_abs:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function ___aomod *****************
  3388 ;; Defined at:
  3389 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  dividend        8   16[COMRAM] long long 
  3392 ;;  divisor         8   24[COMRAM] long long 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  sign            1   33[COMRAM] unsigned char 
  3395 ;;  counter         1   32[COMRAM] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  8   16[COMRAM] long long 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3405 ;;      Params:        16       0       0       0       0       0       0
  3406 ;;      Locals:         2       0       0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0       0       0
  3408 ;;      Totals:        18       0       0       0       0       0       0
  3409 ;;Total ram usage:       18 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 4
  3412 ;; This function calls:
  3413 ;;		Nothing
  3414 ;; This function is called by:
  3415 ;;		_dtoa
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text19
  3420  000F6A                     __ptext19:
  3421                           	callstack 0
  3422  000F6A                     ___aomod:
  3423                           	callstack 20
  3424  000F6A  0E00               	movlw	0
  3425  000F6C  6E22               	movwf	___aomod@sign^0,c
  3426  000F6E  BE18               	btfsc	(___aomod@dividend+7)^0,7,c
  3427  000F70  EFBE  F007         	goto	u2310
  3428  000F74  EFBC  F007         	goto	u2311
  3429  000F78                     u2311:
  3430  000F78  EFD0  F007         	goto	l2660
  3431  000F7C                     u2310:
  3432  000F7C  1E18               	comf	(___aomod@dividend+7)^0,f,c
  3433  000F7E  1E17               	comf	(___aomod@dividend+6)^0,f,c
  3434  000F80  1E16               	comf	(___aomod@dividend+5)^0,f,c
  3435  000F82  1E15               	comf	(___aomod@dividend+4)^0,f,c
  3436  000F84  1E14               	comf	(___aomod@dividend+3)^0,f,c
  3437  000F86  1E13               	comf	(___aomod@dividend+2)^0,f,c
  3438  000F88  1E12               	comf	(___aomod@dividend+1)^0,f,c
  3439  000F8A  6C11               	negf	___aomod@dividend^0,c
  3440  000F8C  0E00               	movlw	0
  3441  000F8E  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  3442  000F90  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  3443  000F92  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  3444  000F94  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  3445  000F96  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  3446  000F98  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  3447  000F9A  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  3448  000F9C  0E01               	movlw	1
  3449  000F9E  6E22               	movwf	___aomod@sign^0,c
  3450  000FA0                     l2660:
  3451  000FA0  BE20               	btfsc	(___aomod@divisor+7)^0,7,c
  3452  000FA2  EFD7  F007         	goto	u2320
  3453  000FA6  EFD5  F007         	goto	u2321
  3454  000FAA                     u2321:
  3455  000FAA  EFE7  F007         	goto	l2664
  3456  000FAE                     u2320:
  3457  000FAE  1E20               	comf	(___aomod@divisor+7)^0,f,c
  3458  000FB0  1E1F               	comf	(___aomod@divisor+6)^0,f,c
  3459  000FB2  1E1E               	comf	(___aomod@divisor+5)^0,f,c
  3460  000FB4  1E1D               	comf	(___aomod@divisor+4)^0,f,c
  3461  000FB6  1E1C               	comf	(___aomod@divisor+3)^0,f,c
  3462  000FB8  1E1B               	comf	(___aomod@divisor+2)^0,f,c
  3463  000FBA  1E1A               	comf	(___aomod@divisor+1)^0,f,c
  3464  000FBC  6C19               	negf	___aomod@divisor^0,c
  3465  000FBE  0E00               	movlw	0
  3466  000FC0  221A               	addwfc	(___aomod@divisor+1)^0,f,c
  3467  000FC2  221B               	addwfc	(___aomod@divisor+2)^0,f,c
  3468  000FC4  221C               	addwfc	(___aomod@divisor+3)^0,f,c
  3469  000FC6  221D               	addwfc	(___aomod@divisor+4)^0,f,c
  3470  000FC8  221E               	addwfc	(___aomod@divisor+5)^0,f,c
  3471  000FCA  221F               	addwfc	(___aomod@divisor+6)^0,f,c
  3472  000FCC  2220               	addwfc	(___aomod@divisor+7)^0,f,c
  3473  000FCE                     l2664:
  3474  000FCE  5019               	movf	___aomod@divisor^0,w,c
  3475  000FD0  101A               	iorwf	(___aomod@divisor+1)^0,w,c
  3476  000FD2  101B               	iorwf	(___aomod@divisor+2)^0,w,c
  3477  000FD4  101C               	iorwf	(___aomod@divisor+3)^0,w,c
  3478  000FD6  101D               	iorwf	(___aomod@divisor+4)^0,w,c
  3479  000FD8  101E               	iorwf	(___aomod@divisor+5)^0,w,c
  3480  000FDA  101F               	iorwf	(___aomod@divisor+6)^0,w,c
  3481  000FDC  1020               	iorwf	(___aomod@divisor+7)^0,w,c
  3482  000FDE  B4D8               	btfsc	status,2,c
  3483  000FE0  EFF4  F007         	goto	u2331
  3484  000FE4  EFF6  F007         	goto	u2330
  3485  000FE8                     u2331:
  3486  000FE8  EF3E  F008         	goto	l2680
  3487  000FEC                     u2330:
  3488  000FEC  0E01               	movlw	1
  3489  000FEE  6E21               	movwf	___aomod@counter^0,c
  3490  000FF0  EF04  F008         	goto	l2670
  3491  000FF4                     l2668:
  3492  000FF4  90D8               	bcf	status,0,c
  3493  000FF6  3619               	rlcf	___aomod@divisor^0,f,c
  3494  000FF8  361A               	rlcf	(___aomod@divisor+1)^0,f,c
  3495  000FFA  361B               	rlcf	(___aomod@divisor+2)^0,f,c
  3496  000FFC  361C               	rlcf	(___aomod@divisor+3)^0,f,c
  3497  000FFE  361D               	rlcf	(___aomod@divisor+4)^0,f,c
  3498  001000  361E               	rlcf	(___aomod@divisor+5)^0,f,c
  3499  001002  361F               	rlcf	(___aomod@divisor+6)^0,f,c
  3500  001004  3620               	rlcf	(___aomod@divisor+7)^0,f,c
  3501  001006  2A21               	incf	___aomod@counter^0,f,c
  3502  001008                     l2670:
  3503  001008  AE20               	btfss	(___aomod@divisor+7)^0,7,c
  3504  00100A  EF09  F008         	goto	u2341
  3505  00100E  EF0B  F008         	goto	u2340
  3506  001012                     u2341:
  3507  001012  EFFA  F007         	goto	l2668
  3508  001016                     u2340:
  3509  001016                     l2672:
  3510  001016  5019               	movf	___aomod@divisor^0,w,c
  3511  001018  5C11               	subwf	___aomod@dividend^0,w,c
  3512  00101A  501A               	movf	(___aomod@divisor+1)^0,w,c
  3513  00101C  5812               	subwfb	(___aomod@dividend+1)^0,w,c
  3514  00101E  501B               	movf	(___aomod@divisor+2)^0,w,c
  3515  001020  5813               	subwfb	(___aomod@dividend+2)^0,w,c
  3516  001022  501C               	movf	(___aomod@divisor+3)^0,w,c
  3517  001024  5814               	subwfb	(___aomod@dividend+3)^0,w,c
  3518  001026  501D               	movf	(___aomod@divisor+4)^0,w,c
  3519  001028  5815               	subwfb	(___aomod@dividend+4)^0,w,c
  3520  00102A  501E               	movf	(___aomod@divisor+5)^0,w,c
  3521  00102C  5816               	subwfb	(___aomod@dividend+5)^0,w,c
  3522  00102E  501F               	movf	(___aomod@divisor+6)^0,w,c
  3523  001030  5817               	subwfb	(___aomod@dividend+6)^0,w,c
  3524  001032  5020               	movf	(___aomod@divisor+7)^0,w,c
  3525  001034  5818               	subwfb	(___aomod@dividend+7)^0,w,c
  3526  001036  A0D8               	btfss	status,0,c
  3527  001038  EF20  F008         	goto	u2351
  3528  00103C  EF22  F008         	goto	u2350
  3529  001040                     u2351:
  3530  001040  EF32  F008         	goto	l2676
  3531  001044                     u2350:
  3532  001044  5019               	movf	___aomod@divisor^0,w,c
  3533  001046  5E11               	subwf	___aomod@dividend^0,f,c
  3534  001048  501A               	movf	(___aomod@divisor+1)^0,w,c
  3535  00104A  5A12               	subwfb	(___aomod@dividend+1)^0,f,c
  3536  00104C  501B               	movf	(___aomod@divisor+2)^0,w,c
  3537  00104E  5A13               	subwfb	(___aomod@dividend+2)^0,f,c
  3538  001050  501C               	movf	(___aomod@divisor+3)^0,w,c
  3539  001052  5A14               	subwfb	(___aomod@dividend+3)^0,f,c
  3540  001054  501D               	movf	(___aomod@divisor+4)^0,w,c
  3541  001056  5A15               	subwfb	(___aomod@dividend+4)^0,f,c
  3542  001058  501E               	movf	(___aomod@divisor+5)^0,w,c
  3543  00105A  5A16               	subwfb	(___aomod@dividend+5)^0,f,c
  3544  00105C  501F               	movf	(___aomod@divisor+6)^0,w,c
  3545  00105E  5A17               	subwfb	(___aomod@dividend+6)^0,f,c
  3546  001060  5020               	movf	(___aomod@divisor+7)^0,w,c
  3547  001062  5A18               	subwfb	(___aomod@dividend+7)^0,f,c
  3548  001064                     l2676:
  3549  001064  90D8               	bcf	status,0,c
  3550  001066  3220               	rrcf	(___aomod@divisor+7)^0,f,c
  3551  001068  321F               	rrcf	(___aomod@divisor+6)^0,f,c
  3552  00106A  321E               	rrcf	(___aomod@divisor+5)^0,f,c
  3553  00106C  321D               	rrcf	(___aomod@divisor+4)^0,f,c
  3554  00106E  321C               	rrcf	(___aomod@divisor+3)^0,f,c
  3555  001070  321B               	rrcf	(___aomod@divisor+2)^0,f,c
  3556  001072  321A               	rrcf	(___aomod@divisor+1)^0,f,c
  3557  001074  3219               	rrcf	___aomod@divisor^0,f,c
  3558  001076  2E21               	decfsz	___aomod@counter^0,f,c
  3559  001078  EF0B  F008         	goto	l2672
  3560  00107C                     l2680:
  3561  00107C  5022               	movf	___aomod@sign^0,w,c
  3562  00107E  B4D8               	btfsc	status,2,c
  3563  001080  EF44  F008         	goto	u2361
  3564  001084  EF46  F008         	goto	u2360
  3565  001088                     u2361:
  3566  001088  EF56  F008         	goto	l2684
  3567  00108C                     u2360:
  3568  00108C  1E18               	comf	(___aomod@dividend+7)^0,f,c
  3569  00108E  1E17               	comf	(___aomod@dividend+6)^0,f,c
  3570  001090  1E16               	comf	(___aomod@dividend+5)^0,f,c
  3571  001092  1E15               	comf	(___aomod@dividend+4)^0,f,c
  3572  001094  1E14               	comf	(___aomod@dividend+3)^0,f,c
  3573  001096  1E13               	comf	(___aomod@dividend+2)^0,f,c
  3574  001098  1E12               	comf	(___aomod@dividend+1)^0,f,c
  3575  00109A  6C11               	negf	___aomod@dividend^0,c
  3576  00109C  0E00               	movlw	0
  3577  00109E  2212               	addwfc	(___aomod@dividend+1)^0,f,c
  3578  0010A0  2213               	addwfc	(___aomod@dividend+2)^0,f,c
  3579  0010A2  2214               	addwfc	(___aomod@dividend+3)^0,f,c
  3580  0010A4  2215               	addwfc	(___aomod@dividend+4)^0,f,c
  3581  0010A6  2216               	addwfc	(___aomod@dividend+5)^0,f,c
  3582  0010A8  2217               	addwfc	(___aomod@dividend+6)^0,f,c
  3583  0010AA  2218               	addwfc	(___aomod@dividend+7)^0,f,c
  3584  0010AC                     l2684:
  3585  0010AC  C011  F011         	movff	___aomod@dividend,?___aomod
  3586  0010B0  C012  F012         	movff	___aomod@dividend+1,?___aomod+1
  3587  0010B4  C013  F013         	movff	___aomod@dividend+2,?___aomod+2
  3588  0010B8  C014  F014         	movff	___aomod@dividend+3,?___aomod+3
  3589  0010BC  C015  F015         	movff	___aomod@dividend+4,?___aomod+4
  3590  0010C0  C016  F016         	movff	___aomod@dividend+5,?___aomod+5
  3591  0010C4  C017  F017         	movff	___aomod@dividend+6,?___aomod+6
  3592  0010C8  C018  F018         	movff	___aomod@dividend+7,?___aomod+7
  3593  0010CC  0012               	return		;funcret
  3594  0010CE                     __end_of___aomod:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function ___aodiv *****************
  3598 ;; Defined at:
  3599 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  dividend        8   16[COMRAM] long long 
  3602 ;;  divisor         8   24[COMRAM] long long 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  quotient        8   34[COMRAM] long long 
  3605 ;;  sign            1   33[COMRAM] unsigned char 
  3606 ;;  counter         1   32[COMRAM] unsigned char 
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  8   16[COMRAM] long long 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3616 ;;      Params:        16       0       0       0       0       0       0
  3617 ;;      Locals:        10       0       0       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0
  3619 ;;      Totals:        26       0       0       0       0       0       0
  3620 ;;Total ram usage:       26 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 4
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_dtoa
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text20
  3631  000DE2                     __ptext20:
  3632                           	callstack 0
  3633  000DE2                     ___aodiv:
  3634                           	callstack 20
  3635  000DE2  0E00               	movlw	0
  3636  000DE4  6E22               	movwf	___aodiv@sign^0,c
  3637  000DE6  BE20               	btfsc	(___aodiv@divisor+7)^0,7,c
  3638  000DE8  EFFA  F006         	goto	u2240
  3639  000DEC  EFF8  F006         	goto	u2241
  3640  000DF0                     u2241:
  3641  000DF0  EF0C  F007         	goto	l2616
  3642  000DF4                     u2240:
  3643  000DF4  1E20               	comf	(___aodiv@divisor+7)^0,f,c
  3644  000DF6  1E1F               	comf	(___aodiv@divisor+6)^0,f,c
  3645  000DF8  1E1E               	comf	(___aodiv@divisor+5)^0,f,c
  3646  000DFA  1E1D               	comf	(___aodiv@divisor+4)^0,f,c
  3647  000DFC  1E1C               	comf	(___aodiv@divisor+3)^0,f,c
  3648  000DFE  1E1B               	comf	(___aodiv@divisor+2)^0,f,c
  3649  000E00  1E1A               	comf	(___aodiv@divisor+1)^0,f,c
  3650  000E02  6C19               	negf	___aodiv@divisor^0,c
  3651  000E04  0E00               	movlw	0
  3652  000E06  221A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3653  000E08  221B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3654  000E0A  221C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3655  000E0C  221D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3656  000E0E  221E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3657  000E10  221F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3658  000E12  2220               	addwfc	(___aodiv@divisor+7)^0,f,c
  3659  000E14  0E01               	movlw	1
  3660  000E16  6E22               	movwf	___aodiv@sign^0,c
  3661  000E18                     l2616:
  3662  000E18  BE18               	btfsc	(___aodiv@dividend+7)^0,7,c
  3663  000E1A  EF13  F007         	goto	u2250
  3664  000E1E  EF11  F007         	goto	u2251
  3665  000E22                     u2251:
  3666  000E22  EF25  F007         	goto	l2622
  3667  000E26                     u2250:
  3668  000E26  1E18               	comf	(___aodiv@dividend+7)^0,f,c
  3669  000E28  1E17               	comf	(___aodiv@dividend+6)^0,f,c
  3670  000E2A  1E16               	comf	(___aodiv@dividend+5)^0,f,c
  3671  000E2C  1E15               	comf	(___aodiv@dividend+4)^0,f,c
  3672  000E2E  1E14               	comf	(___aodiv@dividend+3)^0,f,c
  3673  000E30  1E13               	comf	(___aodiv@dividend+2)^0,f,c
  3674  000E32  1E12               	comf	(___aodiv@dividend+1)^0,f,c
  3675  000E34  6C11               	negf	___aodiv@dividend^0,c
  3676  000E36  0E00               	movlw	0
  3677  000E38  2212               	addwfc	(___aodiv@dividend+1)^0,f,c
  3678  000E3A  2213               	addwfc	(___aodiv@dividend+2)^0,f,c
  3679  000E3C  2214               	addwfc	(___aodiv@dividend+3)^0,f,c
  3680  000E3E  2215               	addwfc	(___aodiv@dividend+4)^0,f,c
  3681  000E40  2216               	addwfc	(___aodiv@dividend+5)^0,f,c
  3682  000E42  2217               	addwfc	(___aodiv@dividend+6)^0,f,c
  3683  000E44  2218               	addwfc	(___aodiv@dividend+7)^0,f,c
  3684  000E46  0E01               	movlw	1
  3685  000E48  1A22               	xorwf	___aodiv@sign^0,f,c
  3686  000E4A                     l2622:
  3687  000E4A  EE20  F023         	lfsr	2,___aodiv@quotient
  3688  000E4E  0E07               	movlw	7
  3689  000E50                     u2261:
  3690  000E50  6ADE               	clrf	postinc2,c
  3691  000E52  06E8               	decf	wreg,f,c
  3692  000E54  E2FD               	bc	u2261
  3693  000E56  5019               	movf	___aodiv@divisor^0,w,c
  3694  000E58  101A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3695  000E5A  101B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3696  000E5C  101C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3697  000E5E  101D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3698  000E60  101E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3699  000E62  101F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3700  000E64  1020               	iorwf	(___aodiv@divisor+7)^0,w,c
  3701  000E66  B4D8               	btfsc	status,2,c
  3702  000E68  EF38  F007         	goto	u2271
  3703  000E6C  EF3A  F007         	goto	u2270
  3704  000E70                     u2271:
  3705  000E70  EF8C  F007         	goto	l2644
  3706  000E74                     u2270:
  3707  000E74  0E01               	movlw	1
  3708  000E76  6E21               	movwf	___aodiv@counter^0,c
  3709  000E78  EF48  F007         	goto	l2630
  3710  000E7C                     l2628:
  3711  000E7C  90D8               	bcf	status,0,c
  3712  000E7E  3619               	rlcf	___aodiv@divisor^0,f,c
  3713  000E80  361A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3714  000E82  361B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3715  000E84  361C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3716  000E86  361D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3717  000E88  361E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3718  000E8A  361F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3719  000E8C  3620               	rlcf	(___aodiv@divisor+7)^0,f,c
  3720  000E8E  2A21               	incf	___aodiv@counter^0,f,c
  3721  000E90                     l2630:
  3722  000E90  AE20               	btfss	(___aodiv@divisor+7)^0,7,c
  3723  000E92  EF4D  F007         	goto	u2281
  3724  000E96  EF4F  F007         	goto	u2280
  3725  000E9A                     u2281:
  3726  000E9A  EF3E  F007         	goto	l2628
  3727  000E9E                     u2280:
  3728  000E9E                     l2632:
  3729  000E9E  90D8               	bcf	status,0,c
  3730  000EA0  3623               	rlcf	___aodiv@quotient^0,f,c
  3731  000EA2  3624               	rlcf	(___aodiv@quotient+1)^0,f,c
  3732  000EA4  3625               	rlcf	(___aodiv@quotient+2)^0,f,c
  3733  000EA6  3626               	rlcf	(___aodiv@quotient+3)^0,f,c
  3734  000EA8  3627               	rlcf	(___aodiv@quotient+4)^0,f,c
  3735  000EAA  3628               	rlcf	(___aodiv@quotient+5)^0,f,c
  3736  000EAC  3629               	rlcf	(___aodiv@quotient+6)^0,f,c
  3737  000EAE  362A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3738  000EB0  5019               	movf	___aodiv@divisor^0,w,c
  3739  000EB2  5C11               	subwf	___aodiv@dividend^0,w,c
  3740  000EB4  501A               	movf	(___aodiv@divisor+1)^0,w,c
  3741  000EB6  5812               	subwfb	(___aodiv@dividend+1)^0,w,c
  3742  000EB8  501B               	movf	(___aodiv@divisor+2)^0,w,c
  3743  000EBA  5813               	subwfb	(___aodiv@dividend+2)^0,w,c
  3744  000EBC  501C               	movf	(___aodiv@divisor+3)^0,w,c
  3745  000EBE  5814               	subwfb	(___aodiv@dividend+3)^0,w,c
  3746  000EC0  501D               	movf	(___aodiv@divisor+4)^0,w,c
  3747  000EC2  5815               	subwfb	(___aodiv@dividend+4)^0,w,c
  3748  000EC4  501E               	movf	(___aodiv@divisor+5)^0,w,c
  3749  000EC6  5816               	subwfb	(___aodiv@dividend+5)^0,w,c
  3750  000EC8  501F               	movf	(___aodiv@divisor+6)^0,w,c
  3751  000ECA  5817               	subwfb	(___aodiv@dividend+6)^0,w,c
  3752  000ECC  5020               	movf	(___aodiv@divisor+7)^0,w,c
  3753  000ECE  5818               	subwfb	(___aodiv@dividend+7)^0,w,c
  3754  000ED0  A0D8               	btfss	status,0,c
  3755  000ED2  EF6D  F007         	goto	u2291
  3756  000ED6  EF6F  F007         	goto	u2290
  3757  000EDA                     u2291:
  3758  000EDA  EF80  F007         	goto	l2640
  3759  000EDE                     u2290:
  3760  000EDE  5019               	movf	___aodiv@divisor^0,w,c
  3761  000EE0  5E11               	subwf	___aodiv@dividend^0,f,c
  3762  000EE2  501A               	movf	(___aodiv@divisor+1)^0,w,c
  3763  000EE4  5A12               	subwfb	(___aodiv@dividend+1)^0,f,c
  3764  000EE6  501B               	movf	(___aodiv@divisor+2)^0,w,c
  3765  000EE8  5A13               	subwfb	(___aodiv@dividend+2)^0,f,c
  3766  000EEA  501C               	movf	(___aodiv@divisor+3)^0,w,c
  3767  000EEC  5A14               	subwfb	(___aodiv@dividend+3)^0,f,c
  3768  000EEE  501D               	movf	(___aodiv@divisor+4)^0,w,c
  3769  000EF0  5A15               	subwfb	(___aodiv@dividend+4)^0,f,c
  3770  000EF2  501E               	movf	(___aodiv@divisor+5)^0,w,c
  3771  000EF4  5A16               	subwfb	(___aodiv@dividend+5)^0,f,c
  3772  000EF6  501F               	movf	(___aodiv@divisor+6)^0,w,c
  3773  000EF8  5A17               	subwfb	(___aodiv@dividend+6)^0,f,c
  3774  000EFA  5020               	movf	(___aodiv@divisor+7)^0,w,c
  3775  000EFC  5A18               	subwfb	(___aodiv@dividend+7)^0,f,c
  3776  000EFE  8023               	bsf	___aodiv@quotient^0,0,c
  3777  000F00                     l2640:
  3778  000F00  90D8               	bcf	status,0,c
  3779  000F02  3220               	rrcf	(___aodiv@divisor+7)^0,f,c
  3780  000F04  321F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3781  000F06  321E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3782  000F08  321D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3783  000F0A  321C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3784  000F0C  321B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3785  000F0E  321A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3786  000F10  3219               	rrcf	___aodiv@divisor^0,f,c
  3787  000F12  2E21               	decfsz	___aodiv@counter^0,f,c
  3788  000F14  EF4F  F007         	goto	l2632
  3789  000F18                     l2644:
  3790  000F18  5022               	movf	___aodiv@sign^0,w,c
  3791  000F1A  B4D8               	btfsc	status,2,c
  3792  000F1C  EF92  F007         	goto	u2301
  3793  000F20  EF94  F007         	goto	u2300
  3794  000F24                     u2301:
  3795  000F24  EFA4  F007         	goto	l2648
  3796  000F28                     u2300:
  3797  000F28  1E2A               	comf	(___aodiv@quotient+7)^0,f,c
  3798  000F2A  1E29               	comf	(___aodiv@quotient+6)^0,f,c
  3799  000F2C  1E28               	comf	(___aodiv@quotient+5)^0,f,c
  3800  000F2E  1E27               	comf	(___aodiv@quotient+4)^0,f,c
  3801  000F30  1E26               	comf	(___aodiv@quotient+3)^0,f,c
  3802  000F32  1E25               	comf	(___aodiv@quotient+2)^0,f,c
  3803  000F34  1E24               	comf	(___aodiv@quotient+1)^0,f,c
  3804  000F36  6C23               	negf	___aodiv@quotient^0,c
  3805  000F38  0E00               	movlw	0
  3806  000F3A  2224               	addwfc	(___aodiv@quotient+1)^0,f,c
  3807  000F3C  2225               	addwfc	(___aodiv@quotient+2)^0,f,c
  3808  000F3E  2226               	addwfc	(___aodiv@quotient+3)^0,f,c
  3809  000F40  2227               	addwfc	(___aodiv@quotient+4)^0,f,c
  3810  000F42  2228               	addwfc	(___aodiv@quotient+5)^0,f,c
  3811  000F44  2229               	addwfc	(___aodiv@quotient+6)^0,f,c
  3812  000F46  222A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3813  000F48                     l2648:
  3814  000F48  C023  F011         	movff	___aodiv@quotient,?___aodiv
  3815  000F4C  C024  F012         	movff	___aodiv@quotient+1,?___aodiv+1
  3816  000F50  C025  F013         	movff	___aodiv@quotient+2,?___aodiv+2
  3817  000F54  C026  F014         	movff	___aodiv@quotient+3,?___aodiv+3
  3818  000F58  C027  F015         	movff	___aodiv@quotient+4,?___aodiv+4
  3819  000F5C  C028  F016         	movff	___aodiv@quotient+5,?___aodiv+5
  3820  000F60  C029  F017         	movff	___aodiv@quotient+6,?___aodiv+6
  3821  000F64  C02A  F018         	movff	___aodiv@quotient+7,?___aodiv+7
  3822  000F68  0012               	return		;funcret
  3823  000F6A                     __end_of___aodiv:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function _atoi *****************
  3827 ;; Defined at:
  3828 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  s               2   28[COMRAM] PTR const unsigned char 
  3831 ;;		 -> Mode_run2@word(20), STR_6(6), STR_4(6), 
  3832 ;; Auto vars:     Size  Location     Type
  3833 ;;  n               2   41[COMRAM] int 
  3834 ;;  neg             2   34[COMRAM] int 
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  2   28[COMRAM] int 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3844 ;;      Params:         2       0       0       0       0       0       0
  3845 ;;      Locals:         9       0       0       0       0       0       0
  3846 ;;      Temps:          4       0       0       0       0       0       0
  3847 ;;      Totals:        15       0       0       0       0       0       0
  3848 ;;Total ram usage:       15 bytes
  3849 ;; Hardware stack levels used: 1
  3850 ;; Hardware stack levels required when called: 5
  3851 ;; This function calls:
  3852 ;;		___wmul
  3853 ;;		_isdigit
  3854 ;;		_isspace
  3855 ;; This function is called by:
  3856 ;;		_Mode_run2
  3857 ;;		_vfpfcnvrt
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text21
  3862  000BEA                     __ptext21:
  3863                           	callstack 0
  3864  000BEA                     _atoi:
  3865                           	callstack 20
  3866  000BEA  0E00               	movlw	0
  3867  000BEC  6E2B               	movwf	(atoi@n+1)^0,c
  3868  000BEE  0E00               	movlw	0
  3869  000BF0  6E2A               	movwf	atoi@n^0,c
  3870  000BF2  0E00               	movlw	0
  3871  000BF4  6E24               	movwf	(atoi@neg+1)^0,c
  3872  000BF6  0E00               	movlw	0
  3873  000BF8  6E23               	movwf	atoi@neg^0,c
  3874  000BFA  EF01  F006         	goto	l2734
  3875  000BFE                     l2732:
  3876  000BFE  4A1D               	infsnz	atoi@s^0,f,c
  3877  000C00  2A1E               	incf	(atoi@s+1)^0,f,c
  3878  000C02                     l2734:
  3879  000C02  0E01               	movlw	1
  3880  000C04  6E29               	movwf	_atoi$1695^0,c
  3881  000C06  C01D  FFF6         	movff	atoi@s,tblptrl
  3882  000C0A  C01E  FFF7         	movff	atoi@s+1,tblptrh
  3883  000C0E  6AF8               	clrf	tblptru,c
  3884  000C10  0E05               	movlw	(high __ramtop+-1)
  3885  000C12  64F7               	cpfsgt	tblptrh,c
  3886  000C14  D003               	bra	u2467
  3887  000C16  0008               	tblrd		*
  3888  000C18  50F5               	movf	tablat,w,c
  3889  000C1A  D005               	bra	u2460
  3890  000C1C                     u2467:
  3891  000C1C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3892  000C20  CFF7 FFEA          	movff	tblptrh,fsr0h
  3893  000C24  50EF               	movf	indf0,w,c
  3894  000C26                     u2460:
  3895  000C26  0A20               	xorlw	32
  3896  000C28  B4D8               	btfsc	status,2,c
  3897  000C2A  EF19  F006         	goto	u2471
  3898  000C2E  EF1B  F006         	goto	u2470
  3899  000C32                     u2471:
  3900  000C32  EF42  F006         	goto	l2742
  3901  000C36                     u2470:
  3902  000C36  0EF7               	movlw	247
  3903  000C38  6E1F               	movwf	??_atoi^0,c
  3904  000C3A  0EFF               	movlw	255
  3905  000C3C  6E20               	movwf	(??_atoi+1)^0,c
  3906  000C3E  C01D  FFF6         	movff	atoi@s,tblptrl
  3907  000C42  C01E  FFF7         	movff	atoi@s+1,tblptrh
  3908  000C46  6AF8               	clrf	tblptru,c
  3909  000C48  0E05               	movlw	(high __ramtop+-1)
  3910  000C4A  64F7               	cpfsgt	tblptrh,c
  3911  000C4C  D003               	bra	u2487
  3912  000C4E  0008               	tblrd		*
  3913  000C50  50F5               	movf	tablat,w,c
  3914  000C52  D005               	bra	u2480
  3915  000C54                     u2487:
  3916  000C54  CFF6 FFE9          	movff	tblptrl,fsr0l
  3917  000C58  CFF7 FFEA          	movff	tblptrh,fsr0h
  3918  000C5C  50EF               	movf	indf0,w,c
  3919  000C5E                     u2480:
  3920  000C5E  6E21               	movwf	(??_atoi+2)^0,c
  3921  000C60  6A22               	clrf	(??_atoi+3)^0,c
  3922  000C62  501F               	movf	??_atoi^0,w,c
  3923  000C64  2621               	addwf	(??_atoi+2)^0,f,c
  3924  000C66  5020               	movf	(??_atoi+1)^0,w,c
  3925  000C68  2222               	addwfc	(??_atoi+3)^0,f,c
  3926  000C6A  5022               	movf	(??_atoi+3)^0,w,c
  3927  000C6C  E109               	bnz	u2490
  3928  000C6E  0E05               	movlw	5
  3929  000C70  5C21               	subwf	(??_atoi+2)^0,w,c
  3930  000C72  A0D8               	btfss	status,0,c
  3931  000C74  EF3E  F006         	goto	u2491
  3932  000C78  EF40  F006         	goto	u2490
  3933  000C7C                     u2491:
  3934  000C7C  EF42  F006         	goto	l2742
  3935  000C80                     u2490:
  3936  000C80  0E00               	movlw	0
  3937  000C82  6E29               	movwf	_atoi$1695^0,c
  3938  000C84                     l2742:
  3939  000C84  C029  F025         	movff	_atoi$1695,_atoi$1694
  3940  000C88  6A26               	clrf	(_atoi$1694+1)^0,c
  3941  000C8A  5025               	movf	_atoi$1694^0,w,c
  3942  000C8C  1026               	iorwf	(_atoi$1694+1)^0,w,c
  3943  000C8E  A4D8               	btfss	status,2,c
  3944  000C90  EF4C  F006         	goto	u2501
  3945  000C94  EF4E  F006         	goto	u2500
  3946  000C98                     u2501:
  3947  000C98  EFFF  F005         	goto	l2732
  3948  000C9C                     u2500:
  3949  000C9C  EF58  F006         	goto	l2752
  3950  000CA0                     l2748:
  3951  000CA0  0E00               	movlw	0
  3952  000CA2  6E24               	movwf	(atoi@neg+1)^0,c
  3953  000CA4  0E01               	movlw	1
  3954  000CA6  6E23               	movwf	atoi@neg^0,c
  3955  000CA8                     l2750:
  3956  000CA8  4A1D               	infsnz	atoi@s^0,f,c
  3957  000CAA  2A1E               	incf	(atoi@s+1)^0,f,c
  3958  000CAC  EFA3  F006         	goto	l2758
  3959  000CB0                     l2752:
  3960  000CB0  C01D  FFF6         	movff	atoi@s,tblptrl
  3961  000CB4  C01E  FFF7         	movff	atoi@s+1,tblptrh
  3962  000CB8  6AF8               	clrf	tblptru,c
  3963  000CBA  0E05               	movlw	(high __ramtop+-1)
  3964  000CBC  64F7               	cpfsgt	tblptrh,c
  3965  000CBE  D003               	bra	u2517
  3966  000CC0  0008               	tblrd		*
  3967  000CC2  50F5               	movf	tablat,w,c
  3968  000CC4  D005               	bra	u2510
  3969  000CC6                     u2517:
  3970  000CC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  3971  000CCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  3972  000CCE  50EF               	movf	indf0,w,c
  3973  000CD0                     u2510:
  3974  000CD0  6E1F               	movwf	??_atoi^0,c
  3975  000CD2  6A20               	clrf	(??_atoi+1)^0,c
  3976                           
  3977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3978                           ; Switch size 1, requested type "simple"
  3979                           ; Number of cases is 1, Range of values is 0 to 0
  3980                           ; switch strategies available:
  3981                           ; Name         Instructions Cycles
  3982                           ; simple_byte            4     3 (average)
  3983                           ;	Chosen strategy is simple_byte
  3984  000CD4  5020               	movf	(??_atoi+1)^0,w,c
  3985  000CD6  0A00               	xorlw	0	; case 0
  3986  000CD8  B4D8               	btfsc	status,2,c
  3987  000CDA  EF71  F006         	goto	l3052
  3988  000CDE  EFA3  F006         	goto	l2758
  3989  000CE2                     l3052:
  3990                           
  3991                           ; Switch size 1, requested type "simple"
  3992                           ; Number of cases is 2, Range of values is 43 to 45
  3993                           ; switch strategies available:
  3994                           ; Name         Instructions Cycles
  3995                           ; simple_byte            7     4 (average)
  3996                           ;	Chosen strategy is simple_byte
  3997  000CE2  501F               	movf	??_atoi^0,w,c
  3998  000CE4  0A2B               	xorlw	43	; case 43
  3999  000CE6  B4D8               	btfsc	status,2,c
  4000  000CE8  EF54  F006         	goto	l2750
  4001  000CEC  0A06               	xorlw	6	; case 45
  4002  000CEE  B4D8               	btfsc	status,2,c
  4003  000CF0  EF50  F006         	goto	l2748
  4004  000CF4  EFA3  F006         	goto	l2758
  4005  000CF8                     l2754:
  4006  000CF8  C02A  F017         	movff	atoi@n,___wmul@multiplier
  4007  000CFC  C02B  F018         	movff	atoi@n+1,___wmul@multiplier+1
  4008  000D00  0E00               	movlw	0
  4009  000D02  6E1A               	movwf	(___wmul@multiplicand+1)^0,c
  4010  000D04  0E0A               	movlw	10
  4011  000D06  6E19               	movwf	___wmul@multiplicand^0,c
  4012  000D08  EC04  F00E         	call	___wmul	;wreg free
  4013  000D0C  C01D  FFF6         	movff	atoi@s,tblptrl
  4014  000D10  C01E  FFF7         	movff	atoi@s+1,tblptrh
  4015  000D14  6AF8               	clrf	tblptru,c
  4016  000D16  0E05               	movlw	(high __ramtop+-1)
  4017  000D18  64F7               	cpfsgt	tblptrh,c
  4018  000D1A  D003               	bra	u2527
  4019  000D1C  0008               	tblrd		*
  4020  000D1E  50F5               	movf	tablat,w,c
  4021  000D20  D005               	bra	u2520
  4022  000D22                     u2527:
  4023  000D22  CFF6 FFE9          	movff	tblptrl,fsr0l
  4024  000D26  CFF7 FFEA          	movff	tblptrh,fsr0h
  4025  000D2A  50EF               	movf	indf0,w,c
  4026  000D2C                     u2520:
  4027  000D2C  6E1F               	movwf	??_atoi^0,c
  4028  000D2E  501F               	movf	??_atoi^0,w,c
  4029  000D30  5E17               	subwf	?___wmul^0,f,c
  4030  000D32  0E00               	movlw	0
  4031  000D34  5A18               	subwfb	(?___wmul+1)^0,f,c
  4032  000D36  0E30               	movlw	48
  4033  000D38  2417               	addwf	?___wmul^0,w,c
  4034  000D3A  6E2A               	movwf	atoi@n^0,c
  4035  000D3C  0E00               	movlw	0
  4036  000D3E  2018               	addwfc	(?___wmul+1)^0,w,c
  4037  000D40  6E2B               	movwf	(atoi@n+1)^0,c
  4038  000D42  EF54  F006         	goto	l2750
  4039  000D46                     l2758:
  4040  000D46  0ED0               	movlw	208
  4041  000D48  6E1F               	movwf	??_atoi^0,c
  4042  000D4A  0EFF               	movlw	255
  4043  000D4C  6E20               	movwf	(??_atoi+1)^0,c
  4044  000D4E  C01D  FFF6         	movff	atoi@s,tblptrl
  4045  000D52  C01E  FFF7         	movff	atoi@s+1,tblptrh
  4046  000D56  6AF8               	clrf	tblptru,c
  4047  000D58  0E05               	movlw	(high __ramtop+-1)
  4048  000D5A  64F7               	cpfsgt	tblptrh,c
  4049  000D5C  D003               	bra	u2537
  4050  000D5E  0008               	tblrd		*
  4051  000D60  50F5               	movf	tablat,w,c
  4052  000D62  D005               	bra	u2530
  4053  000D64                     u2537:
  4054  000D64  CFF6 FFE9          	movff	tblptrl,fsr0l
  4055  000D68  CFF7 FFEA          	movff	tblptrh,fsr0h
  4056  000D6C  50EF               	movf	indf0,w,c
  4057  000D6E                     u2530:
  4058  000D6E  6E21               	movwf	(??_atoi+2)^0,c
  4059  000D70  6A22               	clrf	(??_atoi+3)^0,c
  4060  000D72  501F               	movf	??_atoi^0,w,c
  4061  000D74  2621               	addwf	(??_atoi+2)^0,f,c
  4062  000D76  5020               	movf	(??_atoi+1)^0,w,c
  4063  000D78  2222               	addwfc	(??_atoi+3)^0,f,c
  4064  000D7A  5022               	movf	(??_atoi+3)^0,w,c
  4065  000D7C  E10A               	bnz	u2540
  4066  000D7E  0E0A               	movlw	10
  4067  000D80  5C21               	subwf	(??_atoi+2)^0,w,c
  4068  000D82  A0D8               	btfss	status,0,c
  4069  000D84  EFC6  F006         	goto	u2541
  4070  000D88  EFC9  F006         	goto	u2540
  4071  000D8C                     u2541:
  4072  000D8C  0E01               	movlw	1
  4073  000D8E  EFCA  F006         	goto	u2550
  4074  000D92                     u2540:
  4075  000D92  0E00               	movlw	0
  4076  000D94                     u2550:
  4077  000D94  6E27               	movwf	_atoi$1696^0,c
  4078  000D96  6A28               	clrf	(_atoi$1696+1)^0,c
  4079  000D98  5027               	movf	_atoi$1696^0,w,c
  4080  000D9A  1028               	iorwf	(_atoi$1696+1)^0,w,c
  4081  000D9C  A4D8               	btfss	status,2,c
  4082  000D9E  EFD3  F006         	goto	u2561
  4083  000DA2  EFD5  F006         	goto	u2560
  4084  000DA6                     u2561:
  4085  000DA6  EF7C  F006         	goto	l2754
  4086  000DAA                     u2560:
  4087  000DAA  5023               	movf	atoi@neg^0,w,c
  4088  000DAC  1024               	iorwf	(atoi@neg+1)^0,w,c
  4089  000DAE  A4D8               	btfss	status,2,c
  4090  000DB0  EFDC  F006         	goto	u2571
  4091  000DB4  EFDE  F006         	goto	u2570
  4092  000DB8                     u2571:
  4093  000DB8  EFEC  F006         	goto	l976
  4094  000DBC                     u2570:
  4095  000DBC  C02A  F01F         	movff	atoi@n,??_atoi
  4096  000DC0  C02B  F020         	movff	atoi@n+1,??_atoi+1
  4097  000DC4  1E1F               	comf	??_atoi^0,f,c
  4098  000DC6  1E20               	comf	(??_atoi+1)^0,f,c
  4099  000DC8  4A1F               	infsnz	??_atoi^0,f,c
  4100  000DCA  2A20               	incf	(??_atoi+1)^0,f,c
  4101  000DCC  C01F  F01D         	movff	??_atoi,?_atoi
  4102  000DD0  C020  F01E         	movff	??_atoi+1,?_atoi+1
  4103  000DD4  EFF0  F006         	goto	l979
  4104  000DD8                     l976:
  4105  000DD8  C02A  F01D         	movff	atoi@n,?_atoi
  4106  000DDC  C02B  F01E         	movff	atoi@n+1,?_atoi+1
  4107  000DE0                     l979:
  4108  000DE0  0012               	return		;funcret
  4109  000DE2                     __end_of_atoi:
  4110                           	callstack 0
  4111                           
  4112 ;; *************** function _isspace *****************
  4113 ;; Defined at:
  4114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  c               2   16[COMRAM] int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2   16[COMRAM] int 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4128 ;;      Params:         2       0       0       0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0
  4130 ;;      Temps:          4       0       0       0       0       0       0
  4131 ;;      Totals:         7       0       0       0       0       0       0
  4132 ;;Total ram usage:        7 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 4
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_atoi
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text22
  4143  001988                     __ptext22:
  4144                           	callstack 0
  4145  001988                     _isspace:
  4146                           	callstack 20
  4147  001988  0E01               	movlw	1
  4148  00198A  6E17               	movwf	_isspace$1712^0,c
  4149  00198C  0E20               	movlw	32
  4150  00198E  1811               	xorwf	isspace@c^0,w,c
  4151  001990  1012               	iorwf	(isspace@c+1)^0,w,c
  4152  001992  B4D8               	btfsc	status,2,c
  4153  001994  EFCE  F00C         	goto	u2371
  4154  001998  EFD0  F00C         	goto	u2370
  4155  00199C                     u2371:
  4156  00199C  EFE9  F00C         	goto	l2696
  4157  0019A0                     u2370:
  4158  0019A0  0EF7               	movlw	247
  4159  0019A2  6E13               	movwf	??_isspace^0,c
  4160  0019A4  0EFF               	movlw	255
  4161  0019A6  6E14               	movwf	(??_isspace+1)^0,c
  4162  0019A8  C011  F015         	movff	isspace@c,??_isspace+2
  4163  0019AC  C012  F016         	movff	isspace@c+1,??_isspace+3
  4164  0019B0  5013               	movf	??_isspace^0,w,c
  4165  0019B2  2615               	addwf	(??_isspace+2)^0,f,c
  4166  0019B4  5014               	movf	(??_isspace+1)^0,w,c
  4167  0019B6  2216               	addwfc	(??_isspace+3)^0,f,c
  4168  0019B8  5016               	movf	(??_isspace+3)^0,w,c
  4169  0019BA  E109               	bnz	u2380
  4170  0019BC  0E05               	movlw	5
  4171  0019BE  5C15               	subwf	(??_isspace+2)^0,w,c
  4172  0019C0  A0D8               	btfss	status,0,c
  4173  0019C2  EFE5  F00C         	goto	u2381
  4174  0019C6  EFE7  F00C         	goto	u2380
  4175  0019CA                     u2381:
  4176  0019CA  EFE9  F00C         	goto	l2696
  4177  0019CE                     u2380:
  4178  0019CE  0E00               	movlw	0
  4179  0019D0  6E17               	movwf	_isspace$1712^0,c
  4180  0019D2                     l2696:
  4181  0019D2  C017  F011         	movff	_isspace$1712,?_isspace
  4182  0019D6  6A12               	clrf	(?_isspace+1)^0,c
  4183  0019D8  0012               	return		;funcret
  4184  0019DA                     __end_of_isspace:
  4185                           	callstack 0
  4186                           
  4187 ;; *************** function _isdigit *****************
  4188 ;; Defined at:
  4189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  4190 ;; Parameters:    Size  Location     Type
  4191 ;;  c               2   16[COMRAM] int 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;		None
  4194 ;; Return value:  Size  Location     Type
  4195 ;;                  2   16[COMRAM] int 
  4196 ;; Registers used:
  4197 ;;		wreg, status,2, status,0
  4198 ;; Tracked objects:
  4199 ;;		On entry : 0/0
  4200 ;;		On exit  : 0/0
  4201 ;;		Unchanged: 0/0
  4202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4203 ;;      Params:         2       0       0       0       0       0       0
  4204 ;;      Locals:         0       0       0       0       0       0       0
  4205 ;;      Temps:          4       0       0       0       0       0       0
  4206 ;;      Totals:         6       0       0       0       0       0       0
  4207 ;;Total ram usage:        6 bytes
  4208 ;; Hardware stack levels used: 1
  4209 ;; Hardware stack levels required when called: 4
  4210 ;; This function calls:
  4211 ;;		Nothing
  4212 ;; This function is called by:
  4213 ;;		_atoi
  4214 ;;		_vfpfcnvrt
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text23
  4219  001ADE                     __ptext23:
  4220                           	callstack 0
  4221  001ADE                     _isdigit:
  4222                           	callstack 21
  4223  001ADE  0ED0               	movlw	208
  4224  001AE0  6E13               	movwf	??_isdigit^0,c
  4225  001AE2  0EFF               	movlw	255
  4226  001AE4  6E14               	movwf	(??_isdigit+1)^0,c
  4227  001AE6  C011  F015         	movff	isdigit@c,??_isdigit+2
  4228  001AEA  C012  F016         	movff	isdigit@c+1,??_isdigit+3
  4229  001AEE  5013               	movf	??_isdigit^0,w,c
  4230  001AF0  2615               	addwf	(??_isdigit+2)^0,f,c
  4231  001AF2  5014               	movf	(??_isdigit+1)^0,w,c
  4232  001AF4  2216               	addwfc	(??_isdigit+3)^0,f,c
  4233  001AF6  5016               	movf	(??_isdigit+3)^0,w,c
  4234  001AF8  E10A               	bnz	u2390
  4235  001AFA  0E0A               	movlw	10
  4236  001AFC  5C15               	subwf	(??_isdigit+2)^0,w,c
  4237  001AFE  A0D8               	btfss	status,0,c
  4238  001B00  EF84  F00D         	goto	u2391
  4239  001B04  EF87  F00D         	goto	u2390
  4240  001B08                     u2391:
  4241  001B08  0E01               	movlw	1
  4242  001B0A  EF88  F00D         	goto	u2400
  4243  001B0E                     u2390:
  4244  001B0E  0E00               	movlw	0
  4245  001B10                     u2400:
  4246  001B10  6E11               	movwf	?_isdigit^0,c
  4247  001B12  6A12               	clrf	(?_isdigit+1)^0,c
  4248  001B14  0012               	return		;funcret
  4249  001B16                     __end_of_isdigit:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function ___wmul *****************
  4253 ;; Defined at:
  4254 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  multiplier      2   22[COMRAM] unsigned int 
  4257 ;;  multiplicand    2   24[COMRAM] unsigned int 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  product         2   26[COMRAM] unsigned int 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  2   22[COMRAM] unsigned int 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, prodl, prodh
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4269 ;;      Params:         4       0       0       0       0       0       0
  4270 ;;      Locals:         2       0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0
  4272 ;;      Totals:         6       0       0       0       0       0       0
  4273 ;;Total ram usage:        6 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 4
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_Mode_run
  4280 ;;		_atoi
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text24
  4285  001C08                     __ptext24:
  4286                           	callstack 0
  4287  001C08                     ___wmul:
  4288                           	callstack 20
  4289  001C08  5017               	movf	___wmul@multiplier^0,w,c
  4290  001C0A  0219               	mulwf	___wmul@multiplicand^0,c
  4291  001C0C  CFF3 F01B          	movff	prodl,___wmul@product
  4292  001C10  CFF4 F01C          	movff	prodh,___wmul@product+1
  4293  001C14  5017               	movf	___wmul@multiplier^0,w,c
  4294  001C16  021A               	mulwf	(___wmul@multiplicand+1)^0,c
  4295  001C18  50F3               	movf	243,w,c
  4296  001C1A  261C               	addwf	(___wmul@product+1)^0,f,c
  4297  001C1C  5018               	movf	(___wmul@multiplier+1)^0,w,c
  4298  001C1E  0219               	mulwf	___wmul@multiplicand^0,c
  4299  001C20  50F3               	movf	243,w,c
  4300  001C22  261C               	addwf	(___wmul@product+1)^0,f,c
  4301  001C24  C01B  F017         	movff	___wmul@product,?___wmul
  4302  001C28  C01C  F018         	movff	___wmul@product+1,?___wmul+1
  4303  001C2C  0012               	return		;funcret
  4304  001C2E                     __end_of___wmul:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _UART_Write_Text *****************
  4308 ;; Defined at:
  4309 ;;		line 120 in file "setting_hardaware/uart.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  text            2   17[COMRAM] PTR unsigned char 
  4312 ;;		 -> STR_10(19), STR_9(3), STR_7(11), Mode_run@word(20), 
  4313 ;;		 -> STR_5(3), run@word(20), STR_3(18), STR_2(3), 
  4314 ;;		 -> STR_1(3), 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  i               2   21[COMRAM] int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4326 ;;      Params:         2       0       0       0       0       0       0
  4327 ;;      Locals:         2       0       0       0       0       0       0
  4328 ;;      Temps:          2       0       0       0       0       0       0
  4329 ;;      Totals:         6       0       0       0       0       0       0
  4330 ;;Total ram usage:        6 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 5
  4333 ;; This function calls:
  4334 ;;		_UART_Write
  4335 ;; This function is called by:
  4336 ;;		_run
  4337 ;;		_Mode_run
  4338 ;;		_Mode_turn
  4339 ;;		_Mode_detect
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text25
  4344  0016BE                     __ptext25:
  4345                           	callstack 0
  4346  0016BE                     _UART_Write_Text:
  4347                           	callstack 24
  4348  0016BE                     
  4349                           ;setting_hardaware/uart.c: 121:     for(int i=0;text[i]!='\0';i++)
  4350  0016BE  0E00               	movlw	0
  4351  0016C0  6E17               	movwf	(UART_Write_Text@i+1)^0,c
  4352  0016C2  0E00               	movlw	0
  4353  0016C4  6E16               	movwf	UART_Write_Text@i^0,c
  4354  0016C6  EF7F  F00B         	goto	l2204
  4355  0016CA                     l2200:
  4356                           
  4357                           ;setting_hardaware/uart.c: 122:         UART_Write(text[i]);
  4358  0016CA  5016               	movf	UART_Write_Text@i^0,w,c
  4359  0016CC  2412               	addwf	UART_Write_Text@text^0,w,c
  4360  0016CE  6E14               	movwf	??_UART_Write_Text^0,c
  4361  0016D0  5017               	movf	(UART_Write_Text@i+1)^0,w,c
  4362  0016D2  2013               	addwfc	(UART_Write_Text@text+1)^0,w,c
  4363  0016D4  6E15               	movwf	(??_UART_Write_Text+1)^0,c
  4364  0016D6  C014  FFF6         	movff	??_UART_Write_Text,tblptrl
  4365  0016DA  C015  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  4366  0016DE  6AF8               	clrf	tblptru,c
  4367  0016E0  0E05               	movlw	(high __ramtop+-1)
  4368  0016E2  64F7               	cpfsgt	tblptrh,c
  4369  0016E4  D003               	bra	u1767
  4370  0016E6  0008               	tblrd		*
  4371  0016E8  50F5               	movf	tablat,w,c
  4372  0016EA  D005               	bra	u1760
  4373  0016EC                     u1767:
  4374  0016EC  CFF6 FFE9          	movff	tblptrl,fsr0l
  4375  0016F0  CFF7 FFEA          	movff	tblptrh,fsr0h
  4376  0016F4  50EF               	movf	indf0,w,c
  4377  0016F6                     u1760:
  4378  0016F6  EC26  F00E         	call	_UART_Write
  4379  0016FA  4A16               	infsnz	UART_Write_Text@i^0,f,c
  4380  0016FC  2A17               	incf	(UART_Write_Text@i+1)^0,f,c
  4381  0016FE                     l2204:
  4382  0016FE  5016               	movf	UART_Write_Text@i^0,w,c
  4383  001700  2412               	addwf	UART_Write_Text@text^0,w,c
  4384  001702  6E14               	movwf	??_UART_Write_Text^0,c
  4385  001704  5017               	movf	(UART_Write_Text@i+1)^0,w,c
  4386  001706  2013               	addwfc	(UART_Write_Text@text+1)^0,w,c
  4387  001708  6E15               	movwf	(??_UART_Write_Text+1)^0,c
  4388  00170A  C014  FFF6         	movff	??_UART_Write_Text,tblptrl
  4389  00170E  C015  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  4390  001712  6AF8               	clrf	tblptru,c
  4391  001714  0E05               	movlw	(high __ramtop+-1)
  4392  001716  64F7               	cpfsgt	tblptrh,c
  4393  001718  D003               	bra	u1777
  4394  00171A  0008               	tblrd		*
  4395  00171C  50F5               	movf	tablat,w,c
  4396  00171E  D005               	bra	u1770
  4397  001720                     u1777:
  4398  001720  CFF6 FFE9          	movff	tblptrl,fsr0l
  4399  001724  CFF7 FFEA          	movff	tblptrh,fsr0h
  4400  001728  50EF               	movf	indf0,w,c
  4401  00172A                     u1770:
  4402  00172A  0900               	iorlw	0
  4403  00172C  A4D8               	btfss	status,2,c
  4404  00172E  EF9B  F00B         	goto	u1781
  4405  001732  EF9D  F00B         	goto	u1780
  4406  001736                     u1781:
  4407  001736  EF65  F00B         	goto	l2200
  4408  00173A                     u1780:
  4409  00173A  0012               	return		;funcret
  4410  00173C                     __end_of_UART_Write_Text:
  4411                           	callstack 0
  4412                           
  4413 ;; *************** function _UART_Write *****************
  4414 ;; Defined at:
  4415 ;;		line 96 in file "setting_hardaware/uart.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  data            1    wreg     unsigned char 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  data            1   16[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  1    wreg      void 
  4422 ;; Registers used:
  4423 ;;		wreg
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4429 ;;      Params:         0       0       0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0
  4432 ;;      Totals:         1       0       0       0       0       0       0
  4433 ;;Total ram usage:        1 bytes
  4434 ;; Hardware stack levels used: 1
  4435 ;; Hardware stack levels required when called: 4
  4436 ;; This function calls:
  4437 ;;		Nothing
  4438 ;; This function is called by:
  4439 ;;		_GetString
  4440 ;;		_UART_Write_Text
  4441 ;;		_run
  4442 ;;		_Mode_run
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text26
  4447  001C4C                     __ptext26:
  4448                           	callstack 0
  4449  001C4C                     _UART_Write:
  4450                           	callstack 24
  4451                           
  4452                           ;incstack = 0
  4453                           ;UART_Write@data stored from wreg
  4454  001C4C  6E11               	movwf	UART_Write@data^0,c
  4455  001C4E                     l62:
  4456  001C4E  A2AC               	btfss	172,1,c	;volatile
  4457  001C50  EF2C  F00E         	goto	u1741
  4458  001C54  EF2E  F00E         	goto	u1740
  4459  001C58                     u1741:
  4460  001C58  EF27  F00E         	goto	l62
  4461  001C5C                     u1740:
  4462  001C5C                     
  4463                           ;setting_hardaware/uart.c: 99:     TXREG = data;
  4464  001C5C  C011  FFAD         	movff	UART_Write@data,4013	;volatile
  4465  001C60  0012               	return		;funcret
  4466  001C62                     __end_of_UART_Write:
  4467                           	callstack 0
  4468                           
  4469 ;; *************** function _ClearBuffer *****************
  4470 ;; Defined at:
  4471 ;;		line 125 in file "setting_hardaware/uart.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  i               2   16[COMRAM] int 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4485 ;;      Params:         0       0       0       0       0       0       0
  4486 ;;      Locals:         2       0       0       0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0
  4488 ;;      Totals:         2       0       0       0       0       0       0
  4489 ;;Total ram usage:        2 bytes
  4490 ;; Hardware stack levels used: 1
  4491 ;; Hardware stack levels required when called: 4
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_run
  4496 ;;		_Mode_run
  4497 ;;		_Mode_run2
  4498 ;;		_main
  4499 ;;		_Mode_detect
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text27
  4504  001A1E                     __ptext27:
  4505                           	callstack 0
  4506  001A1E                     _ClearBuffer:
  4507                           	callstack 24
  4508  001A1E                     
  4509                           ;setting_hardaware/uart.c: 126:     for(int i = 0; i < 10 ; i++)
  4510  001A1E  0E00               	movlw	0
  4511  001A20  6E12               	movwf	(ClearBuffer@i+1)^0,c
  4512  001A22  0E00               	movlw	0
  4513  001A24  6E11               	movwf	ClearBuffer@i^0,c
  4514  001A26                     l2212:
  4515                           
  4516                           ;setting_hardaware/uart.c: 127:         mystring[i] = '\0';
  4517  001A26  0EE4               	movlw	low _mystring
  4518  001A28  2411               	addwf	ClearBuffer@i^0,w,c
  4519  001A2A  6ED9               	movwf	fsr2l,c
  4520  001A2C  0E00               	movlw	high _mystring
  4521  001A2E  2012               	addwfc	(ClearBuffer@i+1)^0,w,c
  4522  001A30  6EDA               	movwf	fsr2h,c
  4523  001A32  0E00               	movlw	0
  4524  001A34  6EDF               	movwf	indf2,c
  4525  001A36  4A11               	infsnz	ClearBuffer@i^0,f,c
  4526  001A38  2A12               	incf	(ClearBuffer@i+1)^0,f,c
  4527  001A3A  BE12               	btfsc	(ClearBuffer@i+1)^0,7,c
  4528  001A3C  EF29  F00D         	goto	u1791
  4529  001A40  5012               	movf	(ClearBuffer@i+1)^0,w,c
  4530  001A42  E109               	bnz	u1790
  4531  001A44  0E0A               	movlw	10
  4532  001A46  5C11               	subwf	ClearBuffer@i^0,w,c
  4533  001A48  A0D8               	btfss	status,0,c
  4534  001A4A  EF29  F00D         	goto	u1791
  4535  001A4E  EF2B  F00D         	goto	u1790
  4536  001A52                     u1791:
  4537  001A52  EF13  F00D         	goto	l2212
  4538  001A56                     u1790:
  4539  001A56                     
  4540                           ;setting_hardaware/uart.c: 128:     lenStr = 0;
  4541  001A56  0E00               	movlw	0
  4542  001A58  6E68               	movwf	(_lenStr+1)^0,c
  4543  001A5A  0E00               	movlw	0
  4544  001A5C  6E67               	movwf	_lenStr^0,c
  4545  001A5E  0012               	return		;funcret
  4546  001A60                     __end_of_ClearBuffer:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function ___awdiv *****************
  4550 ;; Defined at:
  4551 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  dividend        2   28[COMRAM] int 
  4554 ;;  divisor         2   30[COMRAM] int 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;  quotient        2   34[COMRAM] int 
  4557 ;;  sign            1   33[COMRAM] unsigned char 
  4558 ;;  counter         1   32[COMRAM] unsigned char 
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  2   28[COMRAM] int 
  4561 ;; Registers used:
  4562 ;;		wreg, status,2, status,0
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4568 ;;      Params:         4       0       0       0       0       0       0
  4569 ;;      Locals:         4       0       0       0       0       0       0
  4570 ;;      Temps:          0       0       0       0       0       0       0
  4571 ;;      Totals:         8       0       0       0       0       0       0
  4572 ;;Total ram usage:        8 bytes
  4573 ;; Hardware stack levels used: 1
  4574 ;; Hardware stack levels required when called: 4
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_Mode_run
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582                           	psect	text28
  4583  0014B8                     __ptext28:
  4584                           	callstack 0
  4585  0014B8                     ___awdiv:
  4586                           	callstack 25
  4587  0014B8  0E00               	movlw	0
  4588  0014BA  6E22               	movwf	___awdiv@sign^0,c
  4589  0014BC  BE20               	btfsc	(___awdiv@divisor+1)^0,7,c
  4590  0014BE  EF65  F00A         	goto	u1920
  4591  0014C2  EF63  F00A         	goto	u1921
  4592  0014C6                     u1921:
  4593  0014C6  EF6B  F00A         	goto	l2320
  4594  0014CA                     u1920:
  4595  0014CA  6C1F               	negf	___awdiv@divisor^0,c
  4596  0014CC  1E20               	comf	(___awdiv@divisor+1)^0,f,c
  4597  0014CE  B0D8               	btfsc	status,0,c
  4598  0014D0  2A20               	incf	(___awdiv@divisor+1)^0,f,c
  4599  0014D2  0E01               	movlw	1
  4600  0014D4  6E22               	movwf	___awdiv@sign^0,c
  4601  0014D6                     l2320:
  4602  0014D6  BE1E               	btfsc	(___awdiv@dividend+1)^0,7,c
  4603  0014D8  EF72  F00A         	goto	u1930
  4604  0014DC  EF70  F00A         	goto	u1931
  4605  0014E0                     u1931:
  4606  0014E0  EF78  F00A         	goto	l2326
  4607  0014E4                     u1930:
  4608  0014E4  6C1D               	negf	___awdiv@dividend^0,c
  4609  0014E6  1E1E               	comf	(___awdiv@dividend+1)^0,f,c
  4610  0014E8  B0D8               	btfsc	status,0,c
  4611  0014EA  2A1E               	incf	(___awdiv@dividend+1)^0,f,c
  4612  0014EC  0E01               	movlw	1
  4613  0014EE  1A22               	xorwf	___awdiv@sign^0,f,c
  4614  0014F0                     l2326:
  4615  0014F0  0E00               	movlw	0
  4616  0014F2  6E24               	movwf	(___awdiv@quotient+1)^0,c
  4617  0014F4  0E00               	movlw	0
  4618  0014F6  6E23               	movwf	___awdiv@quotient^0,c
  4619  0014F8  501F               	movf	___awdiv@divisor^0,w,c
  4620  0014FA  1020               	iorwf	(___awdiv@divisor+1)^0,w,c
  4621  0014FC  B4D8               	btfsc	status,2,c
  4622  0014FE  EF83  F00A         	goto	u1941
  4623  001502  EF85  F00A         	goto	u1940
  4624  001506                     u1941:
  4625  001506  EFAD  F00A         	goto	l2348
  4626  00150A                     u1940:
  4627  00150A  0E01               	movlw	1
  4628  00150C  6E21               	movwf	___awdiv@counter^0,c
  4629  00150E  EF8D  F00A         	goto	l2334
  4630  001512                     l2332:
  4631  001512  90D8               	bcf	status,0,c
  4632  001514  361F               	rlcf	___awdiv@divisor^0,f,c
  4633  001516  3620               	rlcf	(___awdiv@divisor+1)^0,f,c
  4634  001518  2A21               	incf	___awdiv@counter^0,f,c
  4635  00151A                     l2334:
  4636  00151A  AE20               	btfss	(___awdiv@divisor+1)^0,7,c
  4637  00151C  EF92  F00A         	goto	u1951
  4638  001520  EF94  F00A         	goto	u1950
  4639  001524                     u1951:
  4640  001524  EF89  F00A         	goto	l2332
  4641  001528                     u1950:
  4642  001528                     l2336:
  4643  001528  90D8               	bcf	status,0,c
  4644  00152A  3623               	rlcf	___awdiv@quotient^0,f,c
  4645  00152C  3624               	rlcf	(___awdiv@quotient+1)^0,f,c
  4646  00152E  501F               	movf	___awdiv@divisor^0,w,c
  4647  001530  5C1D               	subwf	___awdiv@dividend^0,w,c
  4648  001532  5020               	movf	(___awdiv@divisor+1)^0,w,c
  4649  001534  581E               	subwfb	(___awdiv@dividend+1)^0,w,c
  4650  001536  A0D8               	btfss	status,0,c
  4651  001538  EFA0  F00A         	goto	u1961
  4652  00153C  EFA2  F00A         	goto	u1960
  4653  001540                     u1961:
  4654  001540  EFA7  F00A         	goto	l2344
  4655  001544                     u1960:
  4656  001544  501F               	movf	___awdiv@divisor^0,w,c
  4657  001546  5E1D               	subwf	___awdiv@dividend^0,f,c
  4658  001548  5020               	movf	(___awdiv@divisor+1)^0,w,c
  4659  00154A  5A1E               	subwfb	(___awdiv@dividend+1)^0,f,c
  4660  00154C  8023               	bsf	___awdiv@quotient^0,0,c
  4661  00154E                     l2344:
  4662  00154E  90D8               	bcf	status,0,c
  4663  001550  3220               	rrcf	(___awdiv@divisor+1)^0,f,c
  4664  001552  321F               	rrcf	___awdiv@divisor^0,f,c
  4665  001554  2E21               	decfsz	___awdiv@counter^0,f,c
  4666  001556  EF94  F00A         	goto	l2336
  4667  00155A                     l2348:
  4668  00155A  5022               	movf	___awdiv@sign^0,w,c
  4669  00155C  B4D8               	btfsc	status,2,c
  4670  00155E  EFB3  F00A         	goto	u1971
  4671  001562  EFB5  F00A         	goto	u1970
  4672  001566                     u1971:
  4673  001566  EFB9  F00A         	goto	l2352
  4674  00156A                     u1970:
  4675  00156A  6C23               	negf	___awdiv@quotient^0,c
  4676  00156C  1E24               	comf	(___awdiv@quotient+1)^0,f,c
  4677  00156E  B0D8               	btfsc	status,0,c
  4678  001570  2A24               	incf	(___awdiv@quotient+1)^0,f,c
  4679  001572                     l2352:
  4680  001572  C023  F01D         	movff	___awdiv@quotient,?___awdiv
  4681  001576  C024  F01E         	movff	___awdiv@quotient+1,?___awdiv+1
  4682  00157A  0012               	return		;funcret
  4683  00157C                     __end_of___awdiv:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _ADC_Read *****************
  4687 ;; Defined at:
  4688 ;;		line 22 in file "setting_hardaware/adc.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  channel         2   16[COMRAM] int 
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;  digital         2   20[COMRAM] int 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2   16[COMRAM] int 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4702 ;;      Params:         2       0       0       0       0       0       0
  4703 ;;      Locals:         2       0       0       0       0       0       0
  4704 ;;      Temps:          2       0       0       0       0       0       0
  4705 ;;      Totals:         6       0       0       0       0       0       0
  4706 ;;Total ram usage:        6 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 4
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_Mode_run
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text29
  4717  001AA0                     __ptext29:
  4718                           	callstack 0
  4719  001AA0                     _ADC_Read:
  4720                           	callstack 25
  4721  001AA0                     
  4722                           ;setting_hardaware/adc.c: 22: int ADC_Read(int channel);setting_hardaware/adc.c: 23: {;s
      +                          etting_hardaware/adc.c: 24:     int digital;;setting_hardaware/adc.c: 25:     INTCONbits
      +                          .GIE = 1;
  4723  001AA0  8EF2               	bsf	242,7,c	;volatile
  4724  001AA2                     
  4725                           ;setting_hardaware/adc.c: 26:     ADCON0bits.CHS = 0x07;
  4726  001AA2  50C2               	movf	194,w,c	;volatile
  4727  001AA4  0BC3               	andlw	-61
  4728  001AA6  091C               	iorlw	28
  4729  001AA8  6EC2               	movwf	194,c	;volatile
  4730  001AAA                     
  4731                           ;setting_hardaware/adc.c: 27:     ADCON0bits.GO = 1;
  4732  001AAA  82C2               	bsf	194,1,c	;volatile
  4733  001AAC                     
  4734                           ;setting_hardaware/adc.c: 28:     ADCON0bits.ADON = 1;
  4735  001AAC  80C2               	bsf	194,0,c	;volatile
  4736  001AAE                     l139:
  4737  001AAE  B2C2               	btfsc	194,1,c	;volatile
  4738  001AB0  EF5C  F00D         	goto	u1831
  4739  001AB4  EF5E  F00D         	goto	u1830
  4740  001AB8                     u1831:
  4741  001AB8  EF57  F00D         	goto	l139
  4742  001ABC                     u1830:
  4743  001ABC                     
  4744                           ;setting_hardaware/adc.c: 32:     digital = (ADRESH*256) | (ADRESL);
  4745  001ABC  50C3               	movf	195,w,c	;volatile
  4746  001ABE  CFC4 F013          	movff	4036,??_ADC_Read	;volatile
  4747  001AC2  6A14               	clrf	(??_ADC_Read+1)^0,c
  4748  001AC4  C013  F014         	movff	??_ADC_Read,??_ADC_Read+1
  4749  001AC8  6A13               	clrf	??_ADC_Read^0,c
  4750  001ACA  1013               	iorwf	??_ADC_Read^0,w,c
  4751  001ACC  6E15               	movwf	ADC_Read@digital^0,c
  4752  001ACE  5014               	movf	(??_ADC_Read+1)^0,w,c
  4753  001AD0  6E16               	movwf	(ADC_Read@digital+1)^0,c
  4754  001AD2                     
  4755                           ;setting_hardaware/adc.c: 33:     INTCONbits.GIE = 0;
  4756  001AD2  9EF2               	bcf	242,7,c	;volatile
  4757  001AD4                     
  4758                           ;setting_hardaware/adc.c: 34:     return(digital);
  4759  001AD4  C015  F011         	movff	ADC_Read@digital,?_ADC_Read
  4760  001AD8  C016  F012         	movff	ADC_Read@digital+1,?_ADC_Read+1
  4761  001ADC  0012               	return		;funcret
  4762  001ADE                     __end_of_ADC_Read:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _Mode_degree *****************
  4766 ;; Defined at:
  4767 ;;		line 134 in file "main.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		None
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4781 ;;      Params:         0       0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used: 1
  4787 ;; Hardware stack levels required when called: 4
  4788 ;; This function calls:
  4789 ;;		Nothing
  4790 ;; This function is called by:
  4791 ;;		_main
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text30
  4796  001C84                     __ptext30:
  4797                           	callstack 0
  4798  001C84                     _Mode_degree:
  4799                           	callstack 26
  4800  001C84  0012               	return		;funcret
  4801  001C86                     __end_of_Mode_degree:
  4802                           	callstack 0
  4803                           
  4804 ;; *************** function _ADC_Initialize *****************
  4805 ;; Defined at:
  4806 ;;		line 3 in file "setting_hardaware/adc.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;		None
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;		None
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4820 ;;      Params:         0       0       0       0       0       0       0
  4821 ;;      Locals:         0       0       0       0       0       0       0
  4822 ;;      Temps:          0       0       0       0       0       0       0
  4823 ;;      Totals:         0       0       0       0       0       0       0
  4824 ;;Total ram usage:        0 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 4
  4827 ;; This function calls:
  4828 ;;		Nothing
  4829 ;; This function is called by:
  4830 ;;		_main
  4831 ;;		_SYSTEM_Initialize
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           
  4835                           	psect	text31
  4836  001C2E                     __ptext31:
  4837                           	callstack 0
  4838  001C2E                     _ADC_Initialize:
  4839                           	callstack 26
  4840  001C2E                     
  4841                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  4842  001C2E  6892               	setf	146,c	;volatile
  4843  001C30                     
  4844                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  4845  001C30  0E0E               	movlw	14
  4846  001C32  6EC1               	movwf	193,c	;volatile
  4847  001C34                     
  4848                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  4849  001C34  8EC0               	bsf	4032,7,c	;volatile
  4850                           
  4851                           ;setting_hardaware/adc.c: 9:     ADCON2bits.ADCS = 0b000;
  4852  001C36  0EF8               	movlw	-8
  4853  001C38  16C0               	andwf	192,f,c	;volatile
  4854                           
  4855                           ;setting_hardaware/adc.c: 10:     ADCON2bits.ACQT = 0b001;
  4856  001C3A  50C0               	movf	192,w,c	;volatile
  4857  001C3C  0BC7               	andlw	-57
  4858  001C3E  0908               	iorlw	8
  4859  001C40  6EC0               	movwf	192,c	;volatile
  4860                           
  4861                           ;setting_hardaware/adc.c: 18:     ADRESH=0;
  4862  001C42  0E00               	movlw	0
  4863  001C44  6EC4               	movwf	196,c	;volatile
  4864                           
  4865                           ;setting_hardaware/adc.c: 19:     ADRESL=0;
  4866  001C46  0E00               	movlw	0
  4867  001C48  6EC3               	movwf	195,c	;volatile
  4868  001C4A  0012               	return		;funcret
  4869  001C4C                     __end_of_ADC_Initialize:
  4870                           	callstack 0
  4871                           
  4872 ;; *************** function _Lo_ISR *****************
  4873 ;; Defined at:
  4874 ;;		line 145 in file "setting_hardaware/uart.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4888 ;;      Params:         0       0       0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0
  4890 ;;      Temps:          9       0       0       0       0       0       0
  4891 ;;      Totals:         9       0       0       0       0       0       0
  4892 ;;Total ram usage:        9 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; Hardware stack levels required when called: 3
  4895 ;; This function calls:
  4896 ;;		_MyusartRead
  4897 ;;		i1_UART_Write_Text
  4898 ;; This function is called by:
  4899 ;;		Interrupt level 1
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	intcodelo
  4904  000018                     __pintcodelo:
  4905                           	callstack 0
  4906  000018                     _Lo_ISR:
  4907                           	callstack 17
  4908                           
  4909                           ;incstack = 0
  4910  000018  806D               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  4911  00001A  CFD8 F008          	movff	status,??_Lo_ISR
  4912  00001E  CFE8 F009          	movff	wreg,??_Lo_ISR+1
  4913  000022  CFE0 F00A          	movff	bsr,??_Lo_ISR+2
  4914  000026  CFE9 F00B          	movff	fsr0l,??_Lo_ISR+3
  4915  00002A  CFEA F00C          	movff	fsr0h,??_Lo_ISR+4
  4916  00002E  CFF6 F00D          	movff	tblptrl,??_Lo_ISR+5
  4917  000032  CFF7 F00E          	movff	tblptrh,??_Lo_ISR+6
  4918  000036  CFF8 F00F          	movff	tblptru,??_Lo_ISR+7
  4919  00003A  CFF5 F010          	movff	tablat,??_Lo_ISR+8
  4920  00003E                     
  4921                           ;setting_hardaware/uart.c: 147:     if(RCIF)
  4922  00003E  AA9E               	btfss	3998,5,c	;volatile
  4923  000040  EF24  F000         	goto	i1u208_21
  4924  000044  EF26  F000         	goto	i1u208_20
  4925  000048                     i1u208_21:
  4926  000048  EF32  F000         	goto	i1l2476
  4927  00004C                     i1u208_20:
  4928  00004C                     
  4929                           ;setting_hardaware/uart.c: 148:     {;setting_hardaware/uart.c: 149:         if(RCSTAbit
      +                          s.OERR)
  4930  00004C  A2AB               	btfss	171,1,c	;volatile
  4931  00004E  EF2B  F000         	goto	i1u209_21
  4932  000052  EF2D  F000         	goto	i1u209_20
  4933  000056                     i1u209_21:
  4934  000056  EF30  F000         	goto	i1l2474
  4935  00005A                     i1u209_20:
  4936  00005A                     
  4937                           ;setting_hardaware/uart.c: 150:         {;setting_hardaware/uart.c: 151:             CRE
      +                          N = 0;
  4938  00005A  98AB               	bcf	4011,4,c	;volatile
  4939                           
  4940                           ;setting_hardaware/uart.c: 152:             __nop();
  4941  00005C  F000               	nop	
  4942                           
  4943                           ;setting_hardaware/uart.c: 153:             CREN = 1;
  4944  00005E  88AB               	bsf	4011,4,c	;volatile
  4945  000060                     i1l2474:
  4946                           
  4947                           ;setting_hardaware/uart.c: 156:         MyusartRead();
  4948  000060  ECC1  F00D         	call	_MyusartRead	;wreg free
  4949  000064                     i1l2476:
  4950                           
  4951                           ;setting_hardaware/uart.c: 158:     if(INTCONbits.INT0IF){
  4952  000064  A2F2               	btfss	242,1,c	;volatile
  4953  000066  EF37  F000         	goto	i1u210_21
  4954  00006A  EF39  F000         	goto	i1u210_20
  4955  00006E                     i1u210_21:
  4956  00006E  EF40  F000         	goto	i1l101
  4957  000072                     i1u210_20:
  4958  000072                     
  4959                           ;setting_hardaware/uart.c: 159:         UART_Write_Text("on");
  4960  000072  0E55               	movlw	low STR_1
  4961  000074  6E02               	movwf	i1UART_Write_Text@text^0,c
  4962  000076  0E06               	movlw	high STR_1
  4963  000078  6E03               	movwf	(i1UART_Write_Text@text+1)^0,c
  4964  00007A  EC9E  F00B         	call	i1_UART_Write_Text	;wreg free
  4965  00007E                     
  4966                           ;setting_hardaware/uart.c: 160:         INTCONbits.INT0IF = 0;
  4967  00007E  92F2               	bcf	242,1,c	;volatile
  4968  000080                     i1l101:
  4969  000080  C010  FFF5         	movff	??_Lo_ISR+8,tablat
  4970  000084  C00F  FFF8         	movff	??_Lo_ISR+7,tblptru
  4971  000088  C00E  FFF7         	movff	??_Lo_ISR+6,tblptrh
  4972  00008C  C00D  FFF6         	movff	??_Lo_ISR+5,tblptrl
  4973  000090  C00C  FFEA         	movff	??_Lo_ISR+4,fsr0h
  4974  000094  C00B  FFE9         	movff	??_Lo_ISR+3,fsr0l
  4975  000098  C00A  FFE0         	movff	??_Lo_ISR+2,bsr
  4976  00009C  C009  FFE8         	movff	??_Lo_ISR+1,wreg
  4977  0000A0  C008  FFD8         	movff	??_Lo_ISR,status
  4978  0000A4  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4979  0000A6  0010               	retfie	
  4980  0000A8                     __end_of_Lo_ISR:
  4981                           	callstack 0
  4982                           
  4983 ;; *************** function i1_UART_Write_Text *****************
  4984 ;; Defined at:
  4985 ;;		line 120 in file "setting_hardaware/uart.c"
  4986 ;; Parameters:    Size  Location     Type
  4987 ;;  text            2    1[COMRAM] PTR unsigned char 
  4988 ;;		 -> STR_10(19), STR_9(3), STR_7(11), Mode_run@word(20), 
  4989 ;;		 -> STR_5(3), run@word(20), STR_3(18), STR_2(3), 
  4990 ;;		 -> STR_1(3), 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  i               2    5[COMRAM] int 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5002 ;;      Params:         2       0       0       0       0       0       0
  5003 ;;      Locals:         2       0       0       0       0       0       0
  5004 ;;      Temps:          2       0       0       0       0       0       0
  5005 ;;      Totals:         6       0       0       0       0       0       0
  5006 ;;Total ram usage:        6 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 2
  5009 ;; This function calls:
  5010 ;;		i1_UART_Write
  5011 ;; This function is called by:
  5012 ;;		_Lo_ISR
  5013 ;; This function uses a non-reentrant model
  5014 ;;
  5015                           
  5016                           	psect	text33
  5017  00173C                     __ptext33:
  5018                           	callstack 0
  5019  00173C                     i1_UART_Write_Text:
  5020                           	callstack 17
  5021  00173C                     
  5022                           ;setting_hardaware/uart.c: 121:     for(int i=0;text[i]!='\0';i++)
  5023  00173C  0E00               	movlw	0
  5024  00173E  6E07               	movwf	(i1UART_Write_Text@i+1)^0,c
  5025  001740  0E00               	movlw	0
  5026  001742  6E06               	movwf	i1UART_Write_Text@i^0,c
  5027  001744  EFBE  F00B         	goto	i1l2458
  5028  001748                     i1l2454:
  5029                           
  5030                           ;setting_hardaware/uart.c: 122:         UART_Write(text[i]);
  5031  001748  5006               	movf	i1UART_Write_Text@i^0,w,c
  5032  00174A  2402               	addwf	i1UART_Write_Text@text^0,w,c
  5033  00174C  6E04               	movwf	??i1_UART_Write_Text^0,c
  5034  00174E  5007               	movf	(i1UART_Write_Text@i+1)^0,w,c
  5035  001750  2003               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  5036  001752  6E05               	movwf	(??i1_UART_Write_Text+1)^0,c
  5037  001754  C004  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  5038  001758  C005  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  5039  00175C  6AF8               	clrf	tblptru,c
  5040  00175E  0E05               	movlw	(high __ramtop+-1)
  5041  001760  64F7               	cpfsgt	tblptrh,c
  5042  001762  D003               	bra	i1u205_27
  5043  001764  0008               	tblrd		*
  5044  001766  50F5               	movf	tablat,w,c
  5045  001768  D005               	bra	i1u205_20
  5046  00176A                     i1u205_27:
  5047  00176A  CFF6 FFE9          	movff	tblptrl,fsr0l
  5048  00176E  CFF7 FFEA          	movff	tblptrh,fsr0h
  5049  001772  50EF               	movf	indf0,w,c
  5050  001774                     i1u205_20:
  5051  001774  EC31  F00E         	call	i1_UART_Write
  5052  001778  4A06               	infsnz	i1UART_Write_Text@i^0,f,c
  5053  00177A  2A07               	incf	(i1UART_Write_Text@i+1)^0,f,c
  5054  00177C                     i1l2458:
  5055  00177C  5006               	movf	i1UART_Write_Text@i^0,w,c
  5056  00177E  2402               	addwf	i1UART_Write_Text@text^0,w,c
  5057  001780  6E04               	movwf	??i1_UART_Write_Text^0,c
  5058  001782  5007               	movf	(i1UART_Write_Text@i+1)^0,w,c
  5059  001784  2003               	addwfc	(i1UART_Write_Text@text+1)^0,w,c
  5060  001786  6E05               	movwf	(??i1_UART_Write_Text+1)^0,c
  5061  001788  C004  FFF6         	movff	??i1_UART_Write_Text,tblptrl
  5062  00178C  C005  FFF7         	movff	??i1_UART_Write_Text+1,tblptrh
  5063  001790  6AF8               	clrf	tblptru,c
  5064  001792  0E05               	movlw	(high __ramtop+-1)
  5065  001794  64F7               	cpfsgt	tblptrh,c
  5066  001796  D003               	bra	i1u206_27
  5067  001798  0008               	tblrd		*
  5068  00179A  50F5               	movf	tablat,w,c
  5069  00179C  D005               	bra	i1u206_20
  5070  00179E                     i1u206_27:
  5071  00179E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5072  0017A2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5073  0017A6  50EF               	movf	indf0,w,c
  5074  0017A8                     i1u206_20:
  5075  0017A8  0900               	iorlw	0
  5076  0017AA  A4D8               	btfss	status,2,c
  5077  0017AC  EFDA  F00B         	goto	i1u207_21
  5078  0017B0  EFDC  F00B         	goto	i1u207_20
  5079  0017B4                     i1u207_21:
  5080  0017B4  EFA4  F00B         	goto	i1l2454
  5081  0017B8                     i1u207_20:
  5082  0017B8  0012               	return		;funcret
  5083  0017BA                     __end_ofi1_UART_Write_Text:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _MyusartRead *****************
  5087 ;; Defined at:
  5088 ;;		line 131 in file "setting_hardaware/uart.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;  c               1    1[COMRAM] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2, status,0, cstack
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5102 ;;      Params:         0       0       0       0       0       0       0
  5103 ;;      Locals:         1       0       0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0
  5105 ;;      Totals:         1       0       0       0       0       0       0
  5106 ;;Total ram usage:        1 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; Hardware stack levels required when called: 2
  5109 ;; This function calls:
  5110 ;;		i1_UART_Write
  5111 ;; This function is called by:
  5112 ;;		_Lo_ISR
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text34
  5117  001B82                     __ptext34:
  5118                           	callstack 0
  5119  001B82                     _MyusartRead:
  5120                           	callstack 17
  5121  001B82                     i1l89:
  5122  001B82  AA9E               	btfss	3998,5,c	;volatile
  5123  001B84  EFC6  F00D         	goto	i1u199_21
  5124  001B88  EFC8  F00D         	goto	i1u199_20
  5125  001B8C                     i1u199_21:
  5126  001B8C  EFC1  F00D         	goto	i1l89
  5127  001B90                     i1u199_20:
  5128  001B90                     
  5129                           ;setting_hardaware/uart.c: 135:     RCIF = 0;
  5130  001B90  9A9E               	bcf	3998,5,c	;volatile
  5131                           
  5132                           ;setting_hardaware/uart.c: 136:     unsigned char c = RCREG;
  5133  001B92  CFAE F002          	movff	4014,MyusartRead@c	;volatile
  5134  001B96                     
  5135                           ;setting_hardaware/uart.c: 137:     if(c == '\r'){
  5136  001B96  0E0D               	movlw	13
  5137  001B98  1802               	xorwf	MyusartRead@c^0,w,c
  5138  001B9A  A4D8               	btfss	status,2,c
  5139  001B9C  EFD2  F00D         	goto	i1u200_21
  5140  001BA0  EFD4  F00D         	goto	i1u200_20
  5141  001BA4                     i1u200_21:
  5142  001BA4  EFD7  F00D         	goto	i1l2394
  5143  001BA8                     i1u200_20:
  5144  001BA8                     
  5145                           ;setting_hardaware/uart.c: 138:         UART_Write('\n');
  5146  001BA8  0E0A               	movlw	10
  5147  001BAA  EC31  F00E         	call	i1_UART_Write
  5148  001BAE                     i1l2394:
  5149                           
  5150                           ;setting_hardaware/uart.c: 140:     UART_Write(c);
  5151  001BAE  5002               	movf	MyusartRead@c^0,w,c
  5152  001BB0  EC31  F00E         	call	i1_UART_Write
  5153  001BB4  0012               	return		;funcret
  5154  001BB6                     __end_of_MyusartRead:
  5155                           	callstack 0
  5156                           
  5157 ;; *************** function i1_UART_Write *****************
  5158 ;; Defined at:
  5159 ;;		line 96 in file "setting_hardaware/uart.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  data            1    wreg     unsigned char 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;  data            1    0[COMRAM] unsigned char 
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5173 ;;      Params:         0       0       0       0       0       0       0
  5174 ;;      Locals:         1       0       0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0
  5176 ;;      Totals:         1       0       0       0       0       0       0
  5177 ;;Total ram usage:        1 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; Hardware stack levels required when called: 1
  5180 ;; This function calls:
  5181 ;;		Nothing
  5182 ;; This function is called by:
  5183 ;;		_MyusartRead
  5184 ;;		i1_UART_Write_Text
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           	psect	text35
  5189  001C62                     __ptext35:
  5190                           	callstack 0
  5191  001C62                     i1_UART_Write:
  5192                           	callstack 17
  5193                           
  5194                           ;incstack = 0
  5195                           ;i1UART_Write@data stored from wreg
  5196  001C62  6E01               	movwf	i1UART_Write@data^0,c
  5197  001C64                     i1l62:
  5198  001C64  A2AC               	btfss	172,1,c	;volatile
  5199  001C66  EF37  F00E         	goto	i1u198_21
  5200  001C6A  EF39  F00E         	goto	i1u198_20
  5201  001C6E                     i1u198_21:
  5202  001C6E  EF32  F00E         	goto	i1l62
  5203  001C72                     i1u198_20:
  5204  001C72                     
  5205                           ;setting_hardaware/uart.c: 99:     TXREG = data;
  5206  001C72  C001  FFAD         	movff	i1UART_Write@data,4013	;volatile
  5207  001C76  0012               	return		;funcret
  5208  001C78                     __end_ofi1_UART_Write:
  5209                           	callstack 0
  5210                           
  5211 ;; *************** function _Hi_ISR *****************
  5212 ;; Defined at:
  5213 ;;		line 25 in file "main.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		None
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5227 ;;      Params:         0       0       0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		Interrupt level 2
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	intcode
  5241  000008                     __pintcode:
  5242                           	callstack 0
  5243  000008                     _Hi_ISR:
  5244                           	callstack 17
  5245                           
  5246                           ;incstack = 0
  5247  000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5248  00000A  ED3C  F00E         	call	int_func,f	;refresh shadow registers
  5249                           
  5250                           	psect	intcode_body
  5251  001C78                     __pintcode_body:
  5252                           	callstack 17
  5253  001C78                     int_func:
  5254                           	callstack 17
  5255  001C78  0006               	pop		; remove dummy address from shadow register refresh
  5256  001C7A  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5257  001C7C  0011               	retfie		f
  5258  001C7E                     __end_of_Hi_ISR:
  5259                           	callstack 0
  5260                           
  5261                           	psect	rparam
  5262  0000                     
  5263                           	psect	temp
  5264  00006D                     btemp:
  5265                           	callstack 0
  5266  00006D                     	ds	1
  5267  0000                     int$flags	set	btemp
  5268  0000                     wtemp8	set	btemp+1
  5269  0000                     ttemp5	set	btemp+1
  5270  0000                     ttemp6	set	btemp+4
  5271  0000                     ttemp7	set	btemp+8
  5272                           
  5273                           	psect	idloc
  5274                           
  5275                           ;Config register IDLOC0 @ 0x200000
  5276                           ;	unspecified, using default values
  5277  200000                     	org	2097152
  5278  200000  FF                 	db	255
  5279                           
  5280                           ;Config register IDLOC1 @ 0x200001
  5281                           ;	unspecified, using default values
  5282  200001                     	org	2097153
  5283  200001  FF                 	db	255
  5284                           
  5285                           ;Config register IDLOC2 @ 0x200002
  5286                           ;	unspecified, using default values
  5287  200002                     	org	2097154
  5288  200002  FF                 	db	255
  5289                           
  5290                           ;Config register IDLOC3 @ 0x200003
  5291                           ;	unspecified, using default values
  5292  200003                     	org	2097155
  5293  200003  FF                 	db	255
  5294                           
  5295                           ;Config register IDLOC4 @ 0x200004
  5296                           ;	unspecified, using default values
  5297  200004                     	org	2097156
  5298  200004  FF                 	db	255
  5299                           
  5300                           ;Config register IDLOC5 @ 0x200005
  5301                           ;	unspecified, using default values
  5302  200005                     	org	2097157
  5303  200005  FF                 	db	255
  5304                           
  5305                           ;Config register IDLOC6 @ 0x200006
  5306                           ;	unspecified, using default values
  5307  200006                     	org	2097158
  5308  200006  FF                 	db	255
  5309                           
  5310                           ;Config register IDLOC7 @ 0x200007
  5311                           ;	unspecified, using default values
  5312  200007                     	org	2097159
  5313  200007  FF                 	db	255
  5314                           
  5315                           	psect	config
  5316                           
  5317                           ; Padding undefined space
  5318  300000                     	org	3145728
  5319  300000  FF                 	db	255
  5320                           
  5321                           ;Config register CONFIG1H @ 0x300001
  5322                           ;	Oscillator Selection bits
  5323                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5324                           ;	Fail-Safe Clock Monitor Enable bit
  5325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5326                           ;	Internal/External Oscillator Switchover bit
  5327                           ;	IESO = ON, Oscillator Switchover mode enabled
  5328  300001                     	org	3145729
  5329  300001  88                 	db	136
  5330                           
  5331                           ;Config register CONFIG2L @ 0x300002
  5332                           ;	Power-up Timer Enable bit
  5333                           ;	PWRT = OFF, PWRT disabled
  5334                           ;	Brown-out Reset Enable bits
  5335                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5336                           ;	Brown Out Reset Voltage bits
  5337                           ;	BORV = 3, Minimum setting
  5338  300002                     	org	3145730
  5339  300002  1F                 	db	31
  5340                           
  5341                           ;Config register CONFIG2H @ 0x300003
  5342                           ;	Watchdog Timer Enable bit
  5343                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5344                           ;	Watchdog Timer Postscale Select bits
  5345                           ;	WDTPS = 1, 1:1
  5346  300003                     	org	3145731
  5347  300003  00                 	db	0
  5348                           
  5349                           ; Padding undefined space
  5350  300004                     	org	3145732
  5351  300004  FF                 	db	255
  5352                           
  5353                           ;Config register CONFIG3H @ 0x300005
  5354                           ;	CCP2 MUX bit
  5355                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5356                           ;	PORTB A/D Enable bit
  5357                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  5358                           ;	Low-Power Timer1 Oscillator Enable bit
  5359                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5360                           ;	MCLR Pin Enable bit
  5361                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5362  300005                     	org	3145733
  5363  300005  83                 	db	131
  5364                           
  5365                           ;Config register CONFIG4L @ 0x300006
  5366                           ;	Stack Full/Underflow Reset Enable bit
  5367                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5368                           ;	Single-Supply ICSP Enable bit
  5369                           ;	LVP = OFF, Single-Supply ICSP disabled
  5370                           ;	Extended Instruction Set Enable bit
  5371                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5372                           ;	Background Debugger Enable bit
  5373                           ;	DEBUG = 0x1, unprogrammed default
  5374  300006                     	org	3145734
  5375  300006  81                 	db	129
  5376                           
  5377                           ; Padding undefined space
  5378  300007                     	org	3145735
  5379  300007  FF                 	db	255
  5380                           
  5381                           ;Config register CONFIG5L @ 0x300008
  5382                           ;	Code Protection bit
  5383                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  5384                           ;	Code Protection bit
  5385                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  5386                           ;	Code Protection bit
  5387                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  5388                           ;	Code Protection bit
  5389                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  5390  300008                     	org	3145736
  5391  300008  0F                 	db	15
  5392                           
  5393                           ;Config register CONFIG5H @ 0x300009
  5394                           ;	Boot Block Code Protection bit
  5395                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5396                           ;	Data EEPROM Code Protection bit
  5397                           ;	CPD = OFF, Data EEPROM not code-protected
  5398  300009                     	org	3145737
  5399  300009  C0                 	db	192
  5400                           
  5401                           ;Config register CONFIG6L @ 0x30000A
  5402                           ;	Write Protection bit
  5403                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  5404                           ;	Write Protection bit
  5405                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  5406                           ;	Write Protection bit
  5407                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  5408                           ;	Write Protection bit
  5409                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  5410  30000A                     	org	3145738
  5411  30000A  0F                 	db	15
  5412                           
  5413                           ;Config register CONFIG6H @ 0x30000B
  5414                           ;	Configuration Register Write Protection bit
  5415                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5416                           ;	Boot Block Write Protection bit
  5417                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  5418                           ;	Data EEPROM Write Protection bit
  5419                           ;	WRTD = OFF, Data EEPROM not write-protected
  5420  30000B                     	org	3145739
  5421  30000B  E0                 	db	224
  5422                           
  5423                           ;Config register CONFIG7L @ 0x30000C
  5424                           ;	Table Read Protection bit
  5425                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  5426                           ;	Table Read Protection bit
  5427                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  5428                           ;	Table Read Protection bit
  5429                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  5430                           ;	Table Read Protection bit
  5431                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5432  30000C                     	org	3145740
  5433  30000C  0F                 	db	15
  5434                           
  5435                           ;Config register CONFIG7H @ 0x30000D
  5436                           ;	Boot Block Table Read Protection bit
  5437                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5438  30000D                     	org	3145741
  5439  30000D  40                 	db	64
  5440                           tosu	equ	0xFFF
  5441                           tosh	equ	0xFFE
  5442                           tosl	equ	0xFFD
  5443                           stkptr	equ	0xFFC
  5444                           pclatu	equ	0xFFB
  5445                           pclath	equ	0xFFA
  5446                           pcl	equ	0xFF9
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           indf0	equ	0xFEF
  5454                           postinc0	equ	0xFEE
  5455                           postdec0	equ	0xFED
  5456                           preinc0	equ	0xFEC
  5457                           plusw0	equ	0xFEB
  5458                           fsr0h	equ	0xFEA
  5459                           fsr0l	equ	0xFE9
  5460                           wreg	equ	0xFE8
  5461                           indf1	equ	0xFE7
  5462                           postinc1	equ	0xFE6
  5463                           postdec1	equ	0xFE5
  5464                           preinc1	equ	0xFE4
  5465                           plusw1	equ	0xFE3
  5466                           fsr1h	equ	0xFE2
  5467                           fsr1l	equ	0xFE1
  5468                           bsr	equ	0xFE0
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           preinc2	equ	0xFDC
  5473                           plusw2	equ	0xFDB
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        4
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     92     108
    BANK0           128     78     120
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 20
		 -> str(BANK0[20]), Mode_detect@word(COMRAM[20]), Mode_run2@word(BANK0[20]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 20
		 -> str(BANK0[20]), Mode_detect@word(COMRAM[20]), Mode_run2@word(BANK0[20]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[1]), mystring(BANK0[20]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_8(CODE[1]), mystring(BANK0[20]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_15(CODE[5]), STR_14(CODE[4]), STR_13(CODE[5]), STR_12(CODE[7]), 
		 -> STR_11(CODE[6]), 

    strcmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> str(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Mode_run@word(BANK0[20]), run@word(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_4(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_4(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[6]), STR_4(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> Mode_run@word(BANK0[20]), run@word(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1716_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Mode_run@word(BANK0[20]), run@word(BANK0[20]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> Mode_run@word(BANK0[20]), run@word(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> Mode_run2@word(BANK0[20]), STR_6(CODE[6]), STR_4(CODE[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> str(BANK0[20]), Mode_detect@word(COMRAM[20]), Mode_run2@word(BANK0[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 20
		 -> STR_10(CODE[19]), STR_9(CODE[3]), STR_7(CODE[11]), Mode_run@word(BANK0[20]), 
		 -> STR_5(CODE[3]), run@word(BANK0[20]), STR_3(CODE[18]), STR_2(CODE[3]), 
		 -> STR_1(CODE[3]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(BANK0[20]), 


Critical Paths under _main in COMRAM

    _Mode_turn->_UART_Write_Text
    _Mode_run2->_run
    _strcpy->_GetString
    _GetString->_UART_Write
    _Mode_run->_run
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->_ADC_Read
    _UART_Write_Text->_UART_Write
    ___awdiv->___wmul

Critical Paths under _Lo_ISR in COMRAM

    _Lo_ISR->i1_UART_Write_Text
    i1_UART_Write_Text->i1_UART_Write
    _MyusartRead->i1_UART_Write

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Mode_run
    _Mode_run2->_run
    _Mode_run->_run
    _run->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   43871
                     _ADC_Initialize
                        _ClearBuffer
                          _GetString
                        _Mode_degree
                           _Mode_run
                          _Mode_run2
                          _Mode_turn
                    _UART_Initialize
                             _strcmp
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               5     1      4     872
                                             16 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode_turn                                            2     2      0     770
                                             23 COMRAM     2     2      0
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _Mode_run2                                           20    20      0   15230
                                             55 BANK0     20    20      0
                        _ClearBuffer
                          _GetString
                               _atoi
                                _run
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              10     6      4     552
                                             22 COMRAM    10     6      4
                          _GetString (ARG)
 ---------------------------------------------------------------------------------
 (2) _GetString                                            5     3      2     113
                                             17 COMRAM     5     3      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (1) _Mode_run                                            23    23      0   26266
                                             55 BANK0     23    23      0
                           _ADC_Read
                        _ClearBuffer
                         _UART_Write
                    _UART_Write_Text
                            ___awdiv
                             ___wmul
                                _run
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _run                                                 28    28      0   12343
                                             91 COMRAM     1     1      0
                                             30 BANK0     25    25      0
                        _ClearBuffer
                         _UART_Write
                    _UART_Write_Text
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6   11227
                                             16 BANK0     14     8      6
                           _ADC_Read (ARG)
                            ___awdiv (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   10555
                                             89 COMRAM     2     2      0
                                             10 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    40      6   10058
                                             79 COMRAM    10     4      6
                                              0 BANK0     10    10      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5683
                                             43 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3417
                                             32 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     220
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1537
                                             25 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4    1037
                                             16 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                             34 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     613
                                             16 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     625
                                             16 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2065
                                             28 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     259
                                             16 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     281
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     872
                                             22 COMRAM     6     2      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     770
                                             17 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ClearBuffer                                          2     2      0      68
                                             16 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                             28 COMRAM     8     4      4
                           _ADC_Read (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2     175
                                             16 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Mode_degree                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Lo_ISR                                              9     9      0     205
                                              7 COMRAM     9     9      0
                        _MyusartRead
                  i1_UART_Write_Text
 ---------------------------------------------------------------------------------
 (12) i1_UART_Write_Text                                   6     4      2     138
                                              1 COMRAM     6     4      2
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (12) _MyusartRead                                         1     1      0      67
                                              1 COMRAM     1     1      0
                       i1_UART_Write
 ---------------------------------------------------------------------------------
 (13) i1_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _Hi_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ClearBuffer
   _GetString
     _UART_Write
   _Mode_degree
   _Mode_run
     _ADC_Read
     _ClearBuffer
     _UART_Write
     _UART_Write_Text
       _UART_Write
     ___awdiv
       _ADC_Read (ARG)
       ___wmul (ARG)
         _ADC_Read (ARG)
     ___wmul
     _run
       _ClearBuffer
       _UART_Write
       _UART_Write_Text
       _sprintf
         _ADC_Read (ARG)
         ___awdiv (ARG)
         _vfprintf (ARG)
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
             _isdigit
     _sprintf
   _Mode_run2
     _ClearBuffer
     _GetString
     _atoi
     _run
     _strcpy
       _GetString (ARG)
   _Mode_turn
     _UART_Write_Text
   _UART_Initialize
   _strcmp
   _strcpy

 _Lo_ISR (ROOT)
   _MyusartRead
     i1_UART_Write
   i1_UART_Write_Text
     i1_UART_Write

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      20       6       12.5%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     4E      78       4       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     5C      6C       1       85.7%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     104      14        0.0%
DATA                 0      0     104      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 19 15:08:27 2022

                        l62 1C4E                          l70 164A                          l72 1658  
                        l65 1C60                          l81 173A                          l74 16BC  
                        l59 1C06                          l86 1A5E                ___awdiv@sign 0022  
                        bsr 000FE0         ___wmul@multiplicand 0019                run@now_state 00B2  
                       l142 1ADC                         l230 12F6                         l136 1C4A  
                       l224 126C                         l241 1B4A                         l226 126E  
                       l139 1AAE                         l227 12AA                         l404 10CC  
                       l253 1C84                         l229 12F8                         l238 13EC  
                       l256 1BDE                         l508 157A                         l277 1C2C  
                       l391 0F68                         l982 1B14                         l990 19D8  
                       l976 0DD8                         l979 0DE0                         _PR2 000FCB  
                       _abs 1A60                         _pad 157C                         _run 1200  
                       _str 00D0                         wreg 000FE8                        l1000 1986  
                      l1031 15C0                        l1105 14B6                        l1113 1A1C  
                      l1034 1602                        l1042 06F8                        l1130 18E2  
                      ?_abs 0023                        l1116 1C82                        l1036 163C  
                      l1044 0700                        l1124 1828                        l1062 0936  
                      l2200 16CA                        l1136 1B80                        l3000 10EC  
                      l2202 16FA                        l1090 1A96                        l3010 1112  
                      l3002 10F0                        l2212 1A26                        l2204 16FE  
                      l3020 1190                        l3004 10F4                        l1093 1A9E  
                      l1085 187E                        l2214 1A36                        l2206 1A1E  
                      l1086 1886                        l2310 1898                        l3030 11F4  
                      l3022 1198                        l3014 113C                        l3006 10F8  
                      l1079 0BE8                        l2320 14D6                        l2312 14B8  
                      l2216 1A3A                        l2240 167C                        l2232 163E  
                      l3024 11BE                        l3016 1162                        l3008 10FA  
                      l2330 150A                        l2322 14E4                        l2314 14BC  
                      l2218 1A56                        l2234 165E                        l3026 11C6  
                      l3018 116A                        l2260 1AAC                        l2340 1544  
                      l2332 1512                        l2324 14EC                        l2316 14CA  
                      l3052 0CE2                        l2244 1688                        l2236 1664  
                      l2308 1888                        l3028 11EC                        l2430 1C84  
                      l2262 1ABC                        l2254 1AA0                        l2350 156A  
                      l2342 154C                        l2334 151A                        l2326 14F0  
                      l2318 14D2                        l2246 1698                        l2238 1676  
                      l2264 1AD2                        l2256 1AA2                        l2352 1572  
                      l2344 154E                        l2336 1528                        l2328 14F8  
                      l2248 169C                        l2432 1BB6                        l2360 1BE0  
                      l2440 17BA                        l2266 1AD4                        l2258 1AAA  
                      l2346 1554                        l2338 152E                        l2186 1C4E  
                      l2602 1C08                        l2610 0DE6                        l2434 1BB8  
                      l2370 1BFA                        l2362 1BF0                        l2442 17BE  
                      l2348 155A                        l2188 1C5C                        l2604 1C24  
                      l2700 1ADE                        l2620 0E46                        l2612 0DF4  
                      l2436 1BD0                        l2380 1C04                        l2372 1BFC  
                      l2364 1BF4                        l2444 17C6                        l2382 1C2E  
                      l2198 16BE                        l2630 0E90                        l2622 0E4A  
                      l2614 0E14                        l2710 15AC                        l2438 1BD2  
                      l2374 1BFE                        l2366 1BF6                        l2446 17EE  
                      l2384 1C30                        l2640 0F00                        l2632 0E9E  
                      l2624 0E56                        l2616 0E18                        l2608 0DE2  
                      l2720 1610                        l2712 15B8                        l2704 157C  
                      l2800 07C8                        l2376 1C00                        l2368 1BF8  
                      l2448 1806                        l2386 1C34                        l2730 0BEA  
                      l2642 0F12                        l2634 0EB0                        l2626 0E74  
                      l2618 0E26                        l2570 13EE                        l2722 1624  
                      l2714 15CC                        l2706 158A                        l2810 0870  
                      l2802 07CE                        l2378 1C02                        l2740 0C80  
                      l2732 0BFE                        l2636 0EDE                        l2628 0E7C  
                      l2644 0F18                        l2660 0FA0                        l2652 0F6A  
                      l2580 1470                        l2572 1400                        l2716 15E0  
                      l2708 159E                        l2820 08D2                        l2812 088A  
                      l2804 07D4                        l2900 1862                        l2750 0CA8  
                      l2742 0C84                        l2734 0C02                        l2646 0F28  
                      l2638 0EFE                        l2670 1008                        l2662 0FAE  
                      l2654 0F6E                        l2726 1A60                        l2574 1412  
                      l2590 19FC                        l2718 15E4                        l2822 08D8  
                      l2830 090E                        l2814 08A4                        l2806 0838  
                      l2910 1974                        l2902 1936                        l2752 0CB0  
                      l2736 0C06                        l2648 0F48                        l2672 1016  
                      l2680 107C                        l2664 0FCE                        l2656 0F7C  
                      l2728 1A7A                        l2576 141C                        l2584 19DA  
                      l2592 1B4C                        l2824 08EA                        l2808 0852  
                      l2816 08B2                        l2840 097A                        l2904 1948  
                      l2920 120E                        l2690 198C                        l2762 0D98  
                      l2754 0CF8                        l2746 0C8A                        l2738 0C36  
                      l2682 108C                        l2674 1044                        l2666 0FEC  
                      l2658 0F9C                        l2578 143A                        l2586 19E6  
                      l2594 1B58                        l2826 08F6                        l2818 08C4  
                      l2850 09F4                        l2842 097E                        l2834 0938  
                      l2906 1950                        l2930 1260                        l2922 1210  
                      l2914 1200                        l2692 19A0                        l2764 0DAA  
                      l2748 0CA0                        l2684 10AC                        l2676 1064  
                      l2668 0FF4                        l2588 19F8                        l2596 1B5C  
                      l2828 08FE                        l2780 06D0                        l2772 065A  
                      l2852 0A14                        l2860 0A7C                        l2844 09A2  
                      l2836 095C                        l2908 1958                        l2940 1298  
                      l2932 1266                        l2924 1220                        l2916 1204  
                      l2694 19CE                        l2766 0DBC                        l2758 0D46  
                      l2678 1076                        l2598 1B74                        l2790 0728  
                      l2782 06D2                        l2774 067A                        l2870 0B46  
                      l2862 0AA0                        l2854 0A22                        l2846 09D8  
                      l2838 096A                        l2942 12A4                        l2934 127C  
                      l2926 123C                        l2950 12DA                        l2918 1204  
                      ?_pad 0021                        l2696 19D2                        l2688 1988  
                      l2792 072E                        l2784 06EC                        l2776 06A2  
                      l2872 0B6A                        l2880 0B98                        l2864 0AC4  
                      l2848 09E6                        l2936 1280                        l2928 124E  
                      l2960 131C                        l2952 12FA                        l2794 0736  
                      l2786 0708                        l2778 06C2                        l2882 0BA6  
                      l2874 0B78                        l2866 0B0E                        l2858 0A6A  
                      l2946 12B2                        l2938 1292                        l2970 13D0  
                      l2962 1330                        l2954 12FE                        l2796 0740  
                      l2788 071A                        l2876 0B8C                        l2948 12CE  
                      l2972 13D8                        l2964 133A                        l2956 130A  
                      l2980 1B32                        l2798 0746                        l2886 0BB2  
                      l2894 182A                        l2966 137C                        l2974 13E8  
                      l2958 1318                        l2982 1B46                        l2990 10DA  
                      l2888 0BD6                        l2896 1832                        l2968 139A  
                      l2976 1B16                        l2992 10DE                        l2984 10CE  
                      l2898 183E                        l2978 1B1A                        l2994 10E2  
                      l2986 10D6                        l2996 10E6                        l2988 10D8  
                      l2998 10EA                        _ADFM 007E07                        STR_1 0655  
                      ?_run 0001                        STR_2 0652                        STR_3 0614  
                      STR_4 0638                        STR_5 0652                        STR_6 0638  
                      STR_7 0626                        _CREN 007D5C                        u2030 17EE  
                      u2031 17EA                        u2200 143A                        u2040 1806  
                      u2201 1436                        u2041 1802                        u2210 1470  
                      u2211 146C                        u2300 0F28                        u2220 1A1C  
                      u2301 0F24                        u2221 1A18                        u2310 0F7C  
                      u2230 1B74                        u2311 0F78                        u2231 1B70  
                      u2400 1B10                        u2240 0DF4                        u2320 0FAE  
                      _LATD 000F8C                        u2241 0DF0                        u2321 0FAA  
                      u2250 0E26                        u2330 0FEC                        u2410 158A  
                      u2251 0E22                        u2331 0FE8                        u2411 1586  
                      u2500 0C9C                        u2340 1016                        u2180 1400  
                      u2420 15AC                        u2501 0C98                        u2261 0E50  
                      u2341 1012                        u2181 13FC                        u2421 15A8  
                      u2510 0CD0                        u2270 0E74                        u2350 1044  
                      u2190 1412                        u2430 1602                        u2271 0E70  
                      u2351 1040                        u2191 140E                        u2431 15FE  
                      u2520 0D2C                        u2280 0E9E                        u2360 108C  
                      u2440 1610                        u2600 06A2                        u1800 1658  
                      u2281 0E9A                        u2361 1088                        u2441 160C  
                      u2601 069E                        u1801 1654                        u2370 19A0  
                      u2530 0D6E                        u2290 0EDE                        u2450 1A7A  
                      u2610 06D0                        u1810 1676                        u2371 199C  
                      u2291 0EDA                        u2451 1A76                        u2611 06CC  
                      u1811 1672                        u1740 1C5C                        u2380 19CE  
                      u2540 0D92                        u2460 0C26                        u2700 08C4  
                      u2620 06EC                        u1820 16B8                        u1900 18D0  
                      u1741 1C58                        u2381 19CA                        u2541 0D8C  
                      u2517 0CC6                        u2701 08C0                        u2621 06E8  
                      u1821 16B4                        u1830 1ABC                        u2390 1B0E  
                      u2550 0D94                        u2470 0C36                        u2710 08D2  
                      u2630 071A                        u1910 18E2                        u1831 1AB8  
                      u2391 1B08                        u2527 0D22                        u2471 0C32  
                      u2711 08CE                        u2631 0716                        u1911 18DE  
                      u1920 14CA                        u1760 16F6                        u2560 0DAA  
                      u2480 0C5E                        u2720 08EA                        u2640 0728  
                      u2800 0AC4                        u1921 14C6                        u2561 0DA6  
                      u2537 0D64                        u2721 08E6                        u2641 0724  
                      u2801 0AC0                        u1930 14E4                        u1770 172A  
                      u2570 0DBC                        u2490 0C80                        u2650 0852  
                      u2810 0B6A                        u2730 095C                        u1931 14E0  
                      u2571 0DB8                        u2491 0C7C                        u2467 0C1C  
                      u2651 084E                        u2811 0B66                        u2731 0958  
                      u1907 18C6                        u1940 150A                        u1780 173A  
                      u2660 0870                        u2580 068A                        u2740 09A2  
                      u2820 187E                        u2900 1330                        u1941 1506  
                      u1781 1736                        u2661 086C                        u2581 0684  
                      u2741 099E                        u2821 187A                        u2901 132C  
                      u1950 1528                        u1790 1A56                        u2670 088A  
                      u2590 068C                        u2750 09E6                        u2830 1232  
                      u2910 1138                        u1951 1524                        u1791 1A52  
                      u1767 16EC                        u2487 0C54                        u2671 0886  
                      u2751 09E2                        u2831 122A                        u2911 1134  
                      u1960 1544                        u2680 08A4                        u2760 0A62  
                      u2840 124E                        u2920 1162                        u1961 1540  
                      u1777 1720                        u2681 08A0                        u2761 0A5C  
                      u2841 124A                        u2921 115E                        u1970 156A  
                      u2690 08B2                        u2770 0A64                        u2850 1260  
                      u2930 1190                        u1971 1566                        u2691 08AE  
                      u2851 125C                        u2931 118C                        u2780 0A7C  
                      u2860 127C                        u2940 11BE                        u2781 0A78  
                      u2861 1278                        u2941 11BA                        u2790 0AA0  
                      u2870 1292                        u2838 1234                        u2950 11EC  
                      u2791 0A9C                        u2871 128E                        u2951 11E8  
                      u2880 12F6                        u2881 12F2                        u2890 1318  
                      u2891 1314                        _RCIF 007CF5                        i1l62 1C64  
                      u2967 1BC2                        i1l65 1C76                        i1l81 17B8  
                      u2977 13D2                        i1l91 1B90                        i1l93 1BB4  
                      i1l89 1B82                        abs@a 0023                        _dbuf 0100  
                      _atoi 0BEA                        _main 10CE                        _dtoa 065A  
                      _prec 0061                        _time 00CE                        _nout 005D  
                      pad@i 0028                        pad@p 0025                        fsr0h 000FEA  
                      fsr1h 000FE2                        indf0 000FEF                        fsr2h 000FDA  
                      fsr0l 000FE9                        indf2 000FDF                        fsr1l 000FE1  
                      pad@w 002A                        fsr2l 000FD9                        btemp 006D  
          __end_of_ADC_Read 1ADE                        run@c 00B6                        prodh 000FF4  
                      prodl 000FF3                        start 00A8                ___param_bank 000000  
   __end_of_UART_Write_Text 173C                       ??_abs 0025                       ??_pad 0027  
                     ??_run 005C            ?_UART_Initialize 0001             __end_of___aodiv 0F6A  
                     ?_atoi 001D                       ?_main 0001                       ?_dtoa 002C  
           __end_of___aomod 10CE             __end_of___awdiv 157C                       STR_10 0601  
                     STR_11 063E                       STR_12 0631                       STR_13 0649  
                     STR_14 064E                       STR_15 0644             ___awdiv@divisor 001F  
                     _T2CON 000FCA                       _IRCF0 007E9C                       _IRCF1 007E9D  
                     _IRCF2 007E9E                       i1l101 0080                       i2l219 1C7A  
           ___awdiv@counter 0021                       _RCREG 000FAE                vfpfcnvrt@fmt 0052  
                     _SPBRG 000FAF                       _TRISA 000F92                       _TRISB 000F93  
                     _TRISD 000F95                       _TXREG 000FAD                 ?_UART_Write 0001  
             ??_Mode_degree 0011                       _flags 0063                       _fputc 13EE  
                     _fputs 19DA             __end_of_isdigit 1B16                       atoi@n 002A  
                     pad@fp 0021                       atoi@s 001D                       _width 005F  
                     _putch 1C82                       dtoa@d 002E                       dtoa@i 004E  
                     dtoa@n 0046                       dtoa@p 0040                       dtoa@s 0044  
                     dtoa@w 0042                 _ClearBuffer 1A1E             __end_of_isspace 19DA  
                     tablat 000FF5                       ttemp5 006E                       ttemp6 0071  
                     ttemp7 0075                       status 000FD8                       wtemp8 006E  
           __end_of_sprintf 1988                MyusartRead@c 0002             __initialization 18E4  
              __end_of_atoi 0DE2                __end_of_main 1200                __end_of_dtoa 0938  
          __end_of_Mode_run 13EE                      ??_atoi 001F                      ??_main 005D  
                    ??_dtoa 0036               __activetblptr 000002          __size_of_GetString 0080  
        i1UART_Write_Text@i 0006                      _ADCON1 000FC1                      ?_fputc 0011  
                    ?_fputs 001A                      _ADRESH 000FC4                      _ADRESL 000FC3  
                    _CCPR1L 000FBE            ___awdiv@dividend 001D                      ?_putch 0001  
                    i1l2356 1C64                      i1l2452 173C                      i1l2358 1C72  
                    i1l2390 1B96                      i1l2454 1748                      i1l2470 004C  
                    i1l2392 1BA8                      i1l2456 1778                      i1l2480 007E  
                    i1l2472 005A                      i1l2394 1BAE                      i1l2458 177C  
                    i1l2474 0060                      i1l2388 1B82                      i1l2476 0064  
                    i1l2468 003E                      i1l2478 0072         __end_of_Mode_degree 1C86  
                    _Hi_ISR 0008                      _Lo_ISR 0018          __size_of_Mode_run2 0036  
        __size_of_Mode_turn 002A                vfprintf@cfmt 005A         __size_of_UART_Write 0016  
                 ??___aodiv 0021                   ??___aomod 0021                      ___wmul 1C08  
                 ??___awdiv 0021            ?_UART_Write_Text 0012                      _degree 006B  
           ADC_Read@channel 0011                      _lenStr 0067             ADC_Read@digital 0015  
                    clear_0 190A                      clear_1 1916                      clear_2 1922  
          ___awdiv@quotient 0023                      isa$std 000001                      pad@buf 0023  
                    dtoa@fp 002C                      _strcmp 17BA                      _strcpy 1888  
                    _strlen 1B4C                      fputc@c 0011                      fputs@c 001E  
                    fputs@i 001F                __pdataCOMRAM 0069                      fputs@s 001A  
                 ??_isdigit 0013                   ?_ADC_Read 0011                __mediumconst 0000  
                 ??_isspace 0013                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8               _Mode_run$2073 00CB                      run@cur 00B4  
                    putch@c 0001            __end_of_vfprintf 1888                   ??_sprintf 005C  
                __accesstop 0080     __end_of__initialization 1928               ___rparam_used 000001  
         __end_of_GetString 16BE               ?i1_UART_Write 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 14B8               __end_of_fputs 1A1E               __end_of_putch 1C84  
                ??_ADC_Read 0013               ??_MyusartRead 0002           __end_of_Mode_run2 1B4C  
         __end_of_Mode_turn 1BE0                 _Mode_degree 1C84                     ??_fputc 0015  
                   ??_fputs 001E                     ??_putch 0011                  __pbssBANK0 00CE  
                __pbssBANK1 0100       i1UART_Write_Text@text 0002                   ?_Mode_run 0001  
                   ?_Hi_ISR 0001                     ?_Lo_ISR 0001              ??i1_UART_Write 0001  
                   ?___wmul 0017                     _CCP1CON 000FBD     __size_of_ADC_Initialize 001E  
                   ?_strcmp 0011                     ?_strcpy 0017                     ?_strlen 0011  
              ??_UART_Write 0011          __size_of_vfpfcnvrt 02B2                ?_ClearBuffer 0001  
       __end_of_MyusartRead 1BB6                  ??_Mode_run 005D                Mode_run@word 00B7  
           __size_of_Hi_ISR 1C76             __size_of_Lo_ISR 0090                     __Hparam 0000  
                   __Lparam 0000                     ___aodiv 0DE2                     ___aomod 0F6A  
                   ___awdiv 14B8             __size_of___wmul 0026          __end_of_UART_Write 1C62  
                 ?_vfprintf 008A                __psmallconst 0600                     __pcinit 18E4  
                   __ramtop 0600                     __ptext0 10CE                     __ptext1 17BA  
                   __ptext2 1BE0                     __ptext3 1BB6                     __ptext4 1B16  
                   __ptext5 1888                     __ptext6 163E                     __ptext7 12FA  
                   __ptext8 1200                     __ptext9 1936             __size_of_strcmp 0070  
           __size_of_strcpy 005C             __size_of_strlen 0036                __size_of_abs 0040  
              __size_of_pad 00C2                     _isdigit 1ADE                __size_of_run 00FA  
  __size_of_UART_Initialize 0028                     _isspace 1988                     atoi@neg 0023  
                   _sprintf 1936              __pintcode_body 1C78        end_of_initialization 1928  
                   fputc@fp 0013               __Lmediumconst 0000                     int_func 1C78  
                   fputs@fp 001C           __end_of_vfpfcnvrt 0BEA                   _RCSTAbits 000FAB  
                   run@word 009E                     postdec1 000FE5                     postdec2 000FDD  
                   postinc0 000FEE                     postinc1 000FE6                     postinc2 000FDE  
                _poker_time 0069                  ??_vfprintf 005A                     strcmp@l 0011  
                   strcmp@r 0013                     strcpy@d 001F                     strlen@a 0013  
                   strcpy@s 001D                     strlen@s 0011                   _PORTAbits 000F80  
                 _PORTBbits 000F81              UART_Write@data 0011                   _TRISAbits 000F92  
                 _TRISCbits 000F94                 _MyusartRead 1B82        __end_ofi1_UART_Write 1C78  
         __size_of_ADC_Read 003E                   _TXSTAbits 000FAC              __end_of_Hi_ISR 1C7E  
            __end_of_Lo_ISR 00A8                   _GetString 163E                 vfpfcnvrt@ap 0054  
               vfpfcnvrt@fp 0050                 vfpfcnvrt@ll 0080              __end_of___wmul 1C2E  
         i1_UART_Write_Text 173C                 _BAUDCONbits 000FB8                   Mode_run@c 00CD  
             __pidataCOMRAM 1C7E              _ADC_Initialize 1C2E          ?i1_UART_Write_Text 0002  
  __size_of_UART_Write_Text 007E              __end_of_strcmp 182A              __end_of_strcpy 18E4  
            __end_of_strlen 1B82         start_initialization 18E4                 __end_of_abs 1AA0  
               __end_of_pad 163E                ?_Mode_degree 0001                 __end_of_run 12FA  
       ??i1_UART_Write_Text 0004                ClearBuffer@i 0011                   _Mode_run2 1B16  
                 _Mode_turn 1BB6           ??_UART_Initialize 0011        __size_of_ClearBuffer 0042  
                  ??_Hi_ISR 0001                    ??_Lo_ISR 0008           __size_of_Mode_run 00F4  
               vfprintf@fmt 008C   __end_ofi1_UART_Write_Text 17BA                    ??___wmul 001B  
    __end_of_ADC_Initialize 1C4C                  ?_GetString 0012                    ??_strcmp 0015  
                  ??_strcpy 001B                    ??_strlen 0013                 __pbssCOMRAM 005D  
             __pcstackBANK0 0080            ___aodiv@dividend 0011                  ?_Mode_run2 0001  
                ?_Mode_turn 0001                   _atoi$1694 0025                   _atoi$1695 0029  
                 _atoi$1696 0027                   _dtoa$1791 003E                   __pintcode 0008  
                  ?___aodiv 0011                    ?___aomod 0011                    ?___awdiv 001D  
          ___aodiv@quotient 0023             ?_ADC_Initialize 0001                 __pintcodelo 0018  
     __size_ofi1_UART_Write 0016           __size_of_vfprintf 005E                 __smallconst 0600  
                  ?_isdigit 0011                    _ADC_Read 1AA0                    ?_isspace 0011  
                  ?_sprintf 0090              __size_of_fputc 00CA              __size_of_fputs 0044  
            __size_of_putch 0002           ??_UART_Write_Text 0014              ___wmul@product 001B  
                  _LATDbits 000F8C                    _IPR1bits 000F9F                    _PIE1bits 000F9D  
                  i1u200_20 1BA8                    i1u200_21 1BA4                    i1u210_20 0072  
                  i1u210_21 006E                    i1u205_20 1774                    i1u205_27 176A  
                  i1u206_20 17A8                    i1u206_27 179E                    i1u207_20 17B8  
                  i1u207_21 17B4                    i1u208_20 004C                    i1u208_21 0048  
                  i1u209_20 005A                    i1u209_21 0056                    i1u198_20 1C72  
                  i1u198_21 1C6E                    i1u199_20 1B90                    i1u199_21 1B8C  
                  _PIR1bits 000F9E                i1_UART_Write 1C62  __size_ofi1_UART_Write_Text 007E  
               ??_GetString 0014                   _vfpfcnvrt 0938                  _ADCON0bits 000FC2  
                _ADCON2bits 000FC0           ___wmul@multiplier 0017                   _step_size 0065  
             Mode_run2@word 00B7                ?_MyusartRead 0001                _isspace$1712 0017  
               _INTCON2bits 000FF1                   copy_data0 18F8                 ??_Mode_run2 005D  
               ??_Mode_turn 0018        __size_of_Mode_degree 0002            i1UART_Write@data 0001  
                  _Mode_run 12FA                    __Hrparam 0000                  vfprintf@ap 008E  
                  __Lrparam 0000                  vfprintf@fp 008A            __size_of___aodiv 0188  
          __size_of___aomod 0164            __size_of___awdiv 00C4                  ?_vfpfcnvrt 0050  
           ___aodiv@divisor 0019             ___aodiv@counter 0021             _UART_Initialize 1BE0  
                sprintf@fmt 0092            __size_of_isdigit 0038            __size_of_isspace 0052  
                  __ptext10 182A                    __ptext11 0938                    __ptext20 0DE2  
                  __ptext12 065A                    __ptext21 0BEA                    __ptext13 157C  
                  __ptext30 1C84                    __ptext22 1988                    __ptext14 1B4C  
                  __ptext31 1C2E                    __ptext23 1ADE                    __ptext15 19DA  
                  __ptext24 1C08                    __ptext16 13EE                    __ptext33 173C  
                  __ptext25 16BE                    __ptext17 1C82                    __ptext34 1B82  
                  __ptext26 1C4C                    __ptext18 1A60                    __ptext35 1C62  
                  __ptext27 1A1E                    __ptext19 0F6A                    __ptext28 14B8  
                  __ptext29 1AA0            __size_of_sprintf 0052                  strcpy@dest 0017  
       UART_Write_Text@text 0012               __size_of_atoi 01F8               __size_of_main 0132  
             __size_of_dtoa 02DE                    isa$xinst 000000                    int$flags 006D  
                  _vfprintf 182A                    _mystring 00E4            ___aomod@dividend 0011  
            _vfpfcnvrt$1806 0088                  _INTCONbits 000FF2                    isdigit@c 0011  
             ??_ClearBuffer 0011                    intlevel1 0000                    intlevel2 0000  
                 sprintf@ap 0096                    isspace@c 0011                   strcpy@src 0019  
          ??_ADC_Initialize 0011                  _OSCCONbits 000FD3     __end_of_UART_Initialize 1C08  
           ___aomod@divisor 0019                 ??_vfpfcnvrt 0056             ___aomod@counter 0021  
           _UART_Write_Text 16BE                    sprintf@f 0098                    sprintf@s 0090  
                GetString@c 0016                  GetString@i 0014                  _UART_Write 1C4C  
      __size_of_MyusartRead 0034                ___aodiv@sign 0022            UART_Write_Text@i 0016  
       __end_of_ClearBuffer 1A60                ___aomod@sign 0022  
